[
  {
    "objectID": "index.en.html",
    "href": "index.en.html",
    "title": "Introduction to urban accessibility",
    "section": "",
    "text": "Accessibility is the ease with which people can reach places and opportunities such as jobs, health and education services, cultural activities, green areas, etc. The accessibility conditions of a city or neighborhood depend on the efficiency and connectivity of the transport network and on the proximity between people and activities. The topic of accessibility has been receiving increasing attention from transportation agencies, funding institutions, decision makers and researchers in the fields of urban and transport planning (Papa et al. 2015; Boisjoly and El-Geneidy 2017). In the last few years, we have seen a growing number of scientific papers (Miller 2018; van Wee 2021) and books (Levine, Grengs, and Merlin 2019; Levinson and King 2020) that deepen our understanding of urban accessibility issues. However, there are currently no books or articles that serve simultaneously as introductory material to the subject and as a practical manual to teach computational methods to calculate and analyze accessibility data. The lack of this type of material helps to explain, at least in part, why several transportation agencies and analysts still face challenges to incorporate accessibility issues and indicators into the day-to-day planning and research practice (Silva et al. 2017; Büttner 2021).\nThe aim of this book is to equip its readers with the fundamental concepts, the data analysis skills and the processing tools needed to perform urban accessibility analyses and transportation projects impact assessments. The book was written with the problems faced by public managers, policy makers, students and researchers working on urban and transportation planning in mind. Hence, the book is essentially practical. All the material in the book is presented with reproducible examples using open data sets and the R programming language."
  },
  {
    "objectID": "index.en.html#book-structure",
    "href": "index.en.html#book-structure",
    "title": "Introduction to urban accessibility",
    "section": "Book structure",
    "text": "Book structure\nThis book is divided into 5 sections:\n\n\n\n\n\nSection\nDescription\n\n\n\n\n1: Introduction to urban accessibility\nThe first section presents the concept of urban accessibility, clarifies the differences between accessibility and mobility, and presents the main indicators used in the literature to measure urban accessibility.\n\n\n2: How to measure urban accessibility\nThe second section teaches how to calculate urban accessibility estimates in R using open data and the {r5r} and {accessibility} packages, and how to visualize the results with maps and charts.\n\n\n3: Public transport data\nThe third section presents the GTFS specification of public transport data, and shows how to work and analyze GTFS data using the {gtfstools} package.\n\n\n4: Impact assessment of transportation projects\nThe fourth section brings a case study to illustrate how the combined knowledge of previous chapters can be used to assess the impact of transportation policies on urban accessibility conditions.\n\n\n5: Data from the Access to Opportunity Project\nFinally, the fifth section shows how to download, analyze and visualize the data of the Access to Opportunities Project (AOP), which brings detailed data on land-use patterns & accessibility for Brazilian cities."
  },
  {
    "objectID": "index.en.html#reproducing-the-book-in-your-computer",
    "href": "index.en.html#reproducing-the-book-in-your-computer",
    "title": "Introduction to urban accessibility",
    "section": "Reproducing the book in your computer",
    "text": "Reproducing the book in your computer\nTo reproduce the book in your local machine, you must first download its source code. This can be done with git or manually, by clicking on the following link: https://github.com/ipeaGIT/intro_access_book/archive/refs/heads/main.zip. If you choose the second approach, you must also unzip the contents of the .zip file to a new folder.\n\n\n\n\n\n\nThis book was written with the Quarto publishing system. All the code used to write and publish it can be found in this repository.\n\n\n\nTo render the book, you must have Quarto installed on your computer. Reproducing the chapters also requires the {renv} R package, which manages the book dependencies.\nAfter installing book dependencies, you can render each chapter as you would normally render any Quarto/Rmarkdown file. To run all chapters at once, use one of the following commands:\nquarto::quarto_preview()\n\nquarto::quarto_render()\nFor more details on how to install the book dependencies and or how to run the book content locally, please see the installation instructions in the book repository."
  },
  {
    "objectID": "index.en.html#running-the-book-examples-in-the-cloud-with-binder",
    "href": "index.en.html#running-the-book-examples-in-the-cloud-with-binder",
    "title": "Introduction to urban accessibility",
    "section": "Running the book examples in the cloud with binder",
    "text": "Running the book examples in the cloud with binder\nA binder is a tool that allows one to use a browser, such as Chrome and Firefox, to run code in the cloud. The book is set up so that its code can be run using a server published by mybinder. To do this, click the icon below: after a few moments, an RStudio Cloud session will start running on your browser. This session includes all the files and data needed to run the code.\n\n\nPlease note that mybinder sessions are limited to 2 GB of RAM. This restriction can prevent Chapter 6 from running properly. If you use binder, we suggest that you do not attempt to render the entire book with the Quarto, as shown above."
  },
  {
    "objectID": "index.en.html#license",
    "href": "index.en.html#license",
    "title": "Introduction to urban accessibility",
    "section": "License",
    "text": "License\n The material in this book may be reproduced and displayed for educational or informational purposes, provided credit is given to the original authors and the original work is cited. This book can be shared on websites and free and open online repositories only if it is made clear to users the terms of use of this material and who the copyright holder is, the Institute for Applied Economic Research (Ipea). Any commercial or for-profit use is prohibited. The creation of derivative works is prohibited. This license is based on studies about the Brazilian Copyright Law (Law 9.610/1998)."
  },
  {
    "objectID": "index.en.html#how-to-cite-the-book",
    "href": "index.en.html#how-to-cite-the-book",
    "title": "Introduction to urban accessibility",
    "section": "How to cite the book",
    "text": "How to cite the book\nIf you use the material in this book, please cite the book using the following reference:\n\nPereira, Rafael H. M. & Herszenhut, Daniel. (2023) Introduction to urban accessibility: a practical guide with R. Ipea - Institute of Applied Economic Research."
  },
  {
    "objectID": "index.en.html#acknowledgements",
    "href": "index.en.html#acknowledgements",
    "title": "Introduction to urban accessibility",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThis book was written under a partnership between the Institute for Applied Economic Research (Ipea) and the Secretariat of Mobility and Regional and Urban Development (SMDRU) of the Ministry of Regional Development (MDR) of the Brazilian federal government. The authors are grateful for the comments and suggestions from Lucas Mation. The authors would also like to thank the contributions of Anna Grigolon, Benjamin Büttner and Aaron Nichols for proofreading the English version of the book. Any remaining errors are the sole responsibility of the authors.\n\n\n\n\nBoisjoly, Geneviève, and Ahmed M. El-Geneidy. 2017. “How to Get There? A Critical Assessment of Accessibility Objectives and Indicators in Metropolitan Transportation Plans.” Transport Policy 55 (April): 38–50. https://doi.org/10.1016/j.tranpol.2016.12.011.\n\n\nBüttner, Benjamin. 2021. “Accessibility Tools for Transport Policy and Planning.” In International Encyclopedia of Transportation, edited by Roger Vickerman, 83–86. Oxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10618-9.\n\n\nLevine, Jonathan, Joe Grengs, and Louis A. Merlin. 2019. From Mobility to Accessibility: Transforming Urban Transportation and Land-Use Planning. Cornell University Press.\n\n\nLevinson, David, and David King. 2020. Transport Access Manual: A Guide for Measuring Connection Between People and Places. Committee of the Transport Access Manual, University of Sydney.\n\n\nMiller, Eric J. 2018. “Accessibility: Measurement and Application in Transportation Planning.” Transport Reviews 38 (5): 551–55. https://doi.org/10.1080/01441647.2018.1492778.\n\n\nPapa, Enrica, Cecilia Silva, Marco Te Brömmelstroet, and Angela Hull. 2015. “Accessibility Instruments for Planning Practice: A Review of European Experiences.” Journal of Transport and Land Use, June. https://doi.org/10.5198/jtlu.2015.585.\n\n\nSilva, Cecília, Luca Bertolini, Marco te Brömmelstroet, Dimitris Milakis, and Enrica Papa. 2017. “Accessibility Instruments in Planning Practice: Bridging the Implementation Gap.” Transport Policy 53 (January): 135–45. https://doi.org/10.1016/j.tranpol.2016.09.006.\n\n\nvan Wee, Bert. 2021. “Transport Modes and Accessibility.” In International Encyclopedia of Transportation, edited by Roger Vickerman, 32–37. Oxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10402-6."
  },
  {
    "objectID": "s1_intro.en.html",
    "href": "s1_intro.en.html",
    "title": "SECTION 1: Introduction to urban accessibility",
    "section": "",
    "text": "The purpose of this section is (1) to present the concept of urban accessibility, clarifying the difference between accessibility and mobility, and (2) to present an overview of the main indicators used to measure accessibility levels.\nHow many jobs can a person in a given location reach within an hour of travel using public transport? How long does it take for this person to get to the health center or the school closest to her home? The answers to these questions directly depend on local transport and urban development policies. These policies determine the urban accessibility conditions in each city - that is, the ease with which individuals can access opportunities such as employment, health and education services, cultural and leisure activities, among other types of activities. Accessibility, therefore, is simultaneously a result of the connectivity and performance of transport systems and the organization of cities in terms of the spatial distribution of their population, economic activities, and public services. Moving to accessibility-focused transport planning can help promote more sustainable and inclusive urban development. Throughout this section, we will look at the concept of urban accessibility in more detail, show why this concept is important to understand how cities function and present the indicators most commonly used to measure accessibility levels."
  },
  {
    "objectID": "1_conceito.en.html#definition-of-urban-accessibility",
    "href": "1_conceito.en.html#definition-of-urban-accessibility",
    "title": "1  What is accessibility?",
    "section": "1.1 Definition of urban accessibility",
    "text": "1.1 Definition of urban accessibility\nAccessibility is the ease with which people can reach places and opportunities – or, conversely, a characteristic of places and opportunities in terms of how easily they can be reached by the population (Geurs and van Wee 2004; Neutens et al. 2010).\nAccessibility conditions are influenced both by the spatial co-distribution of the population, economic activities and public services, as well as by the configuration and performance of the transport network. In this sense, urban accessibility plays a fundamental role in shaping people’s ability to move in order to access opportunities, such as jobs, schools, etc.\nUrban accessibility levels, therefore, are determined by three distinct components:\n\nInfrastructure: how easy it is to access activities depends on existing infrastructure and transportation services. This includes, for example, the spatial coverage and connectivity of the public transport and street networks, the existence of rapid transit services such as trains and subways, etc. Here, both the efficiency and the spatial and temporal connectivity of the transport network are of utmost importance.\nLand use: how easily activities can be accessed also depends on the spatial co-distribution of people and activities, such as schools, health services, leisure areas, etc. This component is related to the geographical proximity between people and opportunities: the further away an activity is, the more difficult it is to access it.\nPeople: finally, it is important to note that the individuals’ ability to access activities is also affected by their personal characteristics. Factors such as motor and cognitive difficulties, age, gender, race, and income, for example, can significantly influence people’s ability to get around, use certain transport modes, and move around the city without fear of some kind of violence or discrimination.\n\nThis last component can be of critical importance for equity and social inclusion analyses. However, the influence of people’s personal characteristics on accessibility conditions is usually better assessed through qualitative surveys: due to operational and computational challenges, this dimension of accessibility usually receives little attention from impact assessments of large-scale transportation projects. Chapter 2 discusses the operational, theoretical and communication advantages and disadvantages of different accessibility measures."
  },
  {
    "objectID": "1_conceito.en.html#difference-between-micro-accessibility-and-urban-accessibility",
    "href": "1_conceito.en.html#difference-between-micro-accessibility-and-urban-accessibility",
    "title": "1  What is accessibility?",
    "section": "1.2 Difference between micro-accessibility and urban accessibility",
    "text": "1.2 Difference between micro-accessibility and urban accessibility\nIn order to clarify the concepts we use throughout the book, it is important to distinguish between what we mean by urban accessibility and what is the colloquial use of the term accessibility.\nThe term accessibility is commonly used to refer to issues of universal design standards and regulations, as well as construction and planning practices aimed at the inclusion of people with different degrees of motor and cognitive challenges. This is usually understood as micro-accessibility, because it covers issues of access to services and activities at the micro scale - i.e. how the planning of public and private spaces, and the design of vehicles and buildings, for example, affect the ability of individuals to access places, services, products, etc.\nUrban accessibility, on the other hand, can be understood as macro-accessibility, because it deals with a broader understanding of access. When we talk about urban accessibility, we focus on how structural issues of planning and urban development, such as the configuration of transport corridors and the spatial distribution of people and activities, affect people’s ability to access opportunities. Urban accessibility addresses how the ability to access activities is influenced by people’s ability to use transportation technologies, by the spatial co-distribution of people and activities, and by the spatial coverage and connectivity of transportation networks.\nMicro-accessibility and macro-accessibility are complementary elements of a broader notion of accessibility. Micro-accessibility conditions, for example, directly affect the ability of people to board and use different modes of transport, to move safely on sidewalks, to cross streets, etc. It is of little use for a person to live in a region served by various transport modes if, for example, she has limited mobility and the transport network and vehicles are not adapted to these challenges. In this book, we will focus only on urban accessibility analyses and will often use the term accessibility as a synonym of macro-accessibility. It is important to recognize, however, that macro-accessibility alone provides only a limited account of one’s accessibility conditions, and a more nuanced understanding of accessibility requires a closer inspection of micro-accessibility conditions as well [Grisé et al. (2019); buliung2021more]."
  },
  {
    "objectID": "1_conceito.en.html#why-does-urban-accessibility-matter",
    "href": "1_conceito.en.html#why-does-urban-accessibility-matter",
    "title": "1  What is accessibility?",
    "section": "1.3 Why does urban accessibility matter?",
    "text": "1.3 Why does urban accessibility matter?\nThe concept of accessibility is central in transport and planning studies for different reasons. First, this concept explicitly articulates how the interaction between transport, urban development and land use policies impact people’s ability to access opportunities in cities. Moreover, access to opportunities and activities, such as jobs, education, and health services plays a fundamental role for the satisfaction of individual and social needs and promotion of social inclusion (Pereira and Karner 2021; Luz and Portugal 2022). Good accessibility is also a necessary condition, although not sufficient, for the expansion of people’s freedom of choice (Church, Frost, and Sullivan 2000; Lucas et al. 2016; van Wee 2022). The concept of accessibility helps us understand how transport and land use investments can have implications for issues related to social exclusion and wellbeing, such as the satisfaction of basic needs, freedom, and equity.\nAdditionally, the idea of accessibility brings to the forefront the spatial dimension of inequality of opportunities, which is a central problem of social justice. Urban accessibility helps to explicitly incorporate the notion of space into policy design to address these injustices (Farrington and Farrington 2005; Pereira, Schwanen, and Banister 2017). Thus, the notion of accessibility is fundamental for thinking about the equity implications of public policies and evaluating the distributive aspects of which social groups and which localities benefit from these policies.\nAs mentioned before, the levels of access to opportunities in a city are a joint result of each person’s ability to use transportation technologies, the spatial co-distribution of activities and population in the city, and the spatial and temporal connectivity of the transport network (Miller 2018; Páez, Scott, and Morency 2012). As such, an accessibility-oriented planning seeks to promote the integration between land use and the transport systems, increasing the proximity between people and activities and reducing the dependence on motorized modes of transport (Banister 2011). Planning cities and transport systems to improve accessibility conditions is therefore essential for the promotion of more inclusive and sustainable cities."
  },
  {
    "objectID": "1_conceito.en.html#difference-between-accessibility-and-mobility",
    "href": "1_conceito.en.html#difference-between-accessibility-and-mobility",
    "title": "1  What is accessibility?",
    "section": "1.4 Difference between accessibility and mobility",
    "text": "1.4 Difference between accessibility and mobility\nIt is important to clarify the difference between accessibility and another concept very present in our daily life: mobility. Unfortunately, the difference between these concepts is often ignored, even by researchers and planners who deal with these topics on a daily basis. After all, there is a great intersection between accessibility and what is meant by “urban mobility” as a broad field of research and public policy, and which deals with people’s daily mobility patterns, and the planning of public and individual transport systems, including the planning of cycling and pedestrian networks. In this context, it is not uncommon, for example, to hear that a given socioeconomic group “has less mobility” than another, when in fact one wants to say that this group has worse accessibility conditions. So, what is the difference between accessibility and mobility?\nIn the scientific literature on urban and transport planning, the concept of mobility refers to people’s daily travel behavior patterns – for example, the number of trips conducted, what transport modes are used, the average distance of trips or how much time people spent commuting to work. Information on mobility patterns is commonly collected through household travel surveys. More recently, new approaches such as GPS sensors from mobile phones and smart cards have also been increasingly used to examine daily mobility patterns (Anda, Erath, and Fourie 2017; Kandt and Batty 2021). Mobility data and analyses provide information about the travel patterns of different socioeconomic groups and how transport systems are used, which reflect important aspects of the economic and environmental performance of cities and population well-being.\nThe concept of accessibility, in turn, refers to the potential capability of reaching activities and opportunities. While a mobility analysis would focus, for example, on the time people spend on their daily commute to work, an accessibility analysis would examine, for example, the quantity and variety of jobs one could potentially reach within a reasonable travel cost. Accessibility addresses how easy/feasible it is to reach a location, while mobility deals with the means of movement used to reach a location. Accessibility levels are therefore potential measures, while mobility data describe real, observed travel behavior.\nTraditionally, urban and transport planning focuses on mobility (Banister 2011; Vasconcellos 2018; Levinson and King 2020). Even today, the focus on mobility motivates policies to prioritize the movement of cars, and to increase the speed and flow of traffic as a means to tackle congestion and reduce travel times (Levine, Grengs, and Merlin 2019). These policies, however, tend to focus on mobility metrics: increasing the number of trips, increasing the average speed, decreasing congestion, etc. From this perspective, mobility is seen as an end in itself, and the solutions to “improve” mobility would depend purely on technical solutions that “optimize” traffic speed and flow.\nMobility, however, cannot be seen as an end in itself. As a rule, people do not travel for the simple pleasure of traveling around. On the contrary, most of the time people travel as a means to access the activities or people they want to engage with. In this sense, there is a growing consensus among researchers and transportation agencies that the goal of a transport policy is to improve people’s access to opportunities (Pereira, Schwanen, and Banister 2017; Martens 2012; Bertolini, le Clercq, and Kapoen 2005). If what people want is to access activities, we need to rethink how urban, land use and transport planning practices could be redesigned to improve accessibility - without necessarily increasing traffic speeds or the dependence on motorized vehicles, which are known to cause negative economic, environmental, and public health externalities.\nThere is a call for a paradigm shift in urban and transport planning where the pursuit for more sustainable travel patterns requires changing the focus from mobility to accessibility (Banister 2008; Cervero 2005; Levine, Grengs, and Merlin 2019). Policies that seek to increase traffic speed and road capacity, for example, could be replaced by policies that promote proximity between people and activities through greater land use mix or the integration between transport and land use planning. Thus, the shift from mobility to accessibility opens up a wider range of possible public policy instruments and actions to promote a more integrated urban development based on principles of sustainability and social inclusion (Banister 2011; Levine, Grengs, and Merlin 2019).\n\n\n\n\nAnda, Cuauhtemoc, Alexander Erath, and Pieter Jacobus Fourie. 2017. “Transport Modelling in the Age of Big Data.” International Journal of Urban Sciences 21 (sup1): 19–42. https://doi.org/10.1080/12265934.2017.1281150.\n\n\nBanister, David. 2008. “The Sustainable Mobility Paradigm.” Transport Policy 15 (2): 73–80. https://doi.org/10.1016/j.tranpol.2007.10.005.\n\n\n———. 2011. “The Trilogy of Distance, Speed and Time.” Journal of Transport Geography 19 (4): 950–59. https://doi.org/10.1016/j.jtrangeo.2010.12.004.\n\n\nBertolini, L., F. le Clercq, and L. Kapoen. 2005. “Sustainable Accessibility: A Conceptual Framework to Integrate Transport and Land Use Plan-Making. Two Test-Applications in the Netherlands and a Reflection on the Way Forward.” Transport Policy 12 (3): 207–20. https://doi.org/10.1016/j.tranpol.2005.01.006.\n\n\nCervero, Robert. 2005. “Accessible Cities and Regions: A Framework for Sustainable Transport and Urbanism in the 21st Century.” Center for Future Urban Transport Working Paper, no. UCB-ITS-VWP-2005-3 (August).\n\n\nChurch, A, M Frost, and K Sullivan. 2000. “Transport and Social Exclusion in London.” Transport Policy 7 (3): 195–205. https://doi.org/10.1016/S0967-070X(00)00024-X.\n\n\nFarrington, John, and Conor Farrington. 2005. “Rural Accessibility, Social Inclusion and Social Justice: Towards Conceptualisation.” Journal of Transport Geography 13 (1): 1–12. https://doi.org/10.1016/j.jtrangeo.2004.10.002.\n\n\nGeurs, Karst, and Bert van Wee. 2004. “Accessibility Evaluation of Land-Use and Transport Strategies: Review and Research Directions.” Journal of Transport Geography 12 (2): 127–40. https://doi.org/10.1016/j.jtrangeo.2003.10.005.\n\n\nGrisé, Emily, Geneviève Boisjoly, Meadhbh Maguire, and Ahmed El-Geneidy. 2019. “Elevating Access: Comparing Accessibility to Jobs by Public Transport for Individuals with and Without a Physical Disability.” Transportation Research Part A: Policy and Practice 125 (July): 280–93. https://doi.org/10.1016/j.tra.2018.02.017.\n\n\nKandt, Jens, and Michael Batty. 2021. “Smart Cities, Big Data and Urban Policy: Towards Urban Analytics for the Long Run.” Cities 109 (February): 102992. https://doi.org/10.1016/j.cities.2020.102992.\n\n\nLevine, Jonathan, Joe Grengs, and Louis A. Merlin. 2019. From Mobility to Accessibility: Transforming Urban Transportation and Land-Use Planning. Cornell University Press.\n\n\nLevinson, David, and David King. 2020. Transport Access Manual: A Guide for Measuring Connection Between People and Places. Committee of the Transport Access Manual, University of Sydney.\n\n\nLucas, Karen, Giulio Mattioli, Ersilia Verlinghieri, and Alvaro Guzman. 2016. “Transport Poverty and Its Adverse Social Consequences.” Proceedings of the Institution of Civil Engineers - Transport 169 (6): 353–65. https://doi.org/10.1680/jtran.15.00073.\n\n\nLuz, Gregório, and Licinio Portugal. 2022. “Understanding Transport-Related Social Exclusion Through the Lens of Capabilities Approach.” Transport Reviews 42 (4): 503–25. https://doi.org/10.1080/01441647.2021.2005183.\n\n\nMartens, Karel. 2012. “Justice in Transport as Justice in Accessibility: Applying Walzer’s ‘Spheres of Justice’ to the Transport Sector.” Transportation 39 (6): 1035–53. https://doi.org/10.1007/s11116-012-9388-7.\n\n\nMiller, Eric J. 2018. “Accessibility: Measurement and Application in Transportation Planning.” Transport Reviews 38 (5): 551–55. https://doi.org/10.1080/01441647.2018.1492778.\n\n\nNeutens, Tijs, Tim Schwanen, Frank Witlox, and Philippe De Maeyer. 2010. “Equity of Urban Service Delivery: A Comparison of Different Accessibility Measures.” Environment and Planning A: Economy and Space 42 (7): 1613–35. https://doi.org/10.1068/a4230.\n\n\nPáez, Antonio, Darren M. Scott, and Catherine Morency. 2012. “Measuring Accessibility: Positive and Normative Implementations of Various Accessibility Indicators.” Journal of Transport Geography 25 (November): 141–53. https://doi.org/10.1016/j.jtrangeo.2012.03.016.\n\n\nPereira, Rafael H. M., and Alex Karner. 2021. “Transportation Equity.” In International Encyclopedia of Transportation, edited by Roger Vickerman, 271–77. Oxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10053-3.\n\n\nPereira, Rafael H. M., Tim Schwanen, and David Banister. 2017. “Distributive Justice and Equity in Transportation.” Transport Reviews 37 (2): 170–91. https://doi.org/10.1080/01441647.2016.1257660.\n\n\nvan Wee, Bert. 2022. “Accessibility and Equity: A Conceptual Framework and Research Agenda.” Journal of Transport Geography 104 (October): 103421. https://doi.org/10.1016/j.jtrangeo.2022.103421.\n\n\nVasconcellos, Eduardo Alcantara. 2018. “Urban Transport Policies in Brazil: The Creation of a Discriminatory Mobility System.” Journal of Transport Geography 67 (February): 85–91. https://doi.org/10.1016/j.jtrangeo.2017.08.014."
  },
  {
    "objectID": "2_indicadores.en.html#place-based-measures",
    "href": "2_indicadores.en.html#place-based-measures",
    "title": "2  Accessibility measures",
    "section": "2.1 Place-based measures",
    "text": "2.1 Place-based measures\nPlace-based metrics measure accessibility as a characteristic of a particular location. By simplification, these indicators assume that all people who are in the same place can equally access the activities distributed throughout the city. That is, if an accessibility analysis uses a place-based metric to calculate accessibility and divides the study area into a grid, each cell of that grid (a square) will have an accessibility value associated with it and which is equally assigned to all individuals residing within each cell. These measures are sensitive to land use and transport factors related to the spatial distribution of activities and to the configuration and performance of the transport network, but do not take into account individuals’ personal characteristics.\nThese measures are the most widely used by transport agencies and researchers (Boisjoly and El-Geneidy 2017; Papa et al. 2015). This is largely because they require less data and tend to be considerably easier to calculate and interpret than people-based accessibility measures. For this reason, the examples and case studies presented in this and the next chapters of the book focus only on place-based measures of accessibility.\nPlace-based accessibility measures account for trip costs, usually expressed in terms of travel time (El-Geneidy et al. 2016; Venter 2016) - i.e., if one location can be reached from another in half an hour, the cost to make this trip is 30 minutes. However, it is possible to consider other types of costs, such as the distance of the trip, its monetary cost, and the perception of comfort of users (Arbex and Cunha 2020; Herszenhut et al. 2022). We present below some of the place-based accessibility metrics most commonly used in the scientific literature and by transport agencies. Here, the term “cost” is used broadly, and can refer to any type of cost unit used to quantify the impedance of a trip, be it travel time, monetary cost, or other alternatives.\n\n2.1.1 Minimum travel cost\nOne of the simplest accessibility metrics is the minimum travel cost measure. It indicates the lowest cost required to reach the nearest opportunity from a given origin. It allows one to estimate, for example, the travel time to the health center closest to each block of a city. The indicator is calculated with the following formula:\n\\[A_i = min(c_{i1}, c_{i2}, \\dots, c_{ij}, \\dots, c_{i(n-1)}, c_{in}) \\iff O_j \\geq 1\\]\nwhere \\(A_i\\) is the accessibility at origin \\(i\\), \\(c_{ij}\\) is the travel cost between origin \\(i\\) and destination \\(j\\), \\(n\\) is the total number of destinations in the study area, and \\(O_j\\) is the number of opportunities at destination \\(j\\).\nAdvantages and disadvantages: The advantages of this measure are that it requires little data, and it is easy to calculate and to communicate. Two disadvantages, however, are that it does consider the quantity of accessible opportunities at destinations, nor does it take into account aspects of competition in demand for opportunities. For example, even if a person lives very close to a hospital, this proximity does not necessarily guarantee good access to health services if this is the only hospital in the region and is subject to demand peaks that overload the services beyond their capacities.\n\n\n2.1.2 Cumulative opportunity measures\nThe cumulative opportunity accessibility metric measures the number of opportunities that can be reached within a given travel cost limit. For example, this indicator can be used to measure the number of jobs accessible by public transport in up to 60 minutes, or the number of schools accessible within 30 minutes of walking. The measure is calculated using the following formula:\n\\[A_i = \\sum_{j=1}^{n}{O_j \\times f(c_{ij})}\\]\n\\[\nf(c_{ij}) =\n  \\begin{cases}\n    1 & \\text{se } c_{ij} \\leq C\\\\\n    0 & \\text{otherwise}\n  \\end{cases}\n\\]\nwhere \\(A_i\\) is accessibility at origin \\(i\\), \\(O_j\\) is the number of opportunities at destination \\(j\\), \\(n\\) is the total number of destinations in the study area, \\(f(c_{ij})\\) is a binary function that assumes the values 0 or 1, depending on the travel cost of \\(c_{ij}\\) between origin \\(i\\) and destination \\(j\\), and \\(C\\) is a max travel cost threshold.\nAdvantages and disadvantages: The cumulative opportunities measure also requires little data, and it is easy to calculate and communicate. This helps explain why this is one of the indicators most commonly used by transport and funding agencies in accessibility analyses (Papa et al. 2015; Boisjoly and El-Geneidy 2017). Among its disadvantages are the fact that this indicator does not consider the competition for opportunities and that it requires the choice of a single cut-off point as a travel cost limit. Moreover, this measure assumes that all opportunities that can be reached within the pre-established travel cost limit are equally desirable and accessible. For example, if we consider a 60-minute travel time limit, an opportunity that is 40 minutes aways from an origin is considered as accessible as another one that is just 10 minutes away.\n\n\n2.1.3 Gravity measures\nMore than a specific type of accessibility metric, we can understand gravity-based accessibility as a family of measures. As in the case of the cumulative opportunity measure, gravity-based metrics considers the sum of opportunities that can be reached from a given location. However, the number of opportunities in each destination is gradually discounted as travel costs become higher. In other words, opportunities that are easier to access are considered to be more valuable, and the weight of each opportunity decreases as it gets more difficult to reach it from the trip origin. The rate at which the weight of each opportunity decreases is determined by travel costs and is determined by a decay function that can be specified in various ways. For example, the linear decay function considers that the weight of each opportunity decreases linearly up to a certain cost limit, after which the weight becomes zero. The negative exponential function, on the other hand, considers that the weight of each opportunity is divided by a factor that grows exponentially, causing the weight to decrease rapidly at low travel costs and to approach 0 at high costs. The equations below present the generic formulation of a gravitational measure as well as the linear and negative exponential decay functions mentioned above.\n\\[A_i = \\sum_{j=1}^{n}{O_j \\times f(c_{ij})}\\]\n\\[\nf_{lin}(c_{ij}) =\n  \\begin{cases}\n    1-c_{ij}/C & \\text{se } c_{ij} \\leq C\\\\\n    0 & \\text{otherwise}\n  \\end{cases}\n\\]\n\\[f_{exp}(c_{ij}) = e^{-\\beta c_{ij}}\\]\nwhere \\(A_i\\) is the accessibility at origin \\(i\\), \\(O_j\\) is the number of opportunities at destination \\(j\\), \\(n\\) is the total number of destinations in the study area, \\(f(c_{ij})\\) is a decay function whose result varies with the travel cost \\(c_{ij}\\) between origin \\(i\\) and destination \\(j\\), \\(f_{lin}(c_{ij})\\) is the linear decay function, \\(C\\) is travel cost limit, \\(f_{exp}(c_{ij})\\) is the negative exponential decay function, and \\(\\beta\\) is a parameter that dictates the decay speed.\nThere are numerous types of decay functions that can be used in the calculation of gravity-based accessibility measures. The cumulative opportunities measure, for example, can be understood as a special case of a gravity-based measure in which the weight of each opportunity is dictated by a binary function, rather than a function that decays gradually. Levinson and King (2020, 49) present a list of decay functions often used by transport agencies and researchers in analyses involving gravity accessibility.\nAdvantages and disadvantages: The main advantage of gravity-based accessibility measures is that, by discounting the weight of opportunities by the travel cost to reach them, these measures reflect to some extent how people perceive access to opportunities: services and activities that are closer to them tend to be perceived as more valuable, all else equal. This indicator, however, has at least two disadvantages. The first is that the estimated accessibility levels are difficult to interpret because of the way in which the number of opportunities is discounted by travel costs. Additionally, the decay rate of the impedance function (the \\(\\beta\\) parameter of the negative exponential function, for example) needs to be calibrated if one wants the accessibility estimates to be representative of people’s travel behavior. Therefore, gravity-based metrics require additional travel behavior data or other types of data (such as household travel surveys or mobile phone data) that can be used in the calibration process.\n\n\n2.1.4 Accessibility measures with competition: floating catchment area\nIn many cases, access to opportunities is affected not only by geographical proximity and transportation costs, but also by the competition of many people trying to access the same opportunity. This is very common, for example, in the cases of access to health services, schools, and jobs. A job opening can only be occupied by one person at a time, and the same goes for an intensive care unit (ICU) bed or a school seat. There are various measures that seek to account for competition in accessibility estimates. Some of the most widely used accessibility measures with competition are those in the floating catchment area (FCA) family of indicators. For example, these indicators try to take into account how the same person can potentially access multiple ICU beds and, simultaneously, that each ICU bed can potentially be accessed by multiple people. Thus, a person’s access to ICU beds is influenced by issues of transportation costs but also by the availability of beds given the potential competing demand for them. Within the FCA family of measures, the most commonly used is the 2-Step Floating Catchment Area (2SFCA), originally proposed by Luo and Wang (2003). One limitation of 2SFCA is that it considers that the same person can demand multiple services / opportunities at the same time and that the same service can be used by multiple people at the same time. These issues are known as the demand and supply inflation problems, respectively, and can generate biased or inaccurate accessibility estimates (Paez, Higgins, and Vivona 2019). To deal with these problems, Paez, Higgins, and Vivona (2019) proposed the Balanced Floating Catchment Area (BFCA), one of the most recent measures of the FCA family.\nAdvantages and disadvantages: Different FCA measures have different advantages and disadvantages, to a greater or lesser extent. However, in general, the main advantage of measures of this family is its ability to incorporate aspects of competition into accessibility estimates. The main disadvantage, on the other hand, is the difficulty interpreting and communicating its results."
  },
  {
    "objectID": "2_indicadores.en.html#person-based-measures",
    "href": "2_indicadores.en.html#person-based-measures",
    "title": "2  Accessibility measures",
    "section": "2.2 Person-based measures",
    "text": "2.2 Person-based measures\nPeople-based accessibility measures are sensitive not only to the spatial distribution of activities and to the configuration and performance of transportation networks. Indicators in this group also take into account how the personal characteristics of each individual (such as gender, age, physical disability, etc.), and even the participation in certain in activities and personal commitments, can affect their capability to access opportunities. This category includes, for example, activity-based indicators (Dong et al. 2006) and space-time measures Neutens et al. (2012).\nAdvantages and disadvantages: Although people-based accessibility measures are more sophisticated, they often require large amounts of data, such as people’s travel diary records, household travel surveys, etc. Therefore, the calculation of these measures is computationally more intensive, which makes them less frequently used than place-based measures Miller (2018). In contrast to place-based measures, which give a single accessibility estimate for all individuals in the same place, people-based measures give one accessibility estimate per person because they take into account the particularities of each individual. While this allows for more nuanced accessibility analyses, this also makes the communication of people-based accessibility results more complex.\n\n\n\n\nArbex, Renato, and Claudio B. Cunha. 2020. “Estimating the Influence of Crowding and Travel Time Variability on Accessibility to Jobs in a Large Public Transport Network Using Smart Card Big Data.” Journal of Transport Geography 85 (May): 102671. https://doi.org/10.1016/j.jtrangeo.2020.102671.\n\n\nBoisjoly, Geneviève, and Ahmed M. El-Geneidy. 2017. “How to Get There? A Critical Assessment of Accessibility Objectives and Indicators in Metropolitan Transportation Plans.” Transport Policy 55 (April): 38–50. https://doi.org/10.1016/j.tranpol.2016.12.011.\n\n\nDijst, Martin, Tom de Jong, and Jan Ritsema van Eck. 2002. “Opportunities for Transport Mode Change: An Exploration of a Disaggregated Approach.” Environment and Planning B: Planning and Design 29 (3): 413–30. https://doi.org/10.1068/b12811.\n\n\nDong, Xiaojing, Moshe E. Ben-Akiva, John L. Bowman, and Joan L. Walker. 2006. “Moving from Trip-Based to Activity-Based Measures of Accessibility.” Transportation Research Part A: Policy and Practice 40 (2): 163–80. https://doi.org/10.1016/j.tra.2005.05.002.\n\n\nEl-Geneidy, Ahmed, David Levinson, Ehab Diab, Genevieve Boisjoly, David Verbich, and Charis Loong. 2016. “The Cost of Equity: Assessing Transit Accessibility and Social Disparity Using Total Travel Cost.” Transportation Research Part A: Policy and Practice 91 (September): 302–16. https://doi.org/10.1016/j.tra.2016.07.003.\n\n\nHerszenhut, Daniel, Rafael H. M. Pereira, Licinio da Silva Portugal, and Matheus Henrique de Sousa Oliveira. 2022. “The Impact of Transit Monetary Costs on Transport Inequality.” Journal of Transport Geography 99 (February): 103309. https://doi.org/10.1016/j.jtrangeo.2022.103309.\n\n\nKim, Hyun-Mi, and Mei-Po Kwan. 2003. “Space-Time Accessibility Measures: A Geocomputational Algorithm with a Focus on the Feasible Opportunity Set and Possible Activity Duration.” Journal of Geographical Systems 5 (1): 71–91. https://doi.org/10.1007/s101090300104.\n\n\nLevinson, David, and David King. 2020. Transport Access Manual: A Guide for Measuring Connection Between People and Places. Committee of the Transport Access Manual, University of Sydney.\n\n\nLuo, Wei, and Fahui Wang. 2003. “Measures of Spatial Accessibility to Health Care in a GIS Environment: Synthesis and a Case Study in the Chicago Region.” Environment and Planning B: Planning and Design 30 (6): 865–84. https://doi.org/10.1068/b29120.\n\n\nMiller, Eric J. 2018. “Accessibility: Measurement and Application in Transportation Planning.” Transport Reviews 38 (5): 551–55. https://doi.org/10.1080/01441647.2018.1492778.\n\n\nNeutens, Tijs, Matthias Delafontaine, Darren M. Scott, and Philippe De Maeyer. 2012. “An Analysis of Day-to-Day Variations in Individual Spacetime Accessibility.” Journal of Transport Geography, Special Issue on Time Geography, 23 (July): 81–91. https://doi.org/10.1016/j.jtrangeo.2012.04.001.\n\n\nNeutens, Tijs, Tim Schwanen, Frank Witlox, and Philippe De Maeyer. 2010. “Equity of Urban Service Delivery: A Comparison of Different Accessibility Measures.” Environment and Planning A: Economy and Space 42 (7): 1613–35. https://doi.org/10.1068/a4230.\n\n\nPaez, Antonio, Christopher D. Higgins, and Salvatore F. Vivona. 2019. “Demand and Level of Service Inflation in Floating Catchment Area (FCA) Methods.” Edited by Tayyab Ikram Shah. PLOS ONE 14 (6): e0218773. https://doi.org/10.1371/journal.pone.0218773.\n\n\nPáez, Antonio, Darren M. Scott, and Catherine Morency. 2012. “Measuring Accessibility: Positive and Normative Implementations of Various Accessibility Indicators.” Journal of Transport Geography 25 (November): 141–53. https://doi.org/10.1016/j.jtrangeo.2012.03.016.\n\n\nPapa, Enrica, Cecilia Silva, Marco Te Brömmelstroet, and Angela Hull. 2015. “Accessibility Instruments for Planning Practice: A Review of European Experiences.” Journal of Transport and Land Use, June. https://doi.org/10.5198/jtlu.2015.585.\n\n\nVenter, Christoffel. 2016. “Assessing the Potential of Bus Rapid Transit-Led Network Restructuring for Enhancing Affordable Access to Employment The Case of Johannesburg’s Corridors of Freedom.” Research in Transportation Economics 59 (November): 441–49. https://doi.org/10.1016/j.retrec.2016.05.006."
  },
  {
    "objectID": "s2_calculo.en.html",
    "href": "s2_calculo.en.html",
    "title": "SECTION 2: How to measure urban accessibility",
    "section": "",
    "text": "The purpose of this section is to show how to calculate urban accessibility estimates in R using the {r5r} and {accessibility} packages.\nCalculating accessibility levels in a study area involves two major steps: first, we need to calculate a travel cost matrix between the origins and destinations of this area; next, we calculate the accessibility from each origin, taking into consideration the transport costs between origin-destination pairs and the number of opportunities in each destination. In this section, we will learn how to execute both of these steps using the R programming language. We will also learn about the data required in each step and the pros and cons of the different methods that can be used to generate accessibility estimates."
  },
  {
    "objectID": "3_calculando_acesso.en.html#calculating-a-travel-time-matrix",
    "href": "3_calculando_acesso.en.html#calculating-a-travel-time-matrix",
    "title": "3  Calculating accessibility estimates in R",
    "section": "3.1 Calculating a travel time matrix",
    "text": "3.1 Calculating a travel time matrix\nThe first step to estimate the accessibility levels in a study area is to calculate the travel cost matrix between the various origins and destinations that make up this area. As previously mentioned, this cost is generally represented by the travel time between two points in the scientific literature and in transport planning practice (El-Geneidy et al. 2016; Venter 2016), although recent studies have also considered other factors, such as trip monetary costs and the comfort of a trip between origins and destinations (Arbex and Cunha 2020; Herszenhut et al. 2022). In this book, we will focus on travel time matrices as they are the most widely used in the literature and in practice, and we will cover other types of costs in a future book on advanced accessibility analysis in R.\nCurrently, the easiest and fastest way to generate a travel time matrix in R is using the {r5r} package (Pereira et al. 2021), developed by the Access to Opportunities Project team. The package provides a simple and friendly interface to the R5 multimodal transport routing engine, developed by Conveyal1.\n\n3.1.1 Installing {r5r}\nInstalling {r5r} works the same as installing any other R package (all code snippets from this point onward must be run in an R session).\n\ninstall.packages(\"r5r\")\n\nIn addition to R, {r5r} also requires installing Java 112. Use the command below to check the version of Java installed in your computer.\n\ncat(processx::run(\"java\", args = \"-version\")$stderr)\n\nopenjdk version \"11.0.18\" 2023-01-17 LTS\nOpenJDK Runtime Environment Zulu11.62+17-CA (build 11.0.18+10-LTS)\nOpenJDK 64-Bit Server VM Zulu11.62+17-CA (build 11.0.18+10-LTS, mixed mode)\n\n\nAs we can see, the version installed in the book is compatible with {r5r}. If the version installed in your machine is not compatible (i.e. if running the code above results in an output mentioning version 12 or 1.8.0, for example), please install Java 11.\n\n\n3.1.2 Required data\nUsing {r5r} requires different types of data. The list below describes the required and optional data sets and indicates where you could obtain these data:\n\nStreet network (required): a file in .pbf format containing the street network and pedestrian infrastructure as described by OpenStreetMap. It can be downloaded using:\n\nosmextract, R package;\nGeofabrik, website;\nHOT Export Tool, website;\nBBBike Extract Service, website.\n\n\n\n\n\n\n\n\nOpenStreetMap data quality\n\n\n\nOpenStreetMap (OSM) is a geographic database that provides information about street networks, buildings, parks, etc. OSM is maintained by a community of volunteers, so the coverage and quality of its data can widely vary between regions (Barrington-Leigh and Millard-Ball 2017). OSM data tend to have better coverage and quality in more developed regions and in urban areas with large populations (Barrington-Leigh and Millard-Ball 2017; Camboim, Bravo, and Sluter 2015).\n\n\n\nPublic transport network (optional): one or more GTFS files describing the public transport network of the study area. If absent, public transport trips are not considered in the travel time matrix. This type of data can be downloaded using:\n\n{tidytransit}, R package;\nTransitland, website;\nIn Chapter 4 (Table 4.9) we also show where to download the GTFS files of Brazilian cities that share their data publicly.\n\nTopography (optional): a raster file containing the Digital Elevation Model data of the study area in .tif/.tiff format. This data set is required if you wish to consider the effects of topography on walking and cycling travel times. It can be downloaded using:\n\nelevatr, R package;\nNasa’s SRTMGL1, website.\n\n\nThese data sets should be saved in a single directory, which should preferably not contain any other files. As we will see below, {r5r} combines all the data saved in this directory to create a multimodal transport network that is used for routing trips between origin-destination pairs and, consequently, for calculating travel time matrices. Please note that you can have more than one GTFS file in the same directory, in which case {r5r} considers the public transport networks of all feeds together. The street network and the topography of the study area, however, must be each one described by a single file. Assuming that R scripts are saved in a directory called R, a possible file structure is shown below:\n\n\n/tmp/Rtmp6rPzdr/accessibility_project\n├── R\n│   ├── script1.R\n│   └── script2.R\n└── r5\n    ├── public_transport_network.zip\n    ├── street_network.osm.pbf\n    └── topography.tif\n\n\nTo illustrate the features of {r5r}, we will use a small data sample from the city of Porto Alegre, Brazil. These data are available within {r5r} itself, and its path can be accessed with the following command:\n\ndata_path <- system.file(\"extdata/poa\", package = \"r5r\")\ndata_path\n\n[1] \"/home/runner/work/intro_access_book/intro_access_book/renv/library/R-4.2/x86_64-pc-linux-gnu/r5r/extdata/poa\"\n\n\n\nfs::dir_tree(data_path)\n\n\n\n/home/runner/work/intro_access_book/intro_access_book/renv/library/R-4.2/x86_64-pc-linux-gnu/r5r/extdata/poa\n├── poa_elevation.tif\n├── poa_eptc.zip\n├── poa_hexgrid.csv\n├── poa_osm.pbf\n├── poa_points_of_interest.csv\n└── poa_trensurb.zip\n\n\nThis directory contains four files that we will use throughout this chapter: - An OpenStreetMap’s street network: poa_osm.pbf; - A GTFS feed describing some of the city’s bus routes: poa_eptc.zip; - A GTFS feed describing some of the city’s train route: poa_trensurb.zip; - The digital elevation model of the city: poa_elevation.tif; - The poa_hexgrid.csv file, containing the geographic coordinates of the centroids of a regular hexagonal grid covering the entire study area and information about the number of residents, jobs, health care facilities and schools in each grid cell. These points will be used as the origins and destinations when calculating the travel time matrix.\n\n\n3.1.3 Computing the travel time matrix\nBefore calculating the travel time matrix, we need to increase the memory available to run Java processes, used by the underlying R5 routing engine. This is necessary because R allocates only 512 MB of memory to Java processes by default, which is often not enough to calculate large matrices with {r5r}. To increase the available memory to 2 GB, for example, we use the following command at the beginning of the script, even before loading the R packages that will be used in our analysis:\n\noptions(java.parameters = \"-Xmx2G\")\n\nWe can then proceed with the travel time matrix calculation, which we carry out in two steps. First, we need to generate a multimodal transport network that will be used to route trips between origin-destination pairs. To do this, we load {r5r} and use the setup_r5() function, which downloads the R5 routing engine and uses it to build the network. This function receives the path to the directory where the input data is saved. The function saves to this directory some files describing the routing network, and it outputs a connection to R5, which we named r5r_core in this example. This connection is responsible for linking the function calls with the transport network and is used to calculate the travel time matrix.\n\nlibrary(r5r)\n\nr5r_core <- setup_r5(data_path, verbose = FALSE)\n\nfs::dir_tree(data_path)\n\n/home/runner/work/intro_access_book/intro_access_book/renv/library/R-4.2/x86_64-pc-linux-gnu/r5r/extdata/poa\n├── fares\n│   └── fares_poa.zip\n├── network.dat\n├── network_settings.json\n├── poa_elevation.tif\n├── poa_eptc.zip\n├── poa_hexgrid.csv\n├── poa_osm.pbf\n├── poa_osm.pbf.mapdb\n├── poa_osm.pbf.mapdb.p\n├── poa_points_of_interest.csv\n└── poa_trensurb.zip\n\n\nThe second and final step is to actually calculate the travel time matrix with the travel_time_matrix() function. As basic inputs, the function receives the connection with R5 created above, origin and destination points as data.frames with columns id, lon and lat, the mode of transport considered, the departure time, the maximum walking time allowed when accessing public transport stations from the origin and when egressing from the last stop to the destination, and the maximum travel time allowed for trips. The function also accepts several other inputs, such as the walking speed and the maximum number of public transport legs allowed, among others. For more information on each parameter, please refer to the function documentation in an R session (with the commands ?travel_time_matrix or help(\"travel_time_matrix”)) or on {r5r} website.\n\n# read data.frame with grid centroids\npoints <- data.table::fread(file.path(data_path, \"poa_hexgrid.csv\"))\n\nttm <- travel_time_matrix(\n  r5r_core,\n  origins = points,\n  destinations = points,\n  mode = c(\"WALK\", \"TRANSIT\"),\n  departure_datetime = as.POSIXct(\n    \"13-05-2019 14:00:00\",\n    format = \"%d-%m-%Y %H:%M:%S\"\n  ),\n  max_walk_time = 30,\n  max_trip_duration = 120,\n  verbose = FALSE,\n  progress = FALSE\n)\n\nhead(ttm)\n\n           from_id           to_id travel_time_p50\n1: 89a901291abffff 89a901291abffff               1\n2: 89a901291abffff 89a9012a3cfffff              71\n3: 89a901291abffff 89a901295b7ffff              41\n4: 89a901291abffff 89a901284a3ffff              57\n5: 89a901291abffff 89a9012809bffff              43\n6: 89a901291abffff 89a901285cfffff              35\n\n\nIn practice, travel_time_matrix() finds the fastest route from each origin to all possible destinations taking into account the transport mode, the departure time and the other inputs set by the user. For this, {r5r} considers door-to-door travel times: in the case of a trip by public transport, for example, the total travel time includes a) the walking time from the origin to the public transport stop; (b) the waiting time at the stop; c) the in-vehicle time; and d) the walking time from the last public transport stop to the destination. When more than one public transport route is used, {r5r} also considers the time spent on transfers, which consist of walking between stops and waiting for the next vehicle.\n\n\n\n\n\n\nThe travel_time_matrix() function uses an extension of the RAPTOR routing algorithm (Conway, Byrd, and van der Linden 2017), making R5 extremely fast. Depending on the number of origin-destination pairs, {r5r} can calculate travel time matrices between 6 and 200 times faster than other multimodal routing softwares (Higgins et al. 2022)."
  },
  {
    "objectID": "3_calculando_acesso.en.html#calculating-accessibility",
    "href": "3_calculando_acesso.en.html#calculating-accessibility",
    "title": "3  Calculating accessibility estimates in R",
    "section": "3.2 Calculating accessibility",
    "text": "3.2 Calculating accessibility\nHaving calculated the travel time matrix between the origins and destinations, we need to use this travel matrix to calculate accessibility levels in the study area. For this, we will use the {accessibility}3 package, also developed by the Access to Opportunities Project team, which provides several functions to calculate many accessibility measures. As basic inputs, all functions require a pre-calculated cost matrix (in our case, the travel time matrix calculated in the previous section) and some land use data, such as the number of opportunities in each cell that covers the study area.\n\n3.2.1 Cumulative opportunities measure\nThe cumulative_cutoff() function is used to calculate cumulative opportunity accessibility metrics, and it indicates the number of opportunities that can be reached within a given travel cost limit. In the example below, we first load the {accessibility} package and then calculate the number of schools that can be reached in 30 minutes from each origin.\n\nlibrary(accessibility)\n\n# rename column to use package {accessibility}\ndata.table::setnames(ttm, \"travel_time_p50\", \"travel_time\")\n\ncum_opportunities <- cumulative_cutoff(\n  ttm,\n  land_use_data = points,\n  opportunity = \"schools\",\n  travel_cost = \"travel_time\",\n  cutoff = 30\n)\n\nhead(cum_opportunities)\n\n                id schools\n1: 89a901291abffff      23\n2: 89a9012a3cfffff       0\n3: 89a901295b7ffff      18\n4: 89a901284a3ffff       4\n5: 89a9012809bffff      20\n6: 89a901285cfffff      84\n\n\n\n\n3.2.2 Minimum travel cost\nThe cost_to_closest() function, on the other hand, calculates the minimum travel cost required to reach a certain number of opportunities. With the code below, for example, we calculate the minimum travel time to reach the nearest hospital from each origin.\n\nmin_time <- cost_to_closest(\n  ttm,\n  land_use_data = points,\n  opportunity = \"healthcare\",\n  travel_cost = \"travel_time\"\n)\n\nhead(min_time)\n\n                id travel_time\n1: 89a9012124fffff         Inf\n2: 89a9012126bffff          19\n3: 89a9012127bffff          16\n4: 89a90128003ffff          14\n5: 89a90128007ffff          11\n6: 89a9012800bffff          13\n\n\n\n\n3.2.3 Gravity measures\nThe gravity() function calculates gravity measures of accessibility - those in which the weight of each opportunity gradually decreases with the increase of travel cost. As many different decay functions can be used to calculate gravity measures, such as negative exponential, inverse power, etc, this function receives an additional input: the decay function that should be considered. The example below calculates accessibility to schools using a negative exponential gravity measure with a decay parameter of 0.2.\n\nnegative_exp_grav <- gravity(\n  ttm,\n  land_use_data = points,\n  opportunity = \"schools\",\n  travel_cost = \"travel_time\",\n  decay_function = decay_exponential(0.2)\n)\n\nhead(negative_exp_grav)\n\n                id     schools\n1: 89a901291abffff 0.428108826\n2: 89a9012a3cfffff 0.003987477\n3: 89a901295b7ffff 0.606786304\n4: 89a901284a3ffff 0.079661746\n5: 89a9012809bffff 0.494632773\n6: 89a901285cfffff 1.987657134\n\n\n\n\n3.2.4 Competitive measures\nFinally, the floating_catchment_area() function calculates accessibility levels considering the competition for opportunities using different floating catchment area (FCA) methods. Because several FCA methods can be used, the function requires users to indicate which method should be used. In addition, just like the gravity() function, the decay function must also be defined by the user. The following code shows an example of how to calculate accessibility to health facilities using the Balanced Floating Catchment Area (BFCA) method (Paez, Higgins, and Vivona 2019) and an exponential decay function with a decay parameter of 0.05.\n\nbfca_competition <- floating_catchment_area(\n  ttm,\n  land_use_data = points,\n  opportunity = \"schools\",\n  travel_cost = \"travel_time\",\n  demand = \"population\",\n  method = \"bfca\",\n  decay_function = decay_exponential(0.05)\n)\n\nhead(bfca_competition)\n\n                id      schools\n1: 89a901291abffff 2.628973e-04\n2: 89a9012a3cfffff 5.875302e-05\n3: 89a901295b7ffff 2.123543e-04\n4: 89a901284a3ffff 1.414356e-04\n5: 89a9012809bffff 2.254543e-04\n6: 89a901285cfffff 3.901031e-04\n\n\nThe functions presented in this section can also receive other inputs not explicitly mentioned here. For more information on each parameter, please refer to the documentation of the {accessibility} package on its website.\n\n\n3.2.5 Calculating accessibility with {r5r}\nIn the previous two sections, we learned how to calculate accessibility levels step-by-step. For didactic purposes, it is important to understand that calculating accessibility first requires calculating a travel cost matrix which is then used to estimate accessibility levels. However, {r5r} also includes an accessibility() function that calculates accessibility levels in a single call, which is much faster and does not require intermediate steps.\nSimilar to the travel time matrix function, accessibility() receives as inputs a connection to R5, origins, destinations, transport mode, departure time, among other arguments. Additionally, it also requires that users list which opportunities and decay function should be considered, as well as the value of the cost threshold/decay parameter, depending on the decay function. The example below shows how to use this function to calculate a cumulative opportunity metric (decay_function = \"step\"). In this example, we calculate the number of schools accessible by walking and public transport in 30 minutes (cutoffs = 30).\n\nr5r_access <- accessibility(\n  r5r_core,\n  origins = points,\n  destinations = points,\n  opportunities_colname = \"schools\",\n  decay_function = \"step\",\n  cutoffs = 30,\n  mode = c(\"WALK\", \"TRANSIT\"),\n  departure_datetime = as.POSIXct(\n    \"13-05-2019 14:00:00\",\n    format = \"%d-%m-%Y %H:%M:%S\"\n  ),\n  max_walk_time = 30,\n  max_trip_duration = 120,\n  verbose = FALSE,\n  progress = FALSE\n)\n\nhead(r5r_access)\n\n                id opportunity percentile cutoff accessibility\n1: 89a901291abffff     schools         50     30            21\n2: 89a9012a3cfffff     schools         50     30             0\n3: 89a901295b7ffff     schools         50     30            16\n4: 89a901284a3ffff     schools         50     30             4\n5: 89a9012809bffff     schools         50     30            17\n6: 89a901285cfffff     schools         50     30            78\n\n\nThere is one small difference between r5r::accessibility() and accessibility::cumulative_cutoff(). In r5r::accessibility(), the function only considers trips below the travel time threshold, while accessibility::cumulative_cutoff() considers trips with costs equal or below the maximum threshold. That is, to perform the same operation above but with cumulative_cutoff() we need to set a cutoff of 29 minutes, not 30. We compare the results of the two functions with the code below.\n\ncum_cutoff_29 <- cumulative_cutoff(\n    ttm,\n    land_use_data = points,\n    opportunity = \"schools\",\n    travel_cost = \"travel_time\",\n    cutoff = 29\n)\n\naccess_comparison <- merge(\n  r5r_access,\n  cum_cutoff_29,\n  by = \"id\"\n)\n\ndata.table::setnames(\n  access_comparison,\n  old = c(\"accessibility\", \"schools\"),\n  new = c(\"r5r_access\", \"accessibility_access\")\n)\n\nhead(access_comparison[, .(id, r5r_access, accessibility_access)])\n\n                id r5r_access accessibility_access\n1: 89a9012124fffff          1                    1\n2: 89a9012126bffff         12                   12\n3: 89a9012127bffff         14                   14\n4: 89a90128003ffff         30                   30\n5: 89a90128007ffff         21                   21\n6: 89a9012800bffff         29                   29\n\n\nAs we can see, the results of the two functions are identical after this small adjustment. The main difference between the two methods, however, is that the “intermediate” information of travel time between origins and destinations is not available when using r5r::accessibility(). Still, this workflow can be a good alternative for people who are solely interested in the accessibility levels and do not require the travel time between points in their analyses. Also, note that the {accessibility} package has a wider range of accessibility indicators and it gives more flexibility for users to define any decay function.\n\n\n\n\n\n\nConsidering other types of travel costs when calculating accessibility\n\n\n\nAnother difference between {r5r} accessibility function and {accessibility} functions is the fact that the latter can work with various types of travel costs, such as time, monetary cost, comfort, etc. {r5r} function, however, is less flexible, and only considers travel time constraints."
  },
  {
    "objectID": "3_calculando_acesso.en.html#accessibility-analyses",
    "href": "3_calculando_acesso.en.html#accessibility-analyses",
    "title": "3  Calculating accessibility estimates in R",
    "section": "3.3 Accessibility analyses",
    "text": "3.3 Accessibility analyses\nHaving calculated accessibility levels, we can now analyze them. There is a wide variety of analyses that can be performed using this data: diagnosis of urban accessibility conditions in different neighborhoods, analyses of inequalities in access to opportunities between different social groups, analyses of social exclusion and accessibility poverty, etc. In this section, however, we will present only two relatively simple and easy-to-communicate analyses: the spatial distribution of accessibility and its distribution among different income groups.\nThe spatial distribution of urban accessibility\nTo understand how urban accessibility is spatially distributed in a given city or region, we first need to obtain the spatial information of the points we have used as origins and destinations in our travel cost matrix. The points we used in the previous examples correspond to the centroids of a hexagonal grid based on the H3 index, developed by Uber (Brodsky 2018). The grid of Porto Alegre, as well as some sociodemographic and land use data aggregated to it, is made available by the Access to Opportunities Project team through the {aopdata} R package (Pereira et al. 2022). The package and its functions are presented in detail in Section 5. With the code below, we load the data visualization package, download the grid, and present it in a map.\n\nlibrary(ggplot2)\n\n# download spatial grid\npoa_grid <- aopdata::read_grid(\"Porto Alegre\")\n\n# keeps only the cells used in the travel time matrix\npoa_grid <- subset(poa_grid, id_hex %in% points$id)\n\n# plot map\nggplot(poa_grid) + geom_sf() + theme_minimal()\n\n\n\n\nTo spatially visualize accessibility data, we need to combine the table of accessibility estimates with the table that contains the spatial grid, using the hexagon identification columns as key columns. The code below shows how to merge the two tables and plot the map. In this example we are going to use the cumulative access to schools in 30 minutes that we had previously calculated.\n\nspatial_access <- merge(\n  poa_grid,\n  cum_cutoff_29,\n  by.x = \"id_hex\",\n  by.y = \"id\"\n)\n\nggplot(spatial_access) +\n  geom_sf(aes(fill = schools), color = NA) +\n  scale_fill_viridis_c(option = \"inferno\") +\n  labs(fill = \"Accessible\\nschools\") +\n  theme_minimal()\n\n\n\n\nAs the map above shows, accessibility levels tend to be higher in the city center, where there is a greater concentration of schools, and close to the major transport corridors, as the people who live closer to these high- capacity and speed corridors tend to access distant locations relatively fast. In contrast, people who live farther away from these corridors depend on lower frequency and operational speed modes (such as municipal buses, for example) and need to spend more time to reach the medium/high-capacity corridors. As a result, the accessibility levels of those living far from the city center and from high-capacity corridors tend to be relatively lower.\nThe distribution of urban accessibility across socioeconomic groups\nThe map above, although useful to reveal the places with the highest and lowest levels of accessibility, says nothing about the socioeconomic conditions of the people who have better or worse accessibility conditions in the region. To understand this, we need to join the previously calculated accessibility data with the demographic and economic information of the people living in each grid cell.\nIn the example below, we merge the accessibility estimates with the information of average income decile of the population in each cell (data also made available through the {aopdata} package).\n\n# download population and socioeconomic data\npoa_population <- aopdata::read_population(\"Porto Alegre\", showProgress = FALSE)\n\n# renames the columns with population count and income decile data\ndata.table::setnames(\n  poa_population,\n  old = c(\"P001\", \"R003\"),\n  new = c(\"pop_count\", \"decile\")\n)\n\n# merge accessibility and population tables\nsociodemographic_access <- merge(\n  spatial_access,\n  poa_population,\n  by = \"id_hex\"\n)\n\nhead(sociodemographic_access[, c(\"id_hex\", \"schools\", \"pop_count\", \"decile\")])\n\nSimple feature collection with 6 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -51.25678 ymin: -30.1111 xmax: -51.19031 ymax: -30.06699\nGeodetic CRS:  WGS 84\n           id_hex schools pop_count decile                       geometry\n1 89a9012124fffff       1       733      9 POLYGON ((-51.25083 -30.111...\n2 89a9012126bffff      12       355      9 POLYGON ((-51.25369 -30.106...\n3 89a9012127bffff      14       996     10 POLYGON ((-51.2538 -30.1094...\n4 89a90128003ffff      30      1742      4 POLYGON ((-51.19446 -30.071...\n5 89a90128007ffff      21       477      5 POLYGON ((-51.19744 -30.069...\n6 89a9012800bffff      29       501      4 POLYGON ((-51.19137 -30.070...\n\n\nWith the information on the income decile of each hexagon, we can analyze the distribution of accessibility levels by income groups. For this, we need to weigh the accessibility level of each origin by the number of people who reside there. This will tell us the accessibility distribution of the people located in cells with a given income decile. If we do not weigh the accessibility estimate by the population, we would have the accessibility distribution of the cells per se, and not of the people located in each cell. Since our analysis focuses on people, and not on the spatial units in which they are aggregated, weighting the accessibility levels by the population count is an essential part of it. The accessibility distribution of each decile is shown below.\n\nggplot(subset(sociodemographic_access, !is.na(decile))) +\n  geom_boxplot(\n    aes(\n      x = as.factor(decile),\n      y = schools,\n      color = as.factor(decile),\n      weight = pop_count\n    )\n  ) +\n  labs(\n    color = \"Income\\ndecile\",\n    x = \"Income decile\",\n    y = \"Number of schools accessible\"\n  ) +\n  scale_color_brewer(palette = \"RdBu\") +\n  scale_x_discrete(\n    labels = c(\"D1\\npoorest\", paste0(\"D\", 2:9), \"D10\\nwealthiest\")\n  ) +\n  theme_minimal()\n\n\n\n\nThe chart is very clear: lower-income residents tend to have considerably lower accessibility levels than high-income residents. This is a common pattern in virtually all Brazilian cities (Pereira et al. 2019) and which results, to a large extent, from the spatial distribution patterns of low- and high-income communities: the wealthiest usually live in high-valued areas, close to large employment hubs (and opportunities for education, health, leisure, etc) and with relatively better supply of public transport. The poorest, on the other hand, tend to live in cities’ outskirts, where the land value is lower. Consequently, they also tend to live farther away from large concentrations of opportunities. Additionally, in most cases the provision of mid- and high-capacity public transport services is worse in regions with high concentrations of low-income residents. As a result, low-income communities have on average much lower accessibility than wealthier communities, as the chart illustrates.\n\n\n\n\nArbex, Renato, and Claudio B. Cunha. 2020. “Estimating the Influence of Crowding and Travel Time Variability on Accessibility to Jobs in a Large Public Transport Network Using Smart Card Big Data.” Journal of Transport Geography 85 (May): 102671. https://doi.org/10.1016/j.jtrangeo.2020.102671.\n\n\nBarrington-Leigh, Christopher, and Adam Millard-Ball. 2017. “The World’s User-Generated Road Map Is More Than 80% Complete.” PLOS ONE 12 (8): e0180698. https://doi.org/10.1371/journal.pone.0180698.\n\n\nBrodsky, Isaac. 2018. “H3: Uber’s Hexagonal Hierarchical Spatial Index.” Uber Engineering Blog. https://eng.uber.com/h3/.\n\n\nCamboim, Silvana Philippi, João Vitor Meza Bravo, and Claudia Robbi Sluter. 2015. “An Investigation into the Completeness of, and the Updates to, OpenStreetMap Data in a Heterogeneous Area in Brazil.” ISPRS International Journal of Geo-Information 4 (3): 1366–88. https://doi.org/10.3390/ijgi4031366.\n\n\nConway, Matthew Wigginton, Andrew Byrd, and Marco van der Linden. 2017. “Evidence-Based Transit and Land Use Sketch Planning Using Interactive Accessibility Methods on Combined Schedule and Headway-Based Networks.” Transportation Research Record: Journal of the Transportation Research Board 2653 (1): 45–53. https://doi.org/10.3141/2653-06.\n\n\nEl-Geneidy, Ahmed, David Levinson, Ehab Diab, Genevieve Boisjoly, David Verbich, and Charis Loong. 2016. “The Cost of Equity: Assessing Transit Accessibility and Social Disparity Using Total Travel Cost.” Transportation Research Part A: Policy and Practice 91 (September): 302–16. https://doi.org/10.1016/j.tra.2016.07.003.\n\n\nHerszenhut, Daniel, Rafael H. M. Pereira, Licinio da Silva Portugal, and Matheus Henrique de Sousa Oliveira. 2022. “The Impact of Transit Monetary Costs on Transport Inequality.” Journal of Transport Geography 99 (February): 103309. https://doi.org/10.1016/j.jtrangeo.2022.103309.\n\n\nHiggins, Christopher, Matthew Palm, Amber DeJohn, Luna Xi, James Vaughan, Steven Farber, Michael Widener, and Eric Miller. 2022. “Calculating Place-Based Transit Accessibility: Methods, Tools and Algorithmic Dependence.” Journal of Transport and Land Use 15 (1). https://doi.org/10.5198/jtlu.2022.2012.\n\n\nPaez, Antonio, Christopher D. Higgins, and Salvatore F. Vivona. 2019. “Demand and Level of Service Inflation in Floating Catchment Area (FCA) Methods.” Edited by Tayyab Ikram Shah. PLOS ONE 14 (6): e0218773. https://doi.org/10.1371/journal.pone.0218773.\n\n\nPereira, Rafael H. M., Carlos Kaue Vieira Braga, Bernardo Serra, and Vanessa Nadalin. 2019. “Desigualdades socioespaciais de acesso a oportunidades nas cidades brasileiras, 2019.” {Texto para Discuss\\~ao} 2535. Instituto de Pesquisa Econômica Aplicada (Ipea).\n\n\nPereira, Rafael H. M., Daniel Herszenhut, Carlos K. V. Braga, Diego B. Tomasiello, and Marcus Saraiva. 2022. “Aopdata: Data from the Access to Opportunities Project.” CRAN.\n\n\nPereira, Rafael H. M., Marcus Saraiva, Daniel Herszenhut, Carlos Kaue Vieira Braga, and Matthew Wigginton Conway. 2021. “R5r: Rapid Realistic Routing on Multimodal Transport Networks with R5 in R.” Transport Findings, March, 21262. https://doi.org/10.32866/001c.21262.\n\n\nVenter, Christoffel. 2016. “Assessing the Potential of Bus Rapid Transit-Led Network Restructuring for Enhancing Affordable Access to Employment The Case of Johannesburg’s Corridors of Freedom.” Research in Transportation Economics 59 (November): 441–49. https://doi.org/10.1016/j.retrec.2016.05.006."
  },
  {
    "objectID": "s3_dados_tp.en.html",
    "href": "s3_dados_tp.en.html",
    "title": "SECTION 3: Public transport data",
    "section": "",
    "text": "The purpose of this section are (1) to introduce the GTFS public transport data specification, (2) to show where to download GTFS data for Brazilian cities and for other cities around the globe and (3) to show how to manipulate and analyze GTFS data using R.\nPublic transport data is a key element of transport planning in general, and of accessibility analyses in particular. To be used with confidence, this data needs to be reliable and of simple inspection and interpretation.\nTo meet these criteria, transport agencies, decision makers and researchers have been trying to use data structured according to open and collaborative specifications - that is, whose format is decided upon by a community of different actors, including data producers (e.g. public transport agencies) and consumers (e.g. researchers and software developers). Although an open specification does not necessarily improve the quality and reliability of the data it describes, it brings many advantages that promote knowledge-sharing and the transparency of analyses and applications that depend on it - factors that, in turn, can substantially improve data quality and reliability.\nUsing a standard data format to represent public transport systems promotes sharing and developing many computational tools and softwares to analyze and use this data, which helps creating a space in which actors from different cities and countries can learn from and support each other. Thus, an application developed by a Brazilian transport agency can easily be used by a researcher in the United States, a Japanese developer or another transport agency in South Africa - as long as, of course, they organize their data in the same format. Moreover, the more widely this format is used, the greater the reliability of the specification itself, as multiple actors tend to expand their ability to use, interpret and inspect this data.\nThe open and collaborative data specification most widely used in public transport planning and operation is the GTFS format, short for General Transit Feed Specification. As shown in Chapter 3, GTFS data is also a key element when estimating urban accessibility levels by public transport. In this section, we will learn more about GTFS data, how it is structured, and how to work with it in R."
  },
  {
    "objectID": "4_dados_gtfs.en.html#gtfs-structure",
    "href": "4_dados_gtfs.en.html#gtfs-structure",
    "title": "4  GTFS data",
    "section": "4.1 GTFS structure",
    "text": "4.1 GTFS structure\nFiles in the GTFS Schedule format (from this point onwards referred to as GTFS) are also known as feeds1. A feed is nothing more than a compressed .zip file that contains a set of tables, saved in separate .txt files, describing some aspects of the public transport network (stops/stations location, trip frequency, itineraries paths, etc). Just like in a relational database, tables in a feed have key columns that allow one to link information described in one table to the data described in another one. An example of the GTFS scheme is presented in Figure 4.1, which shows some of the the most important tables that make up the specification and highlights the key columns that link the tables to each other.\n\n\n\n\n\nFigure 4.1: GTFS format scheme. Source - Pereira, Andrade, and Vieira (2022)\n\n\n\n\nIn total, the GTFS format can be made of up to 22 tables2. Some of them, however, are optional, i.e. they don’t need to be present for the feed to be considered valid. The specification classifies the presence of a table into the following categories: required, optional and conditionally required (when the requirement of the table depends on the existence of another particular table, column or value). For simplicity, in this book we will consider only the first two categories and we will indicate whether a table is required whenever appropriate. Using our simplified convention, tables are classified as follows:\n\nRequired: agency.txt, stops.txt, routes.txt, trips.txt, stop_times.txt, calendar.txt.\nOptional: calendar_dates.txt, fare_attributes.txt, fare_rules.txt, fare_products.txt, fare_leg_rules.txt, fare_transfer_rules.txt, areas.txt, stop_areas.txt, shapes.txt, frequencies.txt, transfers.txt, pathways.txt, levels.txt, translations.txt, feed_info.txt, attributions.txt.\n\nThroughout this chapter, we’ll learn about the basic structure of a GTFS file and its tables. We will focus only on the required tables and the optional tables most often used by producers and consumers of these files. For more information on the tables and columns not covered in this section, please check the official specification.\nIn this demonstration, we use a subset of a feed describing the public transport network of São Paulo, Brazil, produced by SPTrans3 and downloaded in October 2019. The feed contains the six required tables plus two widely used optional tables, shapes.txt and frequencies.txt, which gives a good overview of the GTFS format.\n\n\n\n\n4.1.1 agency.txt\nFile used to list the transport operators/agencies running the system described by the GTFS file. Although the term agency is used instead of operators, it is up to the feed producer to choose which institutions will be listed in the table.\nFor example, multiple bus companies operate in a given location, but all schedule and fare planning is carried out by a single institution, usually a transport agency or a specific public entity. Oftentime, this institution is also recognized by public transport users as the system operator. In this case, we should list the institution responsible for planning the system in the table.\nNow imagine a scenario in which a local public transport agency transfers the responsibility of operating a multimodal system to several companies (through concessions, for example). Each one of these companies is responsible for planning the schedules and fares of trips/routes they operate, provided that certain pre-established parameters are followed. In this case, we could list all operators in the table instead of listing the public transport agency.\nTable 4.1 shows the agency.txt file of SPTrans’ feed. We can see that the feed producers decided to list the company itself in the table, not the operators of the buses and the subway in the city.\n\n\n\n\nTable 4.1: Example of agency.txt\n\n\n\n\n\n\n\n\n\nagency_id\nagency_name\nagency_url\nagency_timezone\nagency_lang\n\n\n\n\n1\nSPTRANS\nhttp://www.sptrans.com.br/?versao=011019\nAmerica/Sao_Paulo\npt\n\n\n\n\n\n\nIt’s important to note that, although we are presenting agency.txt in table format, the information should be formatted as a .csv file. That is, the values of each cell must be separated by commas, and the contents of each table row must be listed in a different row of the .csv file. The table above, for example, is formatted as follows inside the GTFS.zip:\n\n\nagency_id,agency_name,agency_url,agency_timezone,agency_lang\n1,SPTRANS,http://www.sptrans.com.br/?versao=011019,America/Sao_Paulo,pt \n\n\nFor the sake of communicability and interpretability, next examples in this chapter are presented as tables. It is important to keep in mind, however, that these tables are structured as shown above inside the feeds.\n\n\n4.1.2 stops.txt\nFile used to describe the stops in a public transport system. The points listed in this file may reference simple stops (such as bus stops), stations, platforms, station entrances and exits, etc. Table 4.2 shows the stops.txt of SPTrans’ feed.\n\n\n\n\nTable 4.2: Example of stops.txt\n\n\n\n\n\n\n\n\n\nstop_id\nstop_name\nstop_desc\nstop_lat\nstop_lon\n\n\n\n\n706325\nParada 14 Bis B/C\nViad. Dr. Plínio De Queiroz, 901\n-23.55593\n-46.65011\n\n\n810602\nR. Sta. Rita, 56\nRef.: R. Bresser / R. João Boemer\n-23.53337\n-46.61229\n\n\n910776\nAv. Do Estado, 5854\nRef.: Rua Dona Ana Néri\n-23.55896\n-46.61520\n\n\n1010092\nParada Caetano Pinto\nAv. Rangel Pestana, 1249 Ref.: Rua Caetano Pinto/rua Prof. Batista De Andrade\n-23.54615\n-46.62218\n\n\n1010093\nParada Piratininga\nAv. Rangel Pestana, 1479 Ref.: Rua Monsenhor Andrade\n-23.54509\n-46.62006\n\n\n1010099\nR. Xavantes, 612\nRef.: Rua Joli\n-23.53545\n-46.61368\n\n\n\n\n\n\nThe columns stop_id and stop_name identify each stop, but fulfill different roles. The purpose of stop_id is to identify relationships between this table and others in the GTFS feed (as we will later see in the stop_times.txt file, for example). Meanwhile, the column stop_name serves as an identifier that should be easily recognized by the passengers, thus usually assuming values of station names, points of interest names or addresses (as in the case of SPTrans’ feed).\nThe stop_desc column, present in SPTrans’ feed, is optional and allows feed producers to add a description of each stop and its surroundings. Finally, stop_lat and stop_lon associate each stop to a point in space with its latitude and longitude geographic coordinates.\nTwo of the optional columns not present in this stops.txt table are location_type and parent_station. The location_type column is used to indicate the type of location that each point refers to. When not explicitly set, all points are interpreted as public transport stops, but distinct values can be used to distinguish a stop (location_type = 0) from a station (location_type = 1) or a boarding area (location_type = 2), for example. The parent_station column, on the other hand, is used to describe hierarchical relationships between two points. When describing a boarding area, for example, the feed producer must list the stop/platform that this area refers to, and when describing a stop/platform the producer can optionally list the station that it belongs to.\n\n\n4.1.3 routes.txt\nFile used to describe the routes operated in a public transport system and their respective transport modes. Table 4.3 shows the routes.txt of SPTrans’ feed.\n\n\n\n\nTable 4.3: Example of routes.txt\n\n\n\n\n\n\n\n\n\nroute_id\nagency_id\nroute_short_name\nroute_long_name\nroute_type\n\n\n\n\nCPTM L07\n1\nCPTM L07\nJUNDIAI - LUZ\n2\n\n\nCPTM L08\n1\nCPTM L08\nAMADOR BUENO - JULIO PRESTES\n2\n\n\nCPTM L09\n1\nCPTM L09\nGRAJAU - OSASCO\n2\n\n\nCPTM L10\n1\nCPTM L10\nRIO GRANDE DA SERRA - BRÁS\n2\n\n\nCPTM L11\n1\nCPTM L11\nESTUDANTES - LUZ\n2\n\n\nCPTM L12\n1\nCPTM L12\nCALMON VIANA - BRAS\n2\n\n\n\n\n\n\nAs in the case of stops.txt, the routes.txt table also includes different columns to distinguish between the identifier of each route (route_id) and their names. In this case, however, there are two distinct name columns: route_short_name and route_long_name. The first refers to the name of the route commonly recognized by passengers, while the second tends to be a more descriptive name. SPTrans, for example, has chosen to highlight the start and endpoints of each route in the latter column. We can also note that the same values are repeated in both route_id and route_short_name, which is neither required nor forbidden - in this case, the feed producer decided that the route names could satisfactorily work as identifiers because they are reasonably short and unique.\nThe agency_id column works as the key column that links the routes to the data described in agency.txt, and it indicates the agency responsible for each route - in this case the agency with id 1 (SPTrans itself). This column is optional in the case of feeds containing a single agency, but is mandatory otherwise. Using a feed describing a multimodal system with a subway corridor and several bus lines as an example, a possible configuration of routes.txt could associate the subway routes to the subway operator and the bus routes to the agency/company responsible for planning the bus schedules.\nThe route_type column is used to describe the transport mode of each route. The above example lists rail lines, whose corresponding numeric value is 2. The corresponding values of other transport modes are listed in the specification.\n\n\n4.1.4 trips.txt\nFile used to describe the trips that compose the system. The trip is the basic unit of movement in the GTFS format: each trip is associated with a public transport route (route_id), with a service that operates on certain days of the week (as we will later cover in calendar.txt) and with a spatial trajectory (as we will later cover in shapes.txt). Table 4.4 shows the trips.txt of SPTrans’ feed.\n\n\n\n\nTable 4.4: Example of trips.txt\n\n\n\n\n\n\n\n\n\n\ntrip_id\nroute_id\nservice_id\ntrip_headsign\ndirection_id\nshape_id\n\n\n\n\nCPTM L07-0\nCPTM L07\nUSD\nJUNDIAI\n0\n17846\n\n\nCPTM L07-1\nCPTM L07\nUSD\nLUZ\n1\n17847\n\n\nCPTM L08-0\nCPTM L08\nUSD\nAMADOR BUENO\n0\n17848\n\n\nCPTM L08-1\nCPTM L08\nUSD\nJULIO PRESTES\n1\n17849\n\n\nCPTM L09-0\nCPTM L09\nUSD\nGRAJAU\n0\n17850\n\n\nCPTM L09-1\nCPTM L09\nUSD\nOSASCO\n1\n17851\n\n\n\n\n\n\nThe trip_id column identifies the trips described in the table, just as the route_id references a route described in routes.txt. The service_id column identifies the services that determine the days of the week that each trip runs on (weekdays, weekends, a mix of both, etc), described in detail in calendar.txt. The rightmost column in the example above is shape_id, which identifies the spatial trajectory of each trip, described in detail in the shapes.txt file.\nThe two remaining columns, trip_headsign and direction_id, are optional and should be used to describe the direction/destination of the trip. The first, trip_headsign, is used to report the text that appears on the vehicle headsign (in the case of buses, for example) or on information panels (such as in subway and rail stations) highlighting the destination of the trip. The direction_id column is often used in conjunction with trip_headsign to distinguish the direction of each trip, where 0 represents one direction and 1 the opposite one . In our example, the first two rows describe trips that refer to the same public transport route (CPTM L07), but in opposite directions: one runs towards Jundiaí, and the other towards Luz.\n\n\n4.1.5 calendar.txt\nFile used to describe the different types of service calendars in a public transport system. A service, in this context, denotes a set of days of the week in which trips may occur. Each service is also defined by an interval, with a start and an end date, within which the service operates. Table 4.5 shows the calendar.txt of SPTrans’ feed.\n\n\n\n\nTable 4.5: Example of calendar.txt\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nservice_id\nmonday\ntuesday\nwednesday\nthursday\nfriday\nsaturday\nsunday\nstart_date\nend_date\n\n\n\n\nUSD\n1\n1\n1\n1\n1\n1\n1\n20080101\n20200501\n\n\nU__\n1\n1\n1\n1\n1\n0\n0\n20080101\n20200501\n\n\nUS_\n1\n1\n1\n1\n1\n1\n0\n20080101\n20200501\n\n\n_SD\n0\n0\n0\n0\n0\n1\n1\n20080101\n20200501\n\n\n__D\n0\n0\n0\n0\n0\n0\n1\n20080101\n20200501\n\n\nS\n0\n0\n0\n0\n0\n1\n0\n20080101\n20200501\n\n\n\n\n\n\nThe column service_id identifies each service described in the table. As shown earlier, this identifier is also used in the trips.txt, where it associates each trip to a particular service.\nThe monday, tuesday, wednesday, thursday, friday, saturday and sunday columns are used to set the days of the week in which each service operates. A value of 1 means that the service operates on that day, while a value of 0 means that it does not. In the example above, the USD service operates every day of the week and the service U__ operates only on business days.\nFinally, the columns start_date and end_date delimit the calendar interval. Dates in GTFS files must always be organized using the YYYYMMDD format: the first four numbers define the year, the subsequent two define the month and the last two, the day. The value 20220428, for example, represents the 28th of April 2022.\n\n\n4.1.6 shapes.txt\nFile used to describe the spatial path of each trip in the system. This file is optional, but feed producers are strongly encouraged to include it in their GTFS files. Table 4.6 shows the shapes.txt of SPTrans’ feed.\n\n\n\n\nTable 4.6: Example of shapes.txt\n\n\nshape_id\nshape_pt_lat\nshape_pt_lon\nshape_pt_sequence\n\n\n\n\n17846\n-23.53517\n-46.63535\n1\n\n\n17846\n-23.53513\n-46.63548\n2\n\n\n17846\n-23.53494\n-46.63626\n3\n\n\n17846\n-23.53473\n-46.63710\n4\n\n\n17846\n-23.53466\n-46.63735\n5\n\n\n17846\n-23.53416\n-46.63866\n6\n\n\n\n\n\n\nThe column shape_id identifies each shape, and it links each trip to its spatial trajectory in the trips.txt file. Unlike all the other identifiers we have seen so far, however, shape_id is repeated in several table rows. This is because each shape_id is defined by a sequence of spatial points, whose geographic coordinates are described with the shape_pt_lat and shape_pt_lon columns. The shape_pt_sequence column lists the sequence in which the points connect to form the shape - values listed in this column should increase along the path.\n\n\n4.1.7 stop_times.txt\nFile used to describe the timetable of each trip, including the arrival and departure times at each stop. How this table should be formatted depends on whether the GTFS file contains a frequencies.txt table or not, a detail that we will cover later. For now, we will look at the stop_times.txt of SPTrans’ feed, which also includes a frequencies.txt, in Table 4.7.\n\n\n\n\nTable 4.7: Example of stop_times.txt\n\n\ntrip_id\narrival_time\ndeparture_time\nstop_id\nstop_sequence\n\n\n\n\nCPTM L07-0\n04:00:00\n04:00:00\n18940\n1\n\n\nCPTM L07-0\n04:08:00\n04:08:00\n18920\n2\n\n\nCPTM L07-0\n04:16:00\n04:16:00\n18919\n3\n\n\nCPTM L07-0\n04:24:00\n04:24:00\n18917\n4\n\n\nCPTM L07-0\n04:32:00\n04:32:00\n18916\n5\n\n\nCPTM L07-0\n04:40:00\n04:40:00\n18965\n6\n\n\n\n\n\n\nThe trip whose timetable is being described is identified by the trip_id column. Similarly to what happens in shapes.txt, the same trip_id is found in many rows of the table. This is because, just as a trip trajectory is composed of a sequence of spatial points, a timetable consists of a sequence of several departure/arrival times at various public transport stops.\nThe following columns, arrival_time, departure_time and stop_id, describe the schedule of each trip, associating an arrival and a departure time at each visited stop. The time columns must be organized using the HH:MM:SS format, with the first two numbers defining the hour, the subsequent two the minutes and the last two, the seconds. This format also accepts hour values greater than 24, for example if a trip departs at 11:00 p.m. but it only arrives at a given station at 1:00 a.m. of the next day. In this case, the arrival time should be recorded as 25:00:00, not 01:00:00. The stop_id column associates the arrival and departure times with a stop described in the stops.txt, and the stop_sequence column lists the sequence in which the stops connect to form the trip schedule. The values of this last column must always increase along the trip.\nIt is worth highlighting here the difference between shapes.txt and stop_times.txt. Although both tables present some spatial information of the trips, they do it in different ways. The stop_times.txt file lists the sequence of stops and times that make up a schedule, but says nothing about the trajectory traveled between the stops. shapes.txt, on the other hand, describes the detailed trajectory of a trip, but does not specify where the public transport stops are located. Combined, the information from the two tables allows us to know both the schedule of each trip and the spatial trajectory between stops.\n\n\n4.1.8 frequencies.txt\nOptional file used to describe the frequency of each trip within a certain time interval of a day. Table 4.8 shows the frequency.txt of SPTrans’ feed.\n\n\n\n\nTable 4.8: Example of frequencies.txt\n\n\ntrip_id\nstart_time\nend_time\nheadway_secs\n\n\n\n\nCPTM L07-0\n04:00:00\n04:59:00\n720\n\n\nCPTM L07-0\n05:00:00\n05:59:00\n360\n\n\nCPTM L07-0\n06:00:00\n06:59:00\n360\n\n\nCPTM L07-0\n07:00:00\n07:59:00\n360\n\n\nCPTM L07-0\n08:00:00\n08:59:00\n360\n\n\nCPTM L07-0\n09:00:00\n09:59:00\n480\n\n\n\n\n\n\nThe trip whose frequency is being described is identified by the trip_id column. Again, the same identifier may appear in multiple observations. This is because the specification allows the same trip to have different frequencies throughout the day, such as at peak and off-peak hours, for example. Each row refers to the frequency of a given trip_id between a time interval specified in the start_time and end_time columns.\nWithin the time interval specified by these two columns, the trip operates on regular headways specified in headway_secs. The headway is the time between trips performed by vehicles in the same route. This time must be specified in seconds. In the example above, we see a headway of 720 between 4 and 5am, which indicates that the CPTM L07-0 trip departs every 12 minutes within this interval.\nUsing frequencies.txt and stop_times.txt together\nIt is important to understand how the presence of a frequencies.txt table changes the specification of stop_times.txt. As we can see in the stop_times.txt example, the CPTM L07-0 trip departs from the first stop at 04:00 am and arrives at the second at 04:08 am. The arrival and departure times at a given stop, however, cannot be specified more than once for each trip, even though the headway set in frequencies.txt defines that this trip departs every 12 minutes from 4 am to 5 am. If that’s the case, how can we set the schedule of trips departing at 04:12 am, 04:24 am, 04:36 am, etc?\nIf the frequency of a trip is specified in frequencies.txt, the timetable of this trip defined in stop_times.txt should be understood as a reference that describes the time between stops. In other words, the times defined in the stop_times.txt file should not be interpreted rigorously. For example, the timetable of trip CPTM L07-0 establishes that the journey between the first and second stop takes 8 minutes to complete, which is the same travel time between the second and third stops as well. Thus, a trip departing from the first stop at 04:00 am arrives at the second at 04:08 am and at the third at 04:16 am. The next trip, which on the other hand departs from the first stop at 04:12 am, arrives at the second stop at 04:20 am, and the third at 04:28 am.\nTo describe the same trips in stop_times.txt without making a frequencies.txt table, one could add a suffix that would identify each trip of route CPTM L07 in direction 0 throughout the day. The trip with id CPTM L07-0_1, for example, would be the first trip 0 of the day heading towards direction 0 and it would depart from the first stop at 04:00 am and arrive at the second at 04:08 am. The CPTM L07-0_2 trip, on the other hand, would be the second trip of the day and would depart from the first stop at 04:12 am and arrive at the second at 04:20 am. The rest of the trips would follow the same pattern. Each one of these trips would also need to be added to trips.txt, as well as to any other tables that would refer to the trip_id.\nAnother variable that changes how frequencies.txt affects the timetables in stop_times.txt is the optional column exact_times. When it assumes the value of 0 (or when it is missing from the feed, as in the case of the SPTrans’ GTFS file) it indicates that the trip does not necessarily follow a fixed schedule over the time interval. Instead, operators try to maintain a predetermined headway during the interval. Using the same example of a trip whose headway is 12 minutes between 4:00 am and 5:00 am, this would mean that the first departure does not necessarily happen at 4:00 am, the second at 04:12 am, and so on. The first trip can, for example, leave at 4:02 am. The second, at 4:14 am or 4:13 am, etc. Meanwhile, one should use exact_times with value 1 to define a schedule that always follows with the exact same headway. This would be equivalent to defining several similar trips departing at different times in stop_times.txt (as shown in the previous paragraph)."
  },
  {
    "objectID": "4_dados_gtfs.en.html#finding-gtfs-data-for-brazilian-cities",
    "href": "4_dados_gtfs.en.html#finding-gtfs-data-for-brazilian-cities",
    "title": "4  GTFS data",
    "section": "4.2 Finding GTFS data for Brazilian cities",
    "text": "4.2 Finding GTFS data for Brazilian cities\nGTFS data from cities all over the world can be downloaded with the {tidytransit} R package or on the Transitland website. In Brazil, several cities use GTFS data to plan and operate their transport systems. In many cases, however, the data is owned by private companies and operators and may not be publicly available. As a result, GTFS data in Brazil is seldom openly available, which goes against the public interest and against good practices of government transparency and data management. Table 4.9 lists some of the few Brazilian cities that make their GTFS feeds openly available to the public4.\n\n\n\n\nTable 4.9: Openly available GTFS data in Brazil\n\n\nCity\nSource\nInfo\n\n\n\n\nBelo Horizonte\nBHTrans\nOpen data: conventional transport network; supplementary network.\n\n\nFortaleza\nETUFOR\nOpen data.\n\n\nFortaleza\nMetrofor\nOpen data.\n\n\nPorto Alegre\nEPTC\nOpen data.\n\n\nRio de Janeiro\nSMTR\nOpen data.\n\n\nSão Paulo\nEMTU\nDownload link. Registration required.\n\n\nSão Paulo\nSPTrans\nDownload link. Registration required.\n\n\n\n\n\n\nNote: The GTFS data provided by Rio de Janeiro Municipal Department of Transport (SMTR) only includes the bus system, and it does not include train and subway data.\n\n\n\n\nMcHugh, Bibiana. 2013. “Pioneering Open Data Standards: The GTFS Story.” In Beyond Transparency: Open Data and the Future of Civic Innovation, edited by Brett Goldstein and Lauren Dyson, First, 125–35. San Francisco, CA: Code for America Press.\n\n\nPereira, Rafael H. M., Pedro R. Andrade, and João Pedro Bazzo Vieira. 2022. “Exploring the Time Geography of Public Transport Networks with the Gtfs2gps Package.” Journal of Geographical Systems, December. https://doi.org/10.1007/s10109-022-00400-x."
  },
  {
    "objectID": "5_gtfstools.en.html#reading-and-manipulating-gtfs-files",
    "href": "5_gtfstools.en.html#reading-and-manipulating-gtfs-files",
    "title": "5  GTFS data manipulation and visualization",
    "section": "5.1 Reading and manipulating GTFS files",
    "text": "5.1 Reading and manipulating GTFS files\nReading GTFS files with {gtfstools} is done with the read_gtfs() function, which receives a string with the file path. The package represents a feed as a list of data.tables, a high-performance version of data.frames. Throughout this chapter, we will refer to this list of tables as a GTFS object. By default, the function reads all .txt tables in the feed:\n\n# loads the package\nlibrary(gtfstools)\n\n# points to path of the sample gtfs data installed in {gtfstools}\npath <- system.file(\"extdata/spo_gtfs.zip\", package = \"gtfstools\")\n\n# reads the gtfs\ngtfs <- read_gtfs(path)\n\n# checks the tables inside the gtfs object\nnames(gtfs)\n\n[1] \"agency\"      \"calendar\"    \"frequencies\" \"routes\"      \"shapes\"     \n[6] \"stop_times\"  \"stops\"       \"trips\"      \n\n\nWe can see that each data.table within the GTFS object is named according to the table it represents, without the .txt extension. This configuration allows us to select and manipulate each table individually. The code below, for example, lists the first 6 rows of the trips table:\n\nhead(gtfs$trips)\n\n   route_id service_id    trip_id trip_headsign direction_id shape_id\n1: CPTM L07        USD CPTM L07-0       JUNDIAI            0    17846\n2: CPTM L07        USD CPTM L07-1           LUZ            1    17847\n3: CPTM L08        USD CPTM L08-0  AMADOR BUENO            0    17848\n4: CPTM L08        USD CPTM L08-1 JULIO PRESTES            1    17849\n5: CPTM L09        USD CPTM L09-0        GRAJAU            0    17850\n6: CPTM L09        USD CPTM L09-1        OSASCO            1    17851\n\n\nTables within a GTFS object can be easily manipulated using the {dplyr} or {data.table} packages, for example. In this book, we opted to show how to do this using the {data.table} package syntax. This package offers several useful features, primarily for manipulating tables with a large number of records, such as updating columns by reference, very fast row subsets and efficient data aggregation1. For example, we can use the code below to add 100 seconds to all the headways listed in the frequencies table and later reverse this change:\n\n# saves original headways\noriginal_headway <- gtfs$frequencies$headway_secs\nhead(gtfs$frequencies, 3)\n\n      trip_id start_time end_time headway_secs\n1: CPTM L07-0   04:00:00 04:59:00          720\n2: CPTM L07-0   05:00:00 05:59:00          360\n3: CPTM L07-0   06:00:00 06:59:00          360\n\n# updates the headways\ngtfs$frequencies[, headway_secs := headway_secs + 100]\nhead(gtfs$frequencies, 3)\n\n      trip_id start_time end_time headway_secs\n1: CPTM L07-0   04:00:00 04:59:00          820\n2: CPTM L07-0   05:00:00 05:59:00          460\n3: CPTM L07-0   06:00:00 06:59:00          460\n\n# restores the original headway\ngtfs$frequencies[, headway_secs := original_headway]\nhead(gtfs$frequencies, 3)\n\n      trip_id start_time end_time headway_secs\n1: CPTM L07-0   04:00:00 04:59:00          720\n2: CPTM L07-0   05:00:00 05:59:00          360\n3: CPTM L07-0   06:00:00 06:59:00          360\n\n\nAfter editing a GTFS object in R, we often want to use the processed GTFS to perform different analyses. In order to do this, we frequently need the GTFS file in .zip format again, and not as a list of tables in an R session. To do this, {gtfstools} includes the write_gtfs() function to transform GTFS objects that exist in an R session into GTFS files saved to disk. To use this function, we only need to list the object that should be written to disk and the file path where it should be written to:\n\n# points to the path where the GTFS should be written to\nexport_path <- tempfile(\"new_gtfs\", fileext = \".zip\")\n\n# writes the GTFS to the path\nwrite_gtfs(gtfs, path = export_path)\n\n# lists files within the feed\nzip::zip_list(export_path)[, c(\"filename\", \"compressed_size\", \"timestamp\")]\n\n         filename compressed_size           timestamp\n1      agency.txt             112 2023-03-02 19:19:14\n2    calendar.txt             129 2023-03-02 19:19:14\n3 frequencies.txt            2381 2023-03-02 19:19:14\n4      routes.txt             659 2023-03-02 19:19:14\n5      shapes.txt          160470 2023-03-02 19:19:14\n6  stop_times.txt            7907 2023-03-02 19:19:14\n7       stops.txt           18797 2023-03-02 19:19:14\n8       trips.txt             717 2023-03-02 19:19:14"
  },
  {
    "objectID": "5_gtfstools.en.html#calculating-trip-speed",
    "href": "5_gtfstools.en.html#calculating-trip-speed",
    "title": "5  GTFS data manipulation and visualization",
    "section": "5.2 Calculating trip speed",
    "text": "5.2 Calculating trip speed\nGTFS files are often used in public transport routing applications and to inform the timetable of different routes in a given region to potential passengers. Feeds must, therefore, accurately describe the schedule of public transport trips.\nOne key piece of information of a GTFS quality is the average speed of its trips. To check this information {gtfstools} package includes the function get_trip_speed(). By default, the function returns the speed (in km/h) of all trips included in the feed, but one can choose to calculate the speed of selected trips with the trip_id parameter:\n\n# calculates the speeds of all trips\nspeeds <- get_trip_speed(gtfs)\n\nhead(speeds)\n\n     trip_id origin_file     speed\n1: 2002-10-0      shapes  8.952511\n2: 2105-10-0      shapes 10.253365\n3: 2105-10-1      shapes  9.795292\n4: 2161-10-0      shapes 11.182534\n5: 2161-10-1      shapes 11.784458\n6: 4491-10-0      shapes 13.203560\n\nnrow(speeds)\n\n[1] 36\n\n# calculates the speeds of two specific trips\nspeeds <- get_trip_speed(gtfs, trip_id = c(\"CPTM L07-0\", \"2002-10-0\"))\n\nhead(speeds)\n\n      trip_id origin_file     speed\n1:  2002-10-0      shapes  8.952511\n2: CPTM L07-0      shapes 26.787768\n\n\nTo calculate the speed of a trip we need to know its length and how long it takes to travel from its first to its last stop. Behind the scenes, get_trip_speed() uses two other functions from {gtfstools} toolset: get_trip_length() and get_trip_duration(). The usage of both is very similar to what has been shown before, returning the length/duration of all trips by default, or of for a few specified trips. Below, we show their default behavior:\n\n# calculates the length of all trips\nlengths <- get_trip_length(gtfs, file = \"shapes\")\n\nhead(lengths)\n\n      trip_id   length origin_file\n1: CPTM L07-0 60.71894      shapes\n2: CPTM L07-1 60.71894      shapes\n3: CPTM L08-0 41.79037      shapes\n4: CPTM L08-1 41.79037      shapes\n5: CPTM L09-0 31.88906      shapes\n6: CPTM L09-1 31.88906      shapes\n\n# calculates the duration of all trips\ndurations <- get_trip_duration(gtfs)\n\nhead(durations)\n\n     trip_id duration\n1: 2002-10-0       48\n2: 2105-10-0      108\n3: 2105-10-1      111\n4: 2161-10-0       94\n5: 2161-10-1       93\n6: 4491-10-0       69\n\n\nJust as get_trip_speed() returns speeds in km/h by default, get_trip_length() returns lengths in km and get_trip_duration() returns the duration in minutes. These units can be adjusted with the unit argument, present in all three functions."
  },
  {
    "objectID": "5_gtfstools.en.html#combining-and-filtering-feeds",
    "href": "5_gtfstools.en.html#combining-and-filtering-feeds",
    "title": "5  GTFS data manipulation and visualization",
    "section": "5.3 Combining and filtering feeds",
    "text": "5.3 Combining and filtering feeds\nThe tasks of processing and manipulating GTFS files are often performed manually, which may increase the chances of leaving minor inconsistencies or errors in the data. A common issue in some GTFS feeds is the presence of duplicate records in the same table. SPTrans’ feed, for example, contains duplicate records both in agency.txt and in calendar.txt:\n\ngtfs$agency\n\n   agency_id agency_name                               agency_url\n1:         1     SPTRANS http://www.sptrans.com.br/?versao=011019\n2:         1     SPTRANS http://www.sptrans.com.br/?versao=011019\n     agency_timezone agency_lang\n1: America/Sao_Paulo          pt\n2: America/Sao_Paulo          pt\n\ngtfs$calendar\n\n    service_id monday tuesday wednesday thursday friday saturday sunday\n 1:        USD      1       1         1        1      1        1      1\n 2:        U__      1       1         1        1      1        0      0\n 3:        US_      1       1         1        1      1        1      0\n 4:        _SD      0       0         0        0      0        1      1\n 5:        __D      0       0         0        0      0        0      1\n 6:        _S_      0       0         0        0      0        1      0\n 7:        USD      1       1         1        1      1        1      1\n 8:        U__      1       1         1        1      1        0      0\n 9:        US_      1       1         1        1      1        1      0\n10:        _SD      0       0         0        0      0        1      1\n11:        __D      0       0         0        0      0        0      1\n12:        _S_      0       0         0        0      0        1      0\n    start_date   end_date\n 1: 2008-01-01 2020-05-01\n 2: 2008-01-01 2020-05-01\n 3: 2008-01-01 2020-05-01\n 4: 2008-01-01 2020-05-01\n 5: 2008-01-01 2020-05-01\n 6: 2008-01-01 2020-05-01\n 7: 2008-01-01 2020-05-01\n 8: 2008-01-01 2020-05-01\n 9: 2008-01-01 2020-05-01\n10: 2008-01-01 2020-05-01\n11: 2008-01-01 2020-05-01\n12: 2008-01-01 2020-05-01\n\n\n{gtfstools} includes the remove_duplicates() function to keep only unique entries in all tables of the feed. This function takes a GTFS object as input and returns the same object without duplicate entries:\n\nno_dups_gtfs <- remove_duplicates(gtfs)\n\nno_dups_gtfs$agency\n\n   agency_id agency_name                               agency_url\n1:         1     SPTRANS http://www.sptrans.com.br/?versao=011019\n     agency_timezone agency_lang\n1: America/Sao_Paulo          pt\n\nno_dups_gtfs$calendar\n\n   service_id monday tuesday wednesday thursday friday saturday sunday\n1:        USD      1       1         1        1      1        1      1\n2:        U__      1       1         1        1      1        0      0\n3:        US_      1       1         1        1      1        1      0\n4:        _SD      0       0         0        0      0        1      1\n5:        __D      0       0         0        0      0        0      1\n6:        _S_      0       0         0        0      0        1      0\n   start_date   end_date\n1: 2008-01-01 2020-05-01\n2: 2008-01-01 2020-05-01\n3: 2008-01-01 2020-05-01\n4: 2008-01-01 2020-05-01\n5: 2008-01-01 2020-05-01\n6: 2008-01-01 2020-05-01\n\n\nWe often have to deal with multiple feeds describing the same study area - for example, when the bus and the rail systems of a single city are described in separate GTFS files. In such cases, we may want to merge both files into a single feed to reduce the data processing effort. To help us with that, {gtfstools} includes the merge_gtfs() function. The example below shows the output of merging SPtrans’ feed (without duplicate entries) with EPTC’s (Porto Alegre’s Transport and Traffic Public Company):\n\n# reads Porto Alegre's GTFS\npoa_path <- system.file(\"extdata/poa_gtfs.zip\", package = \"gtfstools\")\npoa_gtfs <- read_gtfs(poa_path)\n\npoa_gtfs$agency\n\n   agency_id                                 agency_name             agency_url\n1:      EPTC Empresa Publica de Transportes e Circulação http://www.eptc.com.br\n     agency_timezone agency_lang agency_phone\n1: America/Sao_Paulo          pt          156\n                                                  agency_fare_url\n1: http://www2.portoalegre.rs.gov.br/eptc/default.php?p_secao=155\n\nno_dups_gtfs$agency\n\n   agency_id agency_name                               agency_url\n1:         1     SPTRANS http://www.sptrans.com.br/?versao=011019\n     agency_timezone agency_lang\n1: America/Sao_Paulo          pt\n\n# combines Porto Alegre's and São Paulo's GTFS objects\ncombined_gtfs <- merge_gtfs(no_dups_gtfs, poa_gtfs)\n\n# check results\ncombined_gtfs$agency\n\n   agency_id                                 agency_name\n1:         1                                     SPTRANS\n2:      EPTC Empresa Publica de Transportes e Circulação\n                                 agency_url   agency_timezone agency_lang\n1: http://www.sptrans.com.br/?versao=011019 America/Sao_Paulo          pt\n2:                   http://www.eptc.com.br America/Sao_Paulo          pt\n   agency_phone                                                agency_fare_url\n1:                                                                            \n2:          156 http://www2.portoalegre.rs.gov.br/eptc/default.php?p_secao=155\n\n\nWe can see that the tables of both feeds are combined into a single one. This is the case when two (or more) GTFS objects contain the same table (agency, in the example). When a particular table is present in only one of the feeds, the function keeps this table in the output. That’s the case of the frequencies table, in our example, which exists only in SPTrans’ feed:\n\nnames(poa_gtfs)\n\n[1] \"agency\"     \"calendar\"   \"routes\"     \"shapes\"     \"stop_times\"\n[6] \"stops\"      \"trips\"     \n\nnames(no_dups_gtfs)\n\n[1] \"agency\"      \"calendar\"    \"frequencies\" \"routes\"      \"shapes\"     \n[6] \"stop_times\"  \"stops\"       \"trips\"      \n\nnames(combined_gtfs)\n\n[1] \"agency\"      \"calendar\"    \"frequencies\" \"routes\"      \"shapes\"     \n[6] \"stop_times\"  \"stops\"       \"trips\"      \n\nidentical(no_dups_gtfs$frequencies, combined_gtfs$frequencies)\n\n[1] TRUE\n\n\nAnother frequently used operation when dealing with GTFS files is filtering the data. Feeds are often used to describe large-scale public transport networks, which may result in complex and slow data manipulation, analysis and sharing. Thus, planners and researchers often work with a feed subset. If we want to measure the performance of a transport network during the morning peak, for example, we can filter our GTFS data to keep only the observations that relate to trips that run within this period.\n{gtfstools} includes lots of functions to filter GTFS data. The currently available filtering functions are:\n\nfilter_by_agency_id()\nfilter_by_route_id()\nfilter_by_service_id()\nfilter_by_shape_id()\nfilter_by_stop_id()\nfilter_by_trip_id()\nfilter_by_route_type()\nfilter_by_weekday()\nfilter_by_time_of_day()\nfilter_by_sf()\n\nFiltering by identifiers\nThe six first function from the above list (filter_by_agency_id(), filter_by_route_id(), filter_by_service_id(), filter_by_shape_id(), filter_by_stop_id() e filter_by_trip_id()) work very similarly. They take as input a vector of identifiers and return a GTFS object whose table entries are related to the specified ids. The example below demonstrates the functionality with filter_by_trip_id():\n\n# checks pre-filter object size \nutils::object.size(gtfs)\n\n864568 bytes\n\nhead(gtfs$trips[, .(trip_id, trip_headsign, shape_id)])\n\n      trip_id trip_headsign shape_id\n1: CPTM L07-0       JUNDIAI    17846\n2: CPTM L07-1           LUZ    17847\n3: CPTM L08-0  AMADOR BUENO    17848\n4: CPTM L08-1 JULIO PRESTES    17849\n5: CPTM L09-0        GRAJAU    17850\n6: CPTM L09-1        OSASCO    17851\n\n# keeps entries related to the two specified ids\nfiltered_gtfs <- filter_by_trip_id(\n  gtfs,\n  trip_id = c(\"CPTM L07-0\", \"CPTM L07-1\")\n)\n\n# checks post-filter object size\nutils::object.size(filtered_gtfs)\n\n71592 bytes\n\nhead(filtered_gtfs$trips[, .(trip_id, trip_headsign, shape_id)])\n\n      trip_id trip_headsign shape_id\n1: CPTM L07-0       JUNDIAI    17846\n2: CPTM L07-1           LUZ    17847\n\nunique(filtered_gtfs$shapes$shape_id)\n\n[1] \"17846\" \"17847\"\n\n\nWe can see from the code snippet above that the function not only filters trips, but all other tables containing a column that relates to trip_id in any way. The shapes of trips CPTM L07-0 and CPTM L07-1, for example, are respectively described by shape_ids 17846 and 17847. Therefore, these are the only shape identifiers kept in the filtered GTFS.\nThe function also supports the opposite behavior: instead of keeping the entries related to the specified identifiers, we can drop them. To do this, we need to set the keep argument to FALSE:\n\n# removes entries related to two trips from the feed\nfiltered_gtfs <- filter_by_trip_id(\n  gtfs,\n  trip_id = c(\"CPTM L07-0\", \"CPTM L07-1\"),\n  keep = FALSE\n)\n\nhead(filtered_gtfs$trips[, .(trip_id, trip_headsign, shape_id)])\n\n      trip_id       trip_headsign shape_id\n1: CPTM L08-0        AMADOR BUENO    17848\n2: CPTM L08-1       JULIO PRESTES    17849\n3: CPTM L09-0              GRAJAU    17850\n4: CPTM L09-1              OSASCO    17851\n5: CPTM L10-0 RIO GRANDE DA SERRA    17852\n6: CPTM L10-1                BRÁS    17853\n\nhead(unique(filtered_gtfs$shapes$shape_id))\n\n[1] \"17848\" \"17849\" \"17850\" \"17851\" \"17852\" \"17853\"\n\n\nWe can see that the specified trips, as well as their shapes, are not present in the filtered GTFS anymore. The same logic, demonstrated here with filter_by_trip_id(), applies to the functions that filter GTFS objects by agency_id, route_id, service_id, shape_id, stop_id and route_type.\nFiltering by day of the week and time of the day\nAnother common operation when dealing with GTFS data is subsetting feeds to keep services that only happen during certain times of the day or days of the week. The package includes the filter_by_weekday() and filter_by_time_of_day() functions to perform these filters.\nfilter_by_weekday() takes as input the days of the week whose services that operate on them should be kept (or dropped). The function also includes a combine parameter, which defines how filters for multi-days should work. When this argument receives the value \"and\", only services that operate on every single specified day are kept. When it receives the value \"or\", services that operate on at least one of the days are kept:\n\n# keeps services that operate on both on saturday AND sunday\nfiltered_gtfs <- filter_by_weekday(\n  no_dups_gtfs,\n  weekday = c(\"saturday\", \"sunday\"),\n  combine = \"and\"\n)\n\nfiltered_gtfs$calendar[, c(\"service_id\", \"sunday\", \"saturday\")]\n\n   service_id sunday saturday\n1:        USD      1        1\n2:        _SD      1        1\n\n# keeps services that operate EITHER on saturday OR on sunday\nfiltered_gtfs <- filter_by_weekday(\n  no_dups_gtfs,\n  weekday = c(\"sunday\", \"saturday\"),\n  combine = \"or\"\n)\n\nfiltered_gtfs$calendar[, c(\"service_id\", \"sunday\", \"saturday\")]\n\n   service_id sunday saturday\n1:        USD      1        1\n2:        US_      0        1\n3:        _SD      1        1\n4:        __D      1        0\n5:        _S_      0        1\n\n\nfilter_by_time_of_day(), on the other hand, takes the beginning and the end of a time window and keeps (or drops) the entries related to the trips that run within this window. The behavior of this function depends on whether a frequencies table is included in the feed or not: the stop_times timetable of trips listed in frequencies must not be filtered, because, as previously mentioned, it works as a reference that describes the time between consecutive stops, and the departure and arrival times listed there should not be considered rigorously. If a trip is not listed in frequencies, however, its stop_times entries are filtered according to the specified time window. Let’s see how the function works with some examples:\n\n# keeps trips that run within the 5am to 6am window\nfiltered_gtfs <- filter_by_time_of_day(gtfs, from = \"05:00:00\", to = \"06:00:00\")\n\nhead(filtered_gtfs$frequencies)\n\n      trip_id start_time end_time headway_secs\n1: CPTM L07-0   05:00:00 05:59:00          360\n2: CPTM L07-1   05:00:00 05:59:00          360\n3: CPTM L08-0   05:00:00 05:59:00          480\n4: CPTM L08-1   05:00:00 05:59:00          480\n5: CPTM L09-0   05:00:00 05:59:00          480\n6: CPTM L09-1   05:00:00 05:59:00          480\n\nhead(filtered_gtfs$stop_times[, c(\"trip_id\", \"departure_time\", \"arrival_time\")])\n\n      trip_id departure_time arrival_time\n1: CPTM L07-0       04:00:00     04:00:00\n2: CPTM L07-0       04:08:00     04:08:00\n3: CPTM L07-0       04:16:00     04:16:00\n4: CPTM L07-0       04:24:00     04:24:00\n5: CPTM L07-0       04:32:00     04:32:00\n6: CPTM L07-0       04:40:00     04:40:00\n\n# save the frequencies table and remove it from the original gtfs\nfrequencies <- gtfs$frequencies\ngtfs$frequencies <- NULL\n\nfiltered_gtfs <- filter_by_time_of_day(gtfs, from = \"05:00:00\", to = \"06:00:00\")\n\nhead(filtered_gtfs$stop_times[, c(\"trip_id\", \"departure_time\", \"arrival_time\")])\n\n      trip_id departure_time arrival_time\n1: CPTM L07-0       05:04:00     05:04:00\n2: CPTM L07-0       05:12:00     05:12:00\n3: CPTM L07-0       05:20:00     05:20:00\n4: CPTM L07-0       05:28:00     05:28:00\n5: CPTM L07-0       05:36:00     05:36:00\n6: CPTM L07-0       05:44:00     05:44:00\n\n\nFiltering the stop_times table can work in two different ways. One is to keep entire trips that cross the specified time window. The other is to keep only the timetable entries that take place inside this window (default behavior). This behavior is controlled by the full_trips parameter, as shown below (please pay attention to the times and stops present in each example):\n\n# keeps any trips that cross the 5am to 6am window intact\nfiltered_gtfs <- filter_by_time_of_day(\n  gtfs,\n  from = \"05:00:00\", \n  to = \"06:00:00\",\n  full_trips = TRUE\n)\n\nhead(\n  filtered_gtfs$stop_times[\n    ,\n    c(\"trip_id\", \"departure_time\", \"arrival_time\", \"stop_sequence\")\n  ]\n)\n\n      trip_id departure_time arrival_time stop_sequence\n1: CPTM L07-0       04:00:00     04:00:00             1\n2: CPTM L07-0       04:08:00     04:08:00             2\n3: CPTM L07-0       04:16:00     04:16:00             3\n4: CPTM L07-0       04:24:00     04:24:00             4\n5: CPTM L07-0       04:32:00     04:32:00             5\n6: CPTM L07-0       04:40:00     04:40:00             6\n\n# keeps only the timetable entries that happen inside the 5am to 6am window\nfiltered_gtfs <- filter_by_time_of_day(\n  gtfs,\n  from = \"05:00:00\",\n  to = \"06:00:00\",\n  full_trips = FALSE\n)\n\nhead(\n  filtered_gtfs $stop_times[\n    ,\n    c(\"trip_id\", \"departure_time\", \"arrival_time\", \"stop_sequence\")\n  ]\n)\n\n      trip_id departure_time arrival_time stop_sequence\n1: CPTM L07-0       05:04:00     05:04:00             9\n2: CPTM L07-0       05:12:00     05:12:00            10\n3: CPTM L07-0       05:20:00     05:20:00            11\n4: CPTM L07-0       05:28:00     05:28:00            12\n5: CPTM L07-0       05:36:00     05:36:00            13\n6: CPTM L07-0       05:44:00     05:44:00            14\n\n\nFiltering using a spatial extent\nFinally, {gtfstools} also includes a function that allows one to filter a GTFS object using a spatial polygon. filter_by_sf() takes an sf/sfc object (spatial representation created by the {sf} package), or its bounding box, and keeps the entries related to trips depending on their position in relation to that spatial polygon. Although this might seem complicated, this filtering process is fairly easy to grasp once we illustrate it with an example. To demonstrate this function, we are going to filter SPTrans’ feed using the bounding box of shape 68962. With the code snippet below we show the spatial distribution of unfiltered data along with the bounding box in red:\n\nlibrary(ggplot2)\n\n# creates a polygon with the bounding box of shape 68962\nshape_68962 <- convert_shapes_to_sf(gtfs, shape_id = \"68962\")\nbbox <- sf::st_bbox(shape_68962)\nbbox_geometry <- sf::st_as_sfc(bbox)\n\n# creates a geometry with all the shapes described in the gtfs\nall_shapes <- convert_shapes_to_sf(gtfs)\n\nggplot() +\n  geom_sf(data = all_shapes) +\n  geom_sf(data = bbox_geometry, fill = NA, color = \"red\") +\n  theme_minimal()\n\n\n\n\nPlease note that we have used the convert_shapes_to_sf() function, also included in {gtfstools}, to convert the shapes described in the feed into a sf spatial object. By default, filter_by_sf() keeps all entries related to trips that intersect with the specified polygon:\n\nfiltered_gtfs <- filter_by_sf(gtfs, bbox)\nfiltered_shapes <- convert_shapes_to_sf(filtered_gtfs)\n\nggplot() +\n  geom_sf(data = filtered_shapes) +\n  geom_sf(data = bbox_geometry, fill = NA, color = \"red\") +\n  theme_minimal()\n\n\n\n\nWe can, however, specify different spatial operations to filter the feed. The code below shows how we can keep the entries related to trips that are contained by the specified polygon:\n\nfiltered_gtfs <- filter_by_sf(gtfs, bbox, spatial_operation = sf::st_contains)\nfiltered_shapes <- convert_shapes_to_sf(filtered_gtfs)\n\nggplot() +\n  geom_sf(data = filtered_shapes) +\n  geom_sf(data = bbox_geometry, fill = NA, color = \"red\") +\n  theme_minimal()"
  },
  {
    "objectID": "5_gtfstools.en.html#validating-gtfs-data",
    "href": "5_gtfstools.en.html#validating-gtfs-data",
    "title": "5  GTFS data manipulation and visualization",
    "section": "5.4 Validating GTFS data",
    "text": "5.4 Validating GTFS data\nTransport planners and researchers often want to assess the quality of the GTFS data they are producing or using in their analyses. Are feeds structured following the best practices adopted by the larger GTFS community? Are tables and columns adequately formatted? Is the information described by the feed reasonable (trip speeds, stop locations, etc)? These are some of the questions that may arise when dealing with GTFS data.\nTo answer these and other questions, {gtfstools} includes the validate_gtfs() function. This function works as a wrapper to MobilityData’s Canonical GTFS Validator. The validator requires Java version 11 or higher to run. For more information on how to check the installed version of Java in your computer or on how to install the required version, please check Chapter 3.\nUsing validate_gtfs() is very simple. First, we need to download the validator. To do this, we use the download_validator() function, included in the package, which receives the path to the directory where the validator should be saved to, and the version of the validator that should be downloaded (defaults to the latest available). The function returns the path to the downloaded validator:\n\ntmpdir <- tempdir()\n\nvalidator_path <- download_validator(tmpdir)\nvalidator_path\n\n[1] \"/tmp/RtmpVsog3f/gtfs-validator-v4.0.0.jar\"\n\n\nThe second (and final) step consists in actually validating the GTFS data with validate_gtfs(). This function supports GTFS data in different formats: (a) as a GTFS object in an R session, (b) as a path to a local GTFS file in .zip format, (c) as an URL pointing to a feed or (d) as a directory containing unzipped GTFS tables. The function also takes a path to a directory where the validation result should be saved to, and the path to the validator that should be used in the process. In the example below we validate SPTrans’ feed from its path:\n\noutput_dir <- tempfile(\"gtfs_validation\")\n\nvalidate_gtfs(\n  path,\n  output_path = output_dir,\n  validator_path = validator_path\n)\n\nlist.files(output_dir)\n\n[1] \"report.html\"           \"report.json\"           \"system_errors.json\"   \n[4] \"validation_stderr.txt\"\n\n\nWe can see that the validation process generates a few output files:\n\nreport.html, shown in Figure 5.1, which summarizes the validation result in a nicely formatted HTML page (only available with validator version 3.1.0 or higher);\nreport.json, which summarizes the same information, but in JSON format, which can be used to programatically parse and process the results;\nsystem_errors.json, which summarizes eventual system errors that may have happened during the validation process and may compromise the results;\nvalidation_stderr.txt, which lists informative messages sent by the validator tool, including a list of the tests conducted, eventual error messages, etc2.\n\n\n\n\n\n\nFigure 5.1: Validation report example"
  },
  {
    "objectID": "5_gtfstools.en.html#gtfstools-workflow-example-spatial-visualization-of-headways",
    "href": "5_gtfstools.en.html#gtfstools-workflow-example-spatial-visualization-of-headways",
    "title": "5  GTFS data manipulation and visualization",
    "section": "5.5 {gtfstools} workflow example: spatial visualization of headways",
    "text": "5.5 {gtfstools} workflow example: spatial visualization of headways\nWe have shown in previous sections that {gtfstools} offers a large toolset to process and analyze GTFS files. The package also includes many other functions that could not be shown in this book due to space constraints. The complete list of functions available in {gtfstools} can be checked at the package website.\nIn this final section of the chapter, we illustrates a workflow that combines various functions of {gtfstools} together to answer the following question: how are the times between vehicles operating the same route (the headways) spatially distributed in SPTrans’ GTFS?\nFirst, we need to define the scope of our analysis. In this example, we are only going to consider the services operating during the morning peak, between 7am and 9am, on a typical tuesday. To do this, we need to filter our feed:\n\ngtfs <- read_gtfs(path)\n\n# filters the GTFS\nfiltered_gtfs <- gtfs |>\n  remove_duplicates() |>\n  filter_by_weekday(\"tuesday\") |>\n  filter_by_time_of_day(from = \"07:00:00\", to = \"09:00:00\")\n\n# cheking the result\nfiltered_gtfs$frequencies[trip_id == \"2105-10-0\"]\n\n     trip_id start_time end_time headway_secs\n1: 2105-10-0   07:00:00 07:59:00          900\n2: 2105-10-0   08:00:00 08:59:00         1200\n\nfiltered_gtfs$calendar\n\n   service_id monday tuesday wednesday thursday friday saturday sunday\n1:        USD      1       1         1        1      1        1      1\n2:        U__      1       1         1        1      1        0      0\n   start_date   end_date\n1: 2008-01-01 2020-05-01\n2: 2008-01-01 2020-05-01\n\n\nNext, we need to calculate the headways within this time interval. This information can be found at the frequencies table, though there is a factor we have to pay attention to: each trip is associated to more than one headway, as shown above (one entry for the 7am to 7:59am interval and another for the 8am to 8:59am interval). To solve this we are going to calculate the average headway from 7am to 9am.\nThe first few frequencies rows in SPTrans’ feed seem to suggest that the headways are always associated to one-hour intervals, but this is neither a rule set in the official specification nor necessarily a practice adopted by other feed producers. Thus, we have to calculate the average headways weighted by the time duration of each headway. To do this, we need to multiply each headway by the size of the time interval during which it is valid, sum these multiplication results for each trip, and then divide the total amount by the total time interval (two hours in our case). To calculate the time intervals within which the headways are valid, we use the convert_time_to_seconds() function to calculate the start and end time of the time interval in seconds and subtract the latter by the former:\n\nfiltered_gtfs <- convert_time_to_seconds(filtered_gtfs)\n\n# check how the results look like for a particular trip id\nfiltered_gtfs$frequencies[trip_id == \"2105-10-0\"]\n\n     trip_id start_time end_time headway_secs start_time_secs end_time_secs\n1: 2105-10-0   07:00:00 07:59:00          900           25200         28740\n2: 2105-10-0   08:00:00 08:59:00         1200           28800         32340\n\nfiltered_gtfs$frequencies[, time_interval := end_time_secs - start_time_secs]\n\nThen we calculate the average headway:\n\naverage_headway <- filtered_gtfs$frequencies[,\n  .(average_headway = weighted.mean(x = headway_secs, w = time_interval)),\n  by = trip_id\n]\n\naverage_headway[trip_id == \"2105-10-0\"]\n\n     trip_id average_headway\n1: 2105-10-0            1050\n\nhead(average_headway)\n\n      trip_id average_headway\n1: CPTM L07-0             360\n2: CPTM L07-1             360\n3: CPTM L08-0             300\n4: CPTM L08-1             300\n5: CPTM L09-0             240\n6: CPTM L09-1             240\n\n\nNow we need to retrieve each trip geometry to later join this data to the average headways. To do this, we will use the get_trip_geometry() function, which returns the spatial geometries of the trips in the feed. This function allows us to retrieve the geometries for selected trip ids, so we are only going to apply the procedure to those trip ids present in the average headways table:\n\nselected_trips <- average_headway$trip_id\n\ngeometries <- get_trip_geometry(\n  filtered_gtfs,\n  trip_id = selected_trips,\n  file = \"shapes\"\n)\n\nhead(geometries)\n\nSimple feature collection with 6 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -46.98404 ymin: -23.73644 xmax: -46.63535 ymax: -23.19474\nGeodetic CRS:  WGS 84\n     trip_id origin_file                       geometry\n1 CPTM L07-0      shapes LINESTRING (-46.63535 -23.5...\n2 CPTM L07-1      shapes LINESTRING (-46.87255 -23.1...\n3 CPTM L08-0      shapes LINESTRING (-46.64073 -23.5...\n4 CPTM L08-1      shapes LINESTRING (-46.98404 -23.5...\n5 CPTM L09-0      shapes LINESTRING (-46.77604 -23.5...\n6 CPTM L09-1      shapes LINESTRING (-46.69711 -23.7...\n\n\nFinally, we need to join the average headway data to the geometries before plotting a map. In the example below, we plot the trips on a map where the headway of each trip is represented by the variations in colors and line widths:\n\ngeoms_with_headways <- merge(\n  geometries,\n  average_headway,\n  by = \"trip_id\"\n)\n\nggplot(geoms_with_headways) +\n  geom_sf(aes(color = average_headway, size = average_headway), alpha = 0.8) +\n  scale_color_gradient(high = \"#132B43\", low = \"#56B1F7\") +\n  theme_minimal()\n\n\n\n\nAs we can see, {gtfstools} turns analyzing GTFS feeds into a simple task that requires only basic knowledge of table manipulation packages (such as {data.table} or {dplyr}). The example shown in this section illustrates how one could use many of the package’s functions together to reveal important aspects of public transport systems specified in the GTFS format."
  },
  {
    "objectID": "s4_avaliacao_impacto.en.html",
    "href": "s4_avaliacao_impacto.en.html",
    "title": "SECTION 4: Impact assessment of transportation projects",
    "section": "",
    "text": "The purpose of this section is to present a step-by-step example of how one can use the methods presented in this book to assess the impact of a transport infrastructure project on urban accessibility using R.\nAlthough accessibility analyses have been frequently used in scientific literature for more than two decades, only recently transport agencies and decision makers have begun to pay more attention to urban accessibility issues in their day-to-day planning and in the operation of transport systems (Papa et al. 2015; Boisjoly and El-Geneidy 2017). Much of this is due to the difficulty of incorporating accessibility analyses to project evaluation methods and planning activities (Silva et al. 2017; Büttner 2021).\nIn this section, we use a subway expansion project in Fortaleza (Brazil) as a case study to illustrate how to use the methods and R packages presented in the previous chapters to assess the accessibility impacts of transport infrastructure projects. The Chapter 6 presents a method for evaluating the effect of transportation investments not only on the overall accessibility level of the population, but also for examining how this effect is distributed geographically and among different socioeconomic groups, ultimately impacting disparities in access to opportunities. The application of the method involves the use and manipulation of different GTFS files, the calculation of travel time matrices, the decision-making behind the choice of which accessibility measure to use, the estimation of accessibility levels, the spatial visualization of these estimates and the calculation and analysis of inequality indicators. Therefore, this case study covers numerous topics discussed in the book and serves as a practical example of the concepts presented thus far.\nIt is important to mention that the evaluation of transportation projects, investments or policies should ideally encompass a wide range of criteria. These criteria range from aspects of social participation in policy and project formulation to their environmental, economic and social impacts. While an evaluation of accessibility impact is very important for characterizing the potential benefits and performance of a transport network, it offers a limited perspective of the effects of a given policy. Evaluations of this type should therefore complement and be accompanied by other analyses that investigate the other impacts that a transportation project might have.\n\n\n\n\nBoisjoly, Geneviève, and Ahmed M. El-Geneidy. 2017. “How to Get There? A Critical Assessment of Accessibility Objectives and Indicators in Metropolitan Transportation Plans.” Transport Policy 55 (April): 38–50. https://doi.org/10.1016/j.tranpol.2016.12.011.\n\n\nBüttner, Benjamin. 2021. “Accessibility Tools for Transport Policy and Planning.” In International Encyclopedia of Transportation, edited by Roger Vickerman, 83–86. Oxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10618-9.\n\n\nPapa, Enrica, Cecilia Silva, Marco Te Brömmelstroet, and Angela Hull. 2015. “Accessibility Instruments for Planning Practice: A Review of European Experiences.” Journal of Transport and Land Use, June. https://doi.org/10.5198/jtlu.2015.585.\n\n\nSilva, Cecília, Luca Bertolini, Marco te Brömmelstroet, Dimitris Milakis, and Enrica Papa. 2017. “Accessibility Instruments in Planning Practice: Bridging the Implementation Gap.” Transport Policy 53 (January): 135–45. https://doi.org/10.1016/j.tranpol.2016.09.006."
  },
  {
    "objectID": "6_cenarios_transporte.en.html#case-study-presentation",
    "href": "6_cenarios_transporte.en.html#case-study-presentation",
    "title": "6  Comparing accessibility between two transport scenarios",
    "section": "6.1 Case study presentation",
    "text": "6.1 Case study presentation\nAs a case study, we will assess Fortaleza’s subway East Line project (Figure 6.1). The city of Fortaleza is the capital of Ceará state, located in Northeast of Brazil. With an estimated population of 2.7 million inhabitants, Fortaleza is the fifth most populous city in the country.\n\n\n\n\n\nFigure 6.1: Fortaleza’s rapid transit network. Source - Braga et al. (2022)\n\n\n\n\nThe East Line is one of the biggest recent investments in Fortaleza’s transport system. The line extends for 7.3 km and connects the city center to the Papicu neighborhood, connecting the South and West subway lines to the Light Rail and Papicu’s bus terminal (Figure 6.2). The East Line is still under construction as of this book’s publication date, so we will be conducting an ex-ante analysis in this chapter - i.e. one in which we assess the future impacts of a project on urban accessibility conditions. This type of analysis differs from ex-post analyses, which are used to assess the impact of projects that have already been implemented.\n\n\n\n\n\nFigure 6.2: East Line in detail. Source - Braga et al. (2022)\n\n\n\n\n\n\n\n\n\n\nIt’s important to note that East Line’s implementation will also be followed by changes to the frequency of subway’s South and West lines and of Parangaba-Mucuripe light rail, in addition to cuts and adjustments on the municipal bus system, as detailed in Fortaleza’s Sustainable Accessibility Plan (Pasfor)1. For didactic purposes, however, the bus system’s changes were not incorporated into our analyses in this book. Therefore, the case study showcased in this chapter looks at simplified scenarios, in which only East Line’s implementation and the changes to other subway and light rail corridors are considered. For a more complete assessment that considers all the changes foreseen in Pasfor, please check Braga et al. (2022) (in Portuguese).\n\n\n\nFigure 6.3 shows that Fortaleza’s population is mainly distributed in the central and western parts of the city, although some relatively high density neighborhoods can also be seen in the southeastern region. Generally, wealthier groups (shown in blue in the income decile distribution map) tend to reside in the expanded city center, extending towards the southeast, while low-income groups (in red) are mainly located in the western and southern peripheries. Most of the formal jobs are distributed along key avenues, with higher concentrations in the city center. In contrast, public highschools are more equally distributed throughout the city.\n\n\n\n\n\n\n\n\nFigure 6.3: Distribution of population, formal jobs, schools and rapid transit corridors in Fortaleza"
  },
  {
    "objectID": "6_cenarios_transporte.en.html#gtfs-data-used-in-the-analysis",
    "href": "6_cenarios_transporte.en.html#gtfs-data-used-in-the-analysis",
    "title": "6  Comparing accessibility between two transport scenarios",
    "section": "6.2 GTFS data used in the analysis",
    "text": "6.2 GTFS data used in the analysis\nIn this analysis, we will use the GTFS files made available by Fortaleza’s Urban Transport Company (Etufor) and Fortaleza’s Subway Company (Metrofor). These feeds describe the public transport network that operated in Fortaleza in October 2019. To access these data, we will download the feeds with the {httr} package with the code below:\n\nmetrofor_path <- tempfile(\"metrofor\", fileext = \".zip\")\netufor_path <- tempfile(\"etufor\", fileext = \".zip\")\n\n# downloads metrofor data\nhttr::GET(\n  \"https://github.com/ipeaGIT/intro_access_book/releases/download/data_1st_edition/gtfs_for_metrofor_2021-01.zip\",\n  httr::write_disk(metrofor_path)\n)\n# downloads etufor data\nhttr::GET(\n  \"https://github.com/ipeaGIT/intro_access_book/releases/download/data_1st_edition/gtfs_for_etufor_2019-10.zip\",\n  httr::progress(),\n  httr::write_disk(etufor_path)\n)\n\nTo simulate the implementation of the subway’s East Line, we also need a feed that describes its operation. This feed must contain some key information, such as the shape of the corridor, the stop locations, the travel time between stations and the frequency of trips. In this example, we will use a GTFS file previously created by the Access to Opportunities team for a more detailed assessment of the accessibility impacts caused by this project (Braga et al. 2022). Just like Etufor’s and Metrofor’s feeds, this feed has been published in the book GitHub repository and can be downloaded with the code below:\n\neast_line_path <- tempfile(\"east_line\", fileext = \".zip\")\n\nhttr::GET(\n  \"https://github.com/ipeaGIT/intro_access_book/releases/download/data_1st_edition/gtfs_linha_leste.zip\",\n  httr::write_disk(east_line_path)\n)\n\nEtufor’s and Metrofor’s feeds, however, do not include the changes to the public transport system foreseen in the Pasfor. Therefore, we have to edit these feeds using the {gtfstools} package to take those changes into consideration in the post-implementation scenario.\nIn our case study, we will consider the changes to frequencies of the subway and light rail services based on Pasfor: an increase in the South Line subway frequency from four to ten trips per hour, an increase in the West Line subway frequency from two to five trips per hour and an increase in the Parangaba-Mucuripe light rail frequency from two to eight trips per hour. As we are only considering changes to the subway and light rail services, we only need to edit Metrofor’s GTFS. First, we need to read this feed with read_gtfs() and understand how the trips are described. To do so, we are going to look at how the routes, trips and calendar tables are structured.\n\nlibrary(gtfstools)\n\nmetrofor_gtfs <- read_gtfs(metrofor_path)\n\nmetrofor_gtfs$routes[, .(route_id, route_long_name)]\n\n   route_id      route_long_name\n1:        8 VLT Parangaba Papicu\n2:        6            Linha Sul\n3:        7          Linha Oeste\n\nmetrofor_gtfs$trips[, .N, by = .(route_id, direction_id, service_id)]\n\n   route_id direction_id service_id  N\n1:        7            0          4 15\n2:        7            1          4 15\n3:        6            0          4 63\n4:        6            1          4 64\n5:        8            0          4 29\n6:        8            1          4 29\n\nmetrofor_gtfs$calendar\n\n   service_id monday tuesday wednesday thursday friday saturday sunday\n1:          4      1       1         1        1      1        1      0\n   start_date   end_date\n1: 2020-01-01 2021-12-31\n\n\nThe feed describes three distinct routes: the two subway corridors and the light rail corridor. Since the feed does not include a frequencies table, each route is described by many trips that depart at different times of the day. There is information for trips in both trip directions, and they are all associated with the same service that operates on business days and saturdays.\nThe strategy we are going to adopt to make the necessary changes to the feed include three steps:\n\nFirst, we are going to filter the Metrofor feed to keep only one trip per direction for each route. This trip will tell us the travel time each trip takes between its stops.\nThen we are going to add a frequencies table to the GTFS object, in which we are going to describe the frequency of each trip.\nFinally, we are going to “convert” the recently-added frequencies entries to the timetables described in stop_times. This conversion will be used to keep intact the original feed, which describes trips using only the stop_times table.\n\nStep 1: To keep only one trip per direction for each route, we need to filter the feed using filter_by_trip_id(). To do so, we are going to identify the first trip entry per route and per direction and use the function to keep only these trips.\n\n# identifies the table index in which the first entries per route and per\n# direction are located at\nindex <- metrofor_gtfs$trips[, .I[1], by = .(route_id, direction_id)]$V1\n\n# selects the id of each row\nselected_trips <- metrofor_gtfs$trips[index]$trip_id\n\n# filters the gtfs to keep only the trips above\nfiltered_gtfs <- filter_by_trip_id(\n  metrofor_gtfs,\n  trip_id = selected_trips\n)\n\nfiltered_gtfs$trips\n\n   trip_id     trip_headsign direction_id block_id shape_id service_id route_id\n1:       4           Caucaia            0                            4        7\n2:      19      Moura Brasil            1                            4        7\n3:      34 Carlito Benevides            0                            4        6\n4:      96    Chico da Silva            1                            4        6\n5:     159              Iate            0                            4        8\n6:     181         Parangaba            1                            4        8\n\n\nTo facilitate the data manipulation, we are going to change the trip ids, identifying the corridor and the direction in which they operate. We need to make this change both in the trips and the stop_times tables.\n\nfiltered_gtfs$stop_times[\n  ,\n  trip_id := data.table::fcase(\n    trip_id == \"4\", \"west_subway_0\",\n    trip_id == \"19\", \"west_subway_1\",\n    trip_id == \"34\", \"south_subway_0\",\n    trip_id == \"96\", \"south_subway_1\",\n    trip_id == \"159\", \"light_rail_0\",\n    trip_id == \"181\", \"light_rail_1\"\n  )\n]\n\nfiltered_gtfs$trips[\n  ,\n  trip_id := data.table::fcase(\n    trip_id == \"4\", \"west_subway_0\",\n    trip_id == \"19\", \"west_subway_1\",\n    trip_id == \"34\", \"south_subway_0\",\n    trip_id == \"96\", \"south_subway_1\",\n    trip_id == \"159\", \"light_rail_0\",\n    trip_id == \"181\", \"light_rail_1\"\n  )\n]\n\nfiltered_gtfs$trips\n\n          trip_id     trip_headsign direction_id block_id shape_id service_id\n1:  west_subway_0           Caucaia            0                            4\n2:  west_subway_1      Moura Brasil            1                            4\n3: south_subway_0 Carlito Benevides            0                            4\n4: south_subway_1    Chico da Silva            1                            4\n5:   light_rail_0              Iate            0                            4\n6:   light_rail_1         Parangaba            1                            4\n   route_id\n1:        7\n2:        7\n3:        6\n4:        6\n5:        8\n6:        8\n\n\nStep 2: Now we need to add a frequencies table describing the frequency of each trip. Note however that the GTFS specification requires us to list the headway of each trip, and not its frequency. The headway is the inverse of the frequency, so we need to divide the interval of one hour (3600 seconds) by the frequency of each route (10 trips/hour for the South Line, 5 trips/hours for the West Line and 8 trips/hours for the light rail). As a result, we have that the headway of the South Line, West Line and the light rail will be, respectively, 360, 720 and 450 seconds. With the code below, we create a frequencies table using the {tibble} and {data.table} packages.\n\nfrequencies <- tibble::tribble(\n  ~trip_id,           ~start_time, ~end_time,  ~headway_secs, ~exact_times,\n  \"west_subway_0\",  \"06:00:00\",  \"09:00:00\", 720L,              1,\n  \"west_subway_1\",  \"06:00:00\",  \"09:00:00\", 720L,              1,\n  \"south_subway_0\", \"06:00:00\",  \"09:00:00\", 360L,              1,\n  \"south_subway_1\", \"06:00:00\",  \"09:00:00\", 360L,              1,\n  \"light_rail_0\",   \"06:00:00\",  \"09:00:00\", 450L,              1,\n  \"light_rail_1\",   \"06:00:00\",  \"09:00:00\", 450L,              1\n)\n\n# converts the table to data.table\ndata.table::setDT(frequencies)\n\n# assigns table to gtfs object\nfiltered_gtfs$frequencies <- frequencies\n\nTo keep things simple in this case study, we assume that these headways are valid between 06:00h and 09:00h. This assumption works in our case because we are only going to calculate the travel time matrix during the morning peak. If we wanted to calculate travel times in other periods of the day or to use this GTFS to examine operation of these corridors throughout the day, however, we would have to list the headways for the rest of the day as well. The value 1 in the exact_times column determines that the trips’ timetables during the specified period must follow the headway exactly, not approximately (for more details, please refer to the frequencies table description in Chapter 4).\nStep 3: The GTFS object that results from the modifications done up until this stage can already be used to calculate travel time matrices. However, in order to restore the original feed’s characteristic of not having a frequencies table, we “convert” this table’s entries into timetables described in stop_times. To do so, we use the frequencies_to_stop_times() function. As all trips in the feed are converted, the frequencies table is removed from the GTFS object.\n\nfiltered_gtfs <- frequencies_to_stop_times(filtered_gtfs)\n\nfiltered_gtfs$frequencies\n\nNULL\n\n\nTo check if the data manipulation worked as intended, we look at the West Line trips that head towards Caucaia (whose direction_id is 0). With a frequency of 5 trips/hour between 06:00h and 09:00h, the trips table must contain exactly 16 entries related to this route (5 trips/hour during 3 hours plus a trip starting at 09:00h).\n\nwest_line_subway <- filtered_gtfs$trips[grepl(\"west_subway_0\", trip_id)]\n\nnrow(west_line_subway)\n\n[1] 16\n\nwest_line_subway$trip_id\n\n [1] \"west_subway_0_1\"  \"west_subway_0_2\"  \"west_subway_0_3\"  \"west_subway_0_4\" \n [5] \"west_subway_0_5\"  \"west_subway_0_6\"  \"west_subway_0_7\"  \"west_subway_0_8\" \n [9] \"west_subway_0_9\"  \"west_subway_0_10\" \"west_subway_0_11\" \"west_subway_0_12\"\n[13] \"west_subway_0_13\" \"west_subway_0_14\" \"west_subway_0_15\" \"west_subway_0_16\"\n\n\nThe stop_times table, in turn, must list each one of these trips departing every 12 minutes (equivalent to a 450 seconds headway). Thus, we need to check the first entry of the timetable of each one of the trips listed above.\n\nwest_subway_trips <- west_line_subway$trip_id\n\n# identifies the row of the first entries of the trips above\ntrip_indices <- filtered_gtfs$stop_times[\n  trip_id %in% west_subway_trips,\n  .I[1],\n  by = trip_id\n]$V1\n\nfiltered_gtfs$stop_times[trip_indices, .(trip_id, departure_time)]\n\n             trip_id departure_time\n 1:  west_subway_0_1       06:00:00\n 2:  west_subway_0_2       06:12:00\n 3:  west_subway_0_3       06:24:00\n 4:  west_subway_0_4       06:36:00\n 5:  west_subway_0_5       06:48:00\n 6:  west_subway_0_6       07:00:00\n 7:  west_subway_0_7       07:12:00\n 8:  west_subway_0_8       07:24:00\n 9:  west_subway_0_9       07:36:00\n10: west_subway_0_10       07:48:00\n11: west_subway_0_11       08:00:00\n12: west_subway_0_12       08:12:00\n13: west_subway_0_13       08:24:00\n14: west_subway_0_14       08:36:00\n15: west_subway_0_15       08:48:00\n16: west_subway_0_16       09:00:00\n\n\nWe can see that the “conversion” from frequencies to stop_times worked correctly, allowing us to use this modified feed to calculate the travel time matrix in the post-implementation scenario. To do this, we need to save this GTFS object to disk in .zip format, just like the rest of the feeds we are going to use. We use the write_gtfs() function for that.\n\nmodified_metrofor_path <- tempfile(\"modified_metrofor\", fileext = \".zip\")\n\nwrite_gtfs(filtered_gtfs, modified_metrofor_path)\n\nNow, we have four distinct GTFS files:\n\nEtufor’s feed, describing the bus system that operated in October 2019;\nMetrofor’s feed, describing the operation in October 2019 of the subway (South and West lines) and of the light rail;\nMetrofor’s modified feed, describing the future operation of South and West subway lines and of the light rail, as foreseen in Pasfor;\nEast Line’s feed, describing the future operation of the subway East Line.\n\nThese four GTFS files will be used to calculate the accessibility conditions in Fortaleza before and after the implementation of the East Line. In the pre-implementation scenario, we are going to calculate the travel time matrices using only the October 2019 feeds from Metrofor and Etufor. In the post-implementation scenario, we are going to use Etufor’s feed, Metrofor’s modified feed with updated frequencies and the feed of the new East Line."
  },
  {
    "objectID": "6_cenarios_transporte.en.html#calculating-the-travel-time-matrices",
    "href": "6_cenarios_transporte.en.html#calculating-the-travel-time-matrices",
    "title": "6  Comparing accessibility between two transport scenarios",
    "section": "6.3 Calculating the travel time matrices",
    "text": "6.3 Calculating the travel time matrices\nAfter making the necessary changes to the GTFS files and defining which feeds we are going to use in each scenario, we need to calculate the travel time matrices that we are going to use later to estimate the accessibility levels. To do this, we are going to use the travel_time_matrix() function from {r5r}, previously presented in Chapter 3.\nBefore calculating the travel matrices, however, we need to organize our data to use them in `{r5r}. With the code below, we create a separate directory for each scenario (before and after implementation) in which we save the files used in the routing process in each case:\n\n# creates root analysis directory\nanalysis_dir <- \"impact_analysis\"\ndir.create(analysis_dir)\n\n# creates scenarios directories\nbefore_dir <- file.path(analysis_dir, \"before\")\nafter_dir <- file.path(analysis_dir, \"after\")\n\ndir.create(before_dir)\ndir.create(after_dir)\n\n# copy relevant files to \"before\" scenario directory\nfile.copy(from = etufor_path, to = file.path(before_dir, \"etufor.zip\"))\nfile.copy(from = metrofor_path, to = file.path(before_dir, \"metrofor.zip\"))\n\n# copy relevant files to \"after\" scenario directory\nfile.copy(from = etufor_path, to = file.path(after_dir, \"etufor.zip\"))\nfile.copy(\n  from = modified_metrofor_path,\n  to = file.path(after_dir, \"modified_metrofor.zip\")\n)\nfile.copy(\n  from = east_line_path,\n  to = file.path(after_dir, \"east_line.zip\")\n)\n\n# visualizes file structure\nfs::dir_tree(analysis_dir)\n\n\n\n\n\n\nimpact_analysis\n├── after\n│   ├── east_line.zip\n│   ├── etufor.zip\n│   └── modified_metrofor.zip\n└── before\n    ├── etufor.zip\n    └── metrofor.zip\n\n\n\n\n\nTo estimate the travel times in our study area, we also need a file representing the local street network extracted from OpenStreetMap in .pbf format. Optionally, we are also going to use a file representing the local topography, in .tif format. These data sets, just like the GTFS files, can also be downloaded from the book repository. Assuming that the implementation of the East Line will not affect the street network, the pedestrian infrastructure and the topography in the region, we can use the same files to calculate both travel time matrices. With the code below, we download these data sets and copy the files to both scenarios’ directories.\n\n# crates temporary files to save data\npbf_path <- tempfile(\"street_network\", fileext = \".osm.pbf\")\ntif_path <- tempfile(\"topography\", fileext = \".tif\")\n\n# downloads OSM data\nhttr::GET(\n  \"https://github.com/ipeaGIT/intro_access_book/releases/download/data_1st_edition/fortaleza.osm.pbf\",\n  httr::write_disk(pbf_path)\n)\n# downloads topography data\nhttr::GET(\n  \"https://github.com/ipeaGIT/intro_access_book/releases/download/data_1st_edition/topografia3_for.tif\",\n  httr::write_disk(tif_path)\n)\n# copies files to both scenarios' directories\nfile.copy(from = pbf_path, to = file.path(before_dir, \"street_network.osm.pbf\"))\nfile.copy(from = pbf_path, to = file.path(after_dir, \"street_network.osm.pbf\"))\n\nfile.copy(from = tif_path, to = file.path(before_dir, \"topography.tif\"))\nfile.copy(from = tif_path, to = file.path(after_dir, \"topography.tif\"))\n\n\n\n\n\nfs::dir_tree(analysis_dir)\n\nimpact_analysis\n├── after\n│   ├── east_line.zip\n│   ├── etufor.zip\n│   ├── modified_metrofor.zip\n│   ├── street_network.osm.pbf\n│   └── topography.tif\n└── before\n    ├── etufor.zip\n    ├── metrofor.zip\n    ├── street_network.osm.pbf\n    └── topography.tif\n\n\n\n\n\nWith the data properly organized, we can now start calculating the travel time matrices. The first step is to use the street network, public transport and topography data to build the transport network used by {r5r} in the routing process. To do this, we use the setup_r5() function, which also returns a connection to R5. With the code below, we build two networks, one for each scenario:\n\n# allocates memory to be used by Java Virtual Machine\noptions(java.parameters = \"-Xmx4G\")\n\nlibrary(r5r)\n\nr5r_core_before <- setup_r5(before_dir, verbose = FALSE)\nr5r_core_after <- setup_r5(after_dir, verbose = FALSE)\n\nHaving built the transport networks, we can now proceed to the actual travel time matrices calculation. In this step, we are going to use the centroids of a hexagonal grid covering Fortaleza as our origins and destinations. We are going to use the hexagonal grid made available by {aopdata} (more details on the package are presented in Section 5). Each grid hexagon covers an area of 0.11 km², similar to a city block, which allows for results at a fine spatial resolution.\nFor a proper comparison between both scenarios, we need to calculate the two travel matrices using the same parameters. We consider trips by foot or by public transport, allow walking trips of at most 30 minutes to access or egress from public transport stops and limit the maximum trip duration to 60 minutes. We also consider a departure time of 7am, during the morning peak of a typical monday:\n\n# downloads spatial grid data\nfortaleza_grid <- aopdata::read_grid(\"Fortaleza\")\n\n# gets cells' centroids\npoints <- sf::st_centroid(fortaleza_grid)\n\n# renames the column holding the cell ids\nnames(points)[1] <- \"id\"\n\n# calculates the \"before\" scenario travel time matrix\nttm_before <- travel_time_matrix(\n  r5r_core_before,\n  origins = points,\n  destinations = points,\n  mode = c(\"WALK\", \"TRANSIT\"),\n  departure_datetime = as.POSIXct(\n    \"02-03-2020 07:00:00\",\n    format = \"%d-%m-%Y %H:%M:%S\"\n  ),\n  max_walk_time = 30,\n  max_trip_duration = 60,\n  verbose = FALSE,\n  progress = FALSE\n)\n\n# calculates the \"after\" scenario travel time matrix\nttm_after <- travel_time_matrix(\n  r5r_core_after,\n  origins = points,\n  destinations = points,\n  mode = c(\"WALK\", \"TRANSIT\"),\n  departure_datetime = as.POSIXct(\n    \"02-03-2020 07:00:00\",\n    format = \"%d-%m-%Y %H:%M:%S\"\n  ),\n  max_walk_time = 30,\n  max_trip_duration = 60,\n  verbose = FALSE,\n  progress = FALSE\n)\n\nhead(ttm_before)\n\n           from_id           to_id travel_time_p50\n1: 89801040323ffff 89801040323ffff               2\n2: 89801040323ffff 89801040327ffff              22\n3: 89801040323ffff 8980104032bffff              23\n4: 89801040323ffff 8980104032fffff              15\n5: 89801040323ffff 89801040333ffff              10\n6: 89801040323ffff 89801040337ffff              19\n\nhead(ttm_after)\n\n           from_id           to_id travel_time_p50\n1: 89801040323ffff 89801040323ffff               2\n2: 89801040323ffff 89801040327ffff              22\n3: 89801040323ffff 8980104032bffff              23\n4: 89801040323ffff 8980104032fffff              15\n5: 89801040323ffff 89801040333ffff              10\n6: 89801040323ffff 89801040337ffff              19\n\n\n\n\n\nOn first sight, our matrices look exactly the same: all travel times shown in the samples above are identical. This happens because the subway expansion project is limited to a relatively small area near Fortaleza’s city center, and the changes to the frequencies of the other subway and light rail corridors mainly affect these corridors’ immediate surroundings. Thus, many trips that take place in the city are not affected by those transport interventions. The travel time between many origin-destination pairs, however, are impacted:\n\n# joins both scenarios' travel times in the same data set\ncomparison <- merge(\n  ttm_before,\n  ttm_after,\n  by = c(\"from_id\", \"to_id\"),\n  suffixes = c(\"_before\", \"_after\")\n)\n\n# shows the OD pairs whose travel times got faster\ncomparison[travel_time_p50_before < travel_time_p50_after]\n\n               from_id           to_id travel_time_p50_before\n    1: 8980104096fffff 8980104e803ffff                     48\n    2: 8980104096fffff 8980104e807ffff                     57\n    3: 8980104096fffff 8980104e80bffff                     53\n    4: 8980104096fffff 8980104e80fffff                     55\n    5: 8980104096fffff 8980104e863ffff                     56\n   ---                                                       \n12889: 8980104eecbffff 8980104ea5bffff                     52\n12890: 8980104eecbffff 8980104eac3ffff                     49\n12891: 8980104eecbffff 8980104ead3ffff                     44\n12892: 8980104eecbffff 8980104eadbffff                     49\n12893: 8980104eecbffff 8980104ee6bffff                     41\n       travel_time_p50_after\n    1:                    50\n    2:                    59\n    3:                    55\n    4:                    57\n    5:                    57\n   ---                      \n12889:                    57\n12890:                    53\n12891:                    47\n12892:                    50\n12893:                    42"
  },
  {
    "objectID": "6_cenarios_transporte.en.html#calculating-accessibility-levels-in-both-scenarios",
    "href": "6_cenarios_transporte.en.html#calculating-accessibility-levels-in-both-scenarios",
    "title": "6  Comparing accessibility between two transport scenarios",
    "section": "6.4 Calculating accessibility levels in both scenarios",
    "text": "6.4 Calculating accessibility levels in both scenarios\nCalculating the accessibility levels in both scenarios is really simple, requiring only some basic data processing before we apply one of the functions from the {accessibility} package to estimate accessibility. To facilitate the data manipulation, we merge the travel time matrices of both scenarios into a single table, and identify each scenario with the scenario column:\n\nttm <- rbind(ttm_before, ttm_after, idcol = \"scenario\")\nttm[, scenario := factor(scenario, labels = c(\"before\", \"after\"))]\n\nttm\n\n         scenario         from_id           to_id travel_time_p50\n      1:   before 89801040323ffff 89801040323ffff               2\n      2:   before 89801040323ffff 89801040327ffff              22\n      3:   before 89801040323ffff 8980104032bffff              23\n      4:   before 89801040323ffff 8980104032fffff              15\n      5:   before 89801040323ffff 89801040333ffff              10\n     ---                                                         \n3739271:    after 8980107b6dbffff 8980107b6cbffff               9\n3739272:    after 8980107b6dbffff 8980107b6cfffff              15\n3739273:    after 8980107b6dbffff 8980107b6d3ffff               9\n3739274:    after 8980107b6dbffff 8980107b6d7ffff              15\n3739275:    after 8980107b6dbffff 8980107b6dbffff               0\n\n\nTo calculate the accessibility levels, we need a table with some land used data for Fortaleza. We can download such data using the read_landuse() function from the {aopdata} package, which brings the population and opportunities count in each one of the hexagons that composes the previously downloaded spatial grid.\n\nfortaleza_data <- aopdata::read_landuse(\n  \"Fortaleza\",\n  showProgress = FALSE\n)\n\nFor demonstration purposes, we calculate the accessibility to jobs and public highschools in our study area. The information on the total number of jobs and public highschools in each hexagon is listed in the columns T001 and E004, respectively. We rename them to facilitate their identification. We also keep in the land use data only the few columns that we are going to use latter, including the column P001, which lists the total population in each hexagon, and column R003, which tells the income decile classification of each hexagon:\n\ncols_to_keep <- c(\"id\", \"jobs\", \"schools\", \"population\", \"decile\")\ndata.table::setnames(\n  fortaleza_data,\n  old = c(\"id_hex\", \"T001\", \"E004\", \"P001\", \"R003\"),\n  new = cols_to_keep\n)\n\n# deletes the columns that won't be used\nfortaleza_data[, setdiff(names(fortaleza_data), cols_to_keep) := NULL]\n\nfortaleza_data\n\n                   id population decile jobs schools\n   1: 89801040323ffff         30      1    0       0\n   2: 89801040327ffff        318      1    7       0\n   3: 8980104032bffff          0     NA    0       0\n   4: 8980104032fffff        103      1   98       0\n   5: 89801040333ffff         43      1    0       0\n  ---                                               \n2558: 8980107b6cbffff       2575      4  124       0\n2559: 8980107b6cfffff       2997      3    4       0\n2560: 8980107b6d3ffff       1751      8   14       0\n2561: 8980107b6d7ffff       2032      4  134       0\n2562: 8980107b6dbffff       1896      9  193       0\n\n\nA key decision in any accessibility analysis is which accessibility measure to use. It’s extremely important to weigh the pros and cons of each measure and to comprehend which metrics are more adequate for the type of opportunities we are looking at. In this example, we use two distinct measures:\n\nTo calculate accessibility to jobs, we use a cumulative opportunities measure. This metric allows us to understand how many jobs are accessible within a given time frame. Despite its limitations discussed in Chapter 2, this measure is one of the most commonly used metrics. This is to a large extent because the results from this accessibility indicator are extremely easy to communicate and interpret. In this example, we set a travel time threshold of 60 minutes, which is close to average commuting time by public transport in Fortaleza (approximately 58 minutes, according to Pasfor).\nTo calculate accessibility to public highschools, we use a minimum travel cost measure. This metric is particularly useful to assess the coverage of essential public services, such as basic health and education facilities. We can use this measure, for example, to identify population groups that are farther from these opportunities than a time/distance limit deemed reasonable.\n\nAs previously shown in Chapter 3, we can calculate this measures using the cumulative_cutoff() and cost_to_closest() functions, respectively, from the {accessibility} package:\n\nlibrary(accessibility)\n\naccess_to_jobs <- cumulative_cutoff(\n  ttm,\n  land_use_data = fortaleza_data,\n  opportunity = \"jobs\",\n  travel_cost = \"travel_time_p50\",\n  cutoff = 60,\n  group_by = \"scenario\"\n)\n\naccess_to_jobs\n\n                   id scenario   jobs\n   1: 89801040323ffff   before  48271\n   2: 89801040327ffff   before  26918\n   3: 8980104032bffff   before  48271\n   4: 8980104032fffff   before  69550\n   5: 89801040333ffff   before  26918\n  ---                                \n5120: 8980107b6cbffff    after 379488\n5121: 8980107b6cfffff    after 285899\n5122: 8980107b6d3ffff    after 347678\n5123: 8980107b6d7ffff    after 359536\n5124: 8980107b6dbffff    after 373652\n\ntime_to_schools <- cost_to_closest(\n  ttm,\n  land_use_data = fortaleza_data,\n  opportunity = \"schools\",\n  travel_cost = \"travel_time_p50\",\n  group_by = \"scenario\"\n)\n\ntime_to_schools\n\n                   id scenario travel_time_p50\n   1: 89801040323ffff   before              28\n   2: 89801040323ffff    after              28\n   3: 89801040327ffff   before              37\n   4: 89801040327ffff    after              37\n   5: 8980104032bffff   before              28\n  ---                                         \n5120: 8980107b6d3ffff    after              18\n5121: 8980107b6d7ffff   before              14\n5122: 8980107b6d7ffff    after              14\n5123: 8980107b6dbffff   before              15\n5124: 8980107b6dbffff    after              15\n\n\nHaving done that, we can calculate the accessibility difference between the two scenarios. This information is useful to clearly communicate how the accessibility conditions in the city would be impacted by the future implementation of the East subway line and the changes to service frequency foreseen in Pasfor. To do so, we use the code below:\n\n# substitutes Inf values by 80 minutes\ntime_to_schools[\n  ,\n  travel_time_p50 := ifelse(is.infinite(travel_time_p50), 80, travel_time_p50)\n]\n\nHaving done that, we can calculate the accessibility difference between the two scenarios. This information is useful to clearly communicate the effects of the East Line implementation and the frequency changes foreseen in Pasfor on the accessibility conditions in the city. To do so, we use the code below:\n\naccess_to_jobs[\n  ,\n  difference := data.table::shift(jobs, type = \"lead\") - jobs,\n  by = id\n]\n\ntime_to_schools[\n  ,\n  difference := data.table::shift(travel_time_p50, type = \"lead\") -\n    travel_time_p50,\n  by = id\n]"
  },
  {
    "objectID": "6_cenarios_transporte.en.html#analyzing-accessibility-levels-before-and-after",
    "href": "6_cenarios_transporte.en.html#analyzing-accessibility-levels-before-and-after",
    "title": "6  Comparing accessibility between two transport scenarios",
    "section": "6.5 Analyzing accessibility levels before and after",
    "text": "6.5 Analyzing accessibility levels before and after\nNow that we have calculated the accessibility levels in both scenarios and the difference between them, we can examine how the future implementation of the East Line coupled with the changes to the frequencies of the subway and light rail services will impact the accessibility conditions in our study area. As a first exploratory analysis, we can investigate how these changes affect the average accessibility in the city. Looking at the accessibility to jobs first, we calculate the average number of accessible jobs in each scenario. Here, it’s important to weigh the accessibility levels by the population of each grid cell, since hexagons with larger populations contribute more to the city’s average than hexagons with fewer residents.\n\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# merges accessibility table with land use data (population count and income\n# decile)\naccess_to_jobs <- merge(\n  access_to_jobs,\n  fortaleza_data,\n  by = \"id\"\n)\n\n# renames columns with duplicated names\ndata.table::setnames(\n  access_to_jobs,\n  old = c(\"jobs.x\", \"jobs.y\"),\n  new = c(\"access_to_jobs\", \"job_count\")\n)\n\n# calculates avg accessibility in each scenario\navg_access <- access_to_jobs[\n  ,\n  .(access  = weighted.mean(access_to_jobs, w = as.numeric(population))),\n  by = scenario\n]\n\nggplot(data = avg_access, aes(x = scenario, y = access / 1000)) +\n  geom_col(fill = \"#0f3c53\") +\n  geom_text(\n    aes(label = round(access / 1000, digits = 1)),\n    vjust = 1.5,\n    color = \"white\",\n    size = 10\n  ) +\n  ylab(\"Accessible jobs\\n(thousands)\") +\n  theme_minimal()\n\n\n\n\n\n\n\nThe results show that Fortaleza’s population could reach on average 244,137 jobs in up to 60 minutes by public transport before the subway expansion, in 2019. The East Line’s implementation and the changes to the frequencies of subway and light rail services led to an increase of 0.0534126%, to 257,177 jobs, on average.\nWhen we look at the average time to reach the closest public highschool, we see that the changes to the transport system barely affect the accessibility to these schools. On average, Fortaleza’s population took approximately 13 minutes to reach the nearest public highschool to their home in 2019. After the subway extension and the increase to the subway and light rail frequencies, this value remains virtually unchanged.\n\n# merges time to schools table with land use data\ntime_to_schools <- merge(\n  time_to_schools,\n  fortaleza_data,\n  by = \"id\"\n)\n\n# calculates avg time to schools in each scenario\navg_time <- time_to_schools[\n  ,\n  .(time  = weighted.mean(travel_time_p50, w = as.numeric(population))),\n  by = scenario\n]\n\nggplot(data = avg_time, aes(x = scenario, y = time)) +\n  geom_col(fill = \"#0d6556\") +\n  geom_text(\n    aes(label = round(time, digits = 2)),\n    vjust = 1.5,\n    color = \"white\",\n    size = 10\n  ) +\n  ylab(\"Average time to\\nclosest school (in minutes)\") +\n  theme_minimal()\n\n\n\n\nIn summary, the results show that the planned construction of the East Line and the frequency adjustment of the other rail services in Fortaleza would affect accessibility to jobs much more significantly than the accessibility to public highschools. This is mainly a result of how these two types of opportunities are spatially distributed in Fortaleza: while jobs are much more concentrated in the city center, schools are better distributed throughout the city. The changes to the public transport system, therefore, could help the residents of regions far from the city center to reach the jobs located there. On the other hand, public highschools are much more evenly distributed across the city, which results in relatively good accessibility conditions even before the changes to the public transport network. This helps us explain why those transport interventions would have such a low impact on the travel time necessary to reach the nearest schools.\nThese results can be better understood when we observe their spatial distribution. Before doing so, however, we create a spatial object outlining the shape of the public transport corridors in the city, which helps making the impact of the changes to the transport network even clearer.\n\n# reads the gtfs files required to create the geometries of each corridor\nmetrofor_gtfs <- read_gtfs(metrofor_path)\neast_line_gtfs <- read_gtfs(east_line_path)\n\n# metrofor's gtfs does not contain a shapes table, se we have to create the\n# geometries from the stops and stop_times tables with get_trip_geometry()\ncorridors_trips <- c(\"4\", \"34\", \"159\")\n\n# the stop sequence from one of the trips is not properly order, so we have to\n# manually order them\nmetrofor_gtfs$stop_times <- metrofor_gtfs$stop_times[\n  order(trip_id, stop_sequence)\n]\nmetrofor_shape <- gtfstools::get_trip_geometry(\n  metrofor_gtfs,\n  trip_id = corridors_trips\n)\n\n# converts the east line shape in one of the directions to spatial geometry\neast_line_shape <- gtfstools::convert_shapes_to_sf(\n  east_line_gtfs,\n  shape_id = \"LL_0\"\n)\n\n# names each route and bind the two tables together\neast_line_shape$corridor <- \"East Line\"\nmetrofor_shape$corridor <- data.table::fcase(\n  metrofor_shape$trip_id == 4, \"West Line\",\n  metrofor_shape$trip_id == 34, \"South Line\",\n  metrofor_shape$trip_id == 159, \"Light Rail\"\n)\n\nmetrofor_shape$origin_file <- NULL\nmetrofor_shape$trip_id <- NULL\neast_line_shape$shape_id <- NULL\n\ncorridors_shapes <- rbind(metrofor_shape, east_line_shape)\n\n# duplicates the table, adds a column identifying each scenario and removes\n# east line from the pre-implementation scenario\ncorridors_shapes <- rbind(corridors_shapes, corridors_shapes)\ncorridors_shapes$scenario <- rep(c(\"before\", \"after\"), each = 4)\ncorridors_shapes <- subset(\n  corridors_shapes,\n  corridor != \"East Line\" | scenario != \"before\"\n)\n\nggplot() +\n  geom_sf(data = fortaleza_grid, fill = \"gray90\", color = NA) +\n  geom_sf(data = corridors_shapes, aes(color = corridor)) +\n  scale_color_manual(values = c(\"#F8766D\", \"#7CAE00\", \"#00BFC4\", \"#C77CFF\")) +\n  facet_wrap(~ scenario, nrow = 1) +\n  theme_void()\n\n\n\n\nNow we can analyze the spatial distribution of accessibility levels in both scenarios, as well as the accessibility difference between them. To do this, we need to merge the accessibility estimates with the spatial grid of our study area. We first look at access to jobs:\n\n# merges accessibility data with fortaleza's spatial grid and convert the result into a\n# spatial object\naccess_to_jobs <- merge(\n  access_to_jobs,\n  fortaleza_grid,\n  by.x = \"id\",\n  by.y = \"id_hex\"\n)\naccess_to_jobs_sf <- sf::st_sf(access_to_jobs)\n\n# configures access distribution maps in both scenarios\naccess_dist <- ggplot() +\n  geom_sf(\n    data = access_to_jobs_sf,\n    aes(fill = access_to_jobs),\n    color = NA\n  ) +\n  facet_wrap(~ scenario, nrow = 1) +\n  scale_fill_viridis_c(\n    option = \"inferno\",\n    label = scales::label_number(scale = 1 / 1000)\n  ) +\n  labs(fill = \"Accessible jobs\\n(in thousands)\", color = \"Corridors\") +\n  geom_sf(\n    data = corridors_shapes,\n    aes(color = corridor),\n    alpha = 0.8,\n    show.legend = FALSE\n  ) +\n  scale_color_manual(values = c(\"#F8766D\", \"#7CAE00\", \"#00BFC4\", \"#C77CFF\")) +\n  theme_void() +\n  theme(legend.key.size = unit(0.4, \"cm\"))\n\n# configures difference map\ndifference_dist <- ggplot() +\n  geom_sf(\n    data = subset(access_to_jobs_sf, !is.na(difference)),\n    aes(fill = difference),\n    color = NA\n  ) +\n  scale_fill_viridis_c(\n    option = \"cividis\",\n    label = scales::label_number(scale = 1 / 1000)\n  ) +\n  labs(\n    fill = \"Accessibility to\\njobs difference\\n(in thousands)\",\n    color = \"Corridors\"\n  ) +\n  geom_sf(data = corridors_shapes, aes(color = corridor), alpha = 0.8) +\n  scale_color_manual(values = c(\"#F8766D\", \"#7CAE00\", \"#00BFC4\", \"#C77CFF\")) +\n  theme_void() +\n  theme(legend.key.size = unit(0.4, \"cm\"))\n\n# combines both plots\naccess_dist / difference_dist + plot_layout(ncol = 1, heights = c(1, 1))\n\n\n\n\nThe map shows that the regions that benefit the most from the changes to the transport system are those distant from the city center, but which are still close to rapid transit stations. The job accessibility gains concentrate mainly around the South and West subway corridors, and, to a smaller extent, around some of the light rail stations. Even regions close to these corridors, although not immediately adjacent to them, have large accessibility gains, highlighting the importance of the transport network connectivity to guarantee good accessibility conditions. The region around the new East Line, on the other hand, which already concentrated some of the highest accessibility levels in the city even before the implementation of the new corridor, shows only modest accessibility gains.\nThe maps of travel time to the nearest school, however, depict a different story:\n\n# merges time to schools data with Fortaleza's spatial grid and converts the result\n# into a spatial object\ntime_to_schools <- merge(\n  time_to_schools,\n  fortaleza_grid,\n  by.x = \"id\",\n  by.y = \"id_hex\"\n)\ntime_to_schools_sf <- sf::st_sf(time_to_schools)\n\n# configures time to schools distribution maps in both scenarios\ntime_dist <- ggplot() +\n  geom_sf(data = time_to_schools_sf, aes(fill = travel_time_p50), color = NA) +\n  facet_wrap(~ scenario, nrow = 1) +\n  scale_fill_viridis_c(option = \"plasma\", direction = -1) +\n  labs(fill = \"Time to\\n closest highschool\\n\\n(in minutes)\") +\n  geom_sf(\n    data = corridors_shapes,\n    aes(color = corridor),\n    alpha = 0.8,\n    show.legend = FALSE\n  ) +\n  scale_color_manual(values = c(\"#F8766D\", \"#7CAE00\", \"#00BFC4\", \"#C77CFF\")) +\n  theme_void() +\n  theme(legend.key.size = unit(0.4, \"cm\"))\n\n# configures difference map\ntime_diff_dist <- ggplot() +\n  geom_sf(\n    data = subset(time_to_schools_sf, !is.na(difference)),\n    aes(fill = difference),\n    color = NA\n  ) +\n  scale_fill_viridis_c(option = \"viridis\", direction = -1) +\n  labs(\n    fill = \"Time to\\nclosest highschool\\ndifference\\n(in minutes)\"\n  ) +\n  geom_sf(data = corridors_shapes, aes(color = corridor), alpha = 0.8) +\n  scale_color_manual(values = c(\"#F8766D\", \"#7CAE00\", \"#00BFC4\", \"#C77CFF\")) +\n  theme_void() +\n  theme(legend.key.size = unit(0.4, \"cm\"))\n\n# combines both plots\ntime_dist / time_diff_dist + plot_layout(ncol = 1, heights = c(1, 1))\n\n\n\n\nThe East Line and the changes to the subway and light rail frequencies barely affect the accessibility to public highschools in Fortaleza. Very few hexagons present any accessibility gain between scenarios, with the exception of a small number of grid cells very close to subway stations. As we can see, the spatial distribution of access to schools presents a much more evenly distributed pattern than the job accessibility distribution pattern. Again, this is a consequence of how public highschools are distributed in the city: unlike the jobs distribution, which tends to follow economic criteria, the spatial planning of public schools in Brazil are guided by proximity and equity guidelines aiming to increase the proximity between schools and vulnerable population groups. Nonetheless, the degree of success of education policies in promoting equitable accessibility can greatly vary between cities and for different education levels such as early childhood and primary education (Saraiva et al. 2023)."
  },
  {
    "objectID": "6_cenarios_transporte.en.html#accessibility-inequality",
    "href": "6_cenarios_transporte.en.html#accessibility-inequality",
    "title": "6  Comparing accessibility between two transport scenarios",
    "section": "6.6 Accessibility inequality",
    "text": "6.6 Accessibility inequality\nA key dimension to assess transport policies is related to their distributive aspects. Who are the winners and losers? From an equity perspective, we expect public policies to prioritize improvements on the accessibility conditions of those with worse socioeconomic conditions and who depend on public transport the most (Pereira, Schwanen, and Banister 2017; van Wee 2022).\nIn this section, we look at how the job accessibility gains that result from the East Line implementation coupled with changes to subway and light rail frequencies are distributed between different income groups. To do this, we need to understand how the accessibility levels were distributed among the population in 2019, before the transport intervention, and after the implementation of such changes. With the code below, we use the information of the classification of each hexagon in terms of income decile to investigate the accessibility distribution between income groups, before and after the changes to the transport system.\n\nggplot(data = access_to_jobs[population > 0]) +\n  geom_boxplot(\n    aes(\n      x = as.factor(decile),\n      y = access_to_jobs / 1000,\n      color = as.factor(decile),\n      weight = population,\n      group = decile\n    ),\n    show.legend = FALSE\n  ) +\n  facet_wrap(~ scenario, nrow = 1) +\n  scale_colour_brewer(palette = \"RdBu\") +\n  labs(x = \"Income decile\", y = \"Accessible jobs\\n(in thousands)\") +\n  scale_x_discrete(\n    labels = c(\"D1\\npoorest\", paste0(\"D\", 2:9), \"D10\\nwealthiest\")\n  ) +\n  theme_minimal()\n\n\n\n\nThis figure clearly shows that the wealthiest people in Fortaleza have higher job accessibility than their poorer counterparts, both before and after the changes to the transport system. In Fortaleza, as in most Brazilian cities, the wealthiest populations tend to live closer to the city center and areas with higher concentration of jobs, whereas the poorest tend to reside in the city’s outskirts (Pereira et al. 2022). Consequently, the wealthiest usually have better urban accessibility conditions than the poorest - not only because they tend to live closer to their jobs, but also because these regions tend to be better served by public transport than urban peripheries.\nHowever, it is difficult to see in this figure the magnitude of the variation in accessibility between the two scenarios. Using the same strategy that we have previously used, we present in the following figure the distribution of accessibility gains between the scenarios for the population in each income decile:\n\nggplot(subset(access_to_jobs, population > 0 & !is.na(difference))) +\n  geom_boxplot(\n    aes(\n      x = as.factor(decile),\n      y = difference / 1000,\n      color = as.factor(decile),\n      weight = population,\n      group = decile\n    ),\n    show.legend = FALSE\n  ) +\n  scale_colour_brewer(palette = \"RdBu\") +\n  labs(\n    x = \"Income decile\",\n    y = \"Job accessibility difference\\n(in thousands)\"\n  ) +\n  scale_x_discrete(\n    labels = c(\"D1\\npoorest\", paste0(\"D\", 2:9), \"D10\\nwealthiest\")\n  ) +\n  theme_minimal()\n\n\n\n\nAs we can see, the distribution of accessibility gains follows an inverted-U shape. There are relatively higher gains among middle-income groups and smaller gains for the poorest and wealthiest populations. The hexagon that gained the most accessibility falls into the 8th decile category, and it is an outlier that would be able to access almost 200,000 jobs more in comparison to the pre-changes scenario.\nCharts such as the ones shown in the last two figures are not the simplest to communicate, exactly because they contain lots of information. To facilitate this communication, summary measures are frequently used to assess the impact of transport policies on accessibility inequalities. This type of measure tries to summarize the distribution of accessibility levels among population groups (here, income deciles) into a single indicator that facilitates the understanding and interpretation of the results and that can be used, for example, when developing plans and setting goals. In the accessibility literature, two of the most frequently used inequality measures are the Palma Ratio and the Gini Index (Lucas, van Wee, and Maat 2016; Guzman and Oviedo 2018; Pritchard et al. 2019).\nIn this example, we calculate the Palma Ratio before and after the intervention to the transport system. This measure is the result of dividing the average accessibility of the wealthiest 10% by the average accessibility of the poorest 40%:\n\\[P = \\frac{\\overline{A_{tp10}}}{\\overline{A_{bt40}}}\\]\nin which \\(P\\) is the Palma Ratio, \\(\\overline{A_{tp10}}\\) is the average accessibility of the richest 10% and \\(\\overline{A_{bt40}}\\) is the average accessibility of the poorest 40%.\n\n\n\n\n\n\nWhy use the Palma Ratio?\n\n\n\n\n\nOne of the main advantages of the Palma Ratio over the Gini Index is how easy it is to communicate and interpret. Values higher than 1 indicate a scenario in which the wealthiest have higher average accessibility levels than the poorest, and values lower than 1 the opposite situation. Another advantage of the Palma Ratio is that it clearly reflects how the inequality varies between two groups of particular interest to us: in this case the wealthy and the poor population. The Gini Index, on the other hand, estimates how much a distribution deviates from a hypothetical situation in which everyone has the exact same access level, but says nothing about the socioeconomic conditions of those with the highest and lowest accessibility levels. If a given policy increases the accessibility levels of wealthy people that live in low-accessibility regions, for example, the Gini Index would point to an inequality decrease, even if not a single vulnerable citizen had benefited from this policy. Such a policy can hardly be assessed as equitable, even if the summary measure (the Gini Index, in this case) suggests otherwise.\n\n\n\nCalculating the Palma Ratio before and after the East Line implementation and the changes to the subway and light rail frequencies allows us to understand how these policies impact the inequality in access to employment opportunities in Fortaleza:\n\n# calculates the wealthiest's average accessibility in both scenarios\nwealthiest_access <- access_to_jobs[\n  decile == 10,\n  .(access = weighted.mean(access_to_jobs, w = as.numeric(population))),\n  by = scenario\n]\n\n# calculates the poorest's average accessibility in both scenarios\npoorest_access <- access_to_jobs[\n  decile %in% 1:4,\n  .(access = weighted.mean(access_to_jobs, w = as.numeric(population))),\n  by = scenario\n]\n\n# combines the wealthiest's and the poorest's accessibility\npalma_ratio <- merge(\n  wealthiest_access,\n  poorest_access,\n  by = \"scenario\",\n  suffixes = c(\"_wealthiest\", \"_poorest\")\n)\n\n# calculates the palma ratio\npalma_ratio[, palma := access_wealthiest / access_poorest]\n\nggplot(data = palma_ratio, aes(x = scenario, y = palma)) +\n  geom_col(fill = \"#0d6556\") +\n  geom_text(\n    aes(label = round(palma, digits = 2)),\n    vjust = 1.5,\n    color = \"white\",\n    size = 10\n  ) +\n  ylab(\"Palma Ratio\") +\n  theme_minimal()\n\n\n\n\nThe figure above shows that, in 2019, the wealthiest groups in Fortaleza could access on average, 2.17 times more jobs than the poorest population by public transport in 60 minutes. The chart also shows that the inequality, as measured by the Palma Ratio, slightly decreased between the pre- and post-intervention scenarios. Thus, we can say that, in this simplified case study, the proposed subway expansion combined with the changes to the subway and light rail frequencies would be slightly progressive. In other words, these interventions would reduce inequality in access to jobs between high- and low-income populations in Fortaleza.\n\n\n\n\n\n\nIt’s important to emphasize that the transport project assessment presented in this chapter looks at a simplified intervention scenario for didactic purposes. For a more complete assessment of the East Line implementation and the changes foreseen in the Pasfor, which also includes changes to the bus network, please see Braga et al. (2022) (in Portuguese).\n\n\n\nIn this chapter, we have focused on assessing the accessibility impact of a transport policy. It’s worth noting, however, that a complete assessment of a public policy must also consider other criteria such as community engagement with the policy development and decision-making process, as well as other environmental, economic and social impacts of the policy. Although an accessibility impact assessment is very important to determine who benefit from the transport policy and how such policy impact the performance of the transport network, this type of analysis only looks at a single impact dimension, and should be complemented by other analyzes.\n\n\n\n\nBraga, Carlos Kaue Vieira, Diego Bogado Tomasiello, Daniel Herszenhut, João Lucas Albuquerque Oliveira, and Rafael H. M. Pereira. 2022. “Impactos da expansão do metrô de Fortaleza sobre o acesso a oportunidades de emprego, saúde e educação.” {Texto para Discuss\\~ao} 2767. Instituto de Pesquisa Econômica Aplicada (Ipea).\n\n\nGuzman, Luis A., and Daniel Oviedo. 2018. “Accessibility, Affordability and Equity: Assessing ‘Pro-Poor’ Public Transport Subsidies in Bogotá.” Transport Policy 68 (September): 37–51. https://doi.org/10.1016/j.tranpol.2018.04.012.\n\n\nLucas, Karen, Bert van Wee, and Kees Maat. 2016. “A Method to Evaluate Equitable Accessibility: Combining Ethical Theories and Accessibility-Based Approaches.” Transportation 43 (3): 473–90. https://doi.org/10.1007/s11116-015-9585-2.\n\n\nPereira, Rafael H. M., Carlos Kauê Vieira Braga, Daniel Herszenhut, Marcus Saraiva, and Diego Bogado Tomasiello. 2022. “Estimativas de acessibilidade a empregos e serviços públicos via transporte ativo, público e privado nas 20 maiores cidades do Brasil em 2017, 2018, 2019.” Texto para Discussão IPEA 2800.\n\n\nPereira, Rafael H. M., Tim Schwanen, and David Banister. 2017. “Distributive Justice and Equity in Transportation.” Transport Reviews 37 (2): 170–91. https://doi.org/10.1080/01441647.2016.1257660.\n\n\nPritchard, John P., Diego Tomasiello, Mariana Giannotti, and Karst Geurs. 2019. “An International Comparison of Equity in Accessibility to Jobs: London, São Paulo and the Randstad.” Findings, February. https://doi.org/10.32866/7412.\n\n\nSaraiva, Marcus, Luiz Pedro Silva, Carlos Kauê Vieira Braga, and Rafael Henrique Moraes Pereira. 2023. “Transporte urbano e insuficiência de acesso a escolas no Brasil.” {Texto para Discuss\\~ao} 2854. Instituto de Pesquisa Econômica Aplicada (Ipea).\n\n\nvan Wee, Bert. 2022. “Accessibility and Equity: A Conceptual Framework and Research Agenda.” Journal of Transport Geography 104 (October): 103421. https://doi.org/10.1016/j.jtrangeo.2022.103421."
  },
  {
    "objectID": "s5_dados_aop.en.html",
    "href": "s5_dados_aop.en.html",
    "title": "SECTION 5: Data from the Access to Opportunity Project",
    "section": "",
    "text": "The purpose of this section is (1) to present the accessibility, land use and socioeconomic data provided by the Access to Opportunities Project (AOP), as well as (2) to teach how to download and use them with the R package {aopdata}.\nIn the previous chapters, we learned about the concept of accessibility, and how to calculate accessibility measures using R. However, we often come across situations when we do not want to calculate accessibility levels on our own, either because we do not have the time or data necessary for this or simply because others have already calculated these estimates. Throughout the next chapters, we will present the database output of the Access to Opportunities Project (AOP).\nThe Access to Opportunities Project is a research initiative led by the Institute for Applied Economic Research (Ipea) with the aim to study transport accessibility and inequalities in access to opportunities in Brazilian cities. All of the data outputs produced by the AOP team are made publicly available. The AOP data includes not only urban accessibility estimates, but also information on the spatial distribution of the population, economic activities and public services. The data is spatially aggregated into a hexagonal grid that follows the H3, originally developed by Uber (Brodsky 2018). Each hexagonal cell is about 0.11 km², an area similar to that covered by a city block, allowing analysis at a high spatial resolution. As shown in Figure 1, accessibility estimates are available for the years 2017, 2018 and 2019 and for the 20 largest cities in Brazil, considering different modes of transport (walking, cycling, public transport and automobile), times of day (peak and off-peak), population groups (aggregated by income, race, sex and age) and types of activity (jobs, schools, health services and social assistance centers).\n\n\n\n\n\n\nThe methods used to generate these data are presented in detail in separate publications for population and land use data (Pereira, Herszenhut, et al. 2022) and for accessibility data (Pereira, Braga, et al. 2022).\n\n\n\n\n\n\n\n\nFigure 1: Scope of the AOP data\n\n\n\n\nAccessibility estimates by public transport were estimated only for the cities with good quality GTFS data shared with the AOP team. These cities are Belo Horizonte, Campinas, Curitiba, Fortaleza, Goiânia1, Porto Alegre, Recife, Rio de Janeiro and São Paulo. The GTFS feeds of a few cities were only available for a few years, or had quality issues and were not representative of public transportation operations. Accessibility estimates by public transport were not calculated for these cases. Figure 2 shows the cities included in the project and the transport modes considered in each city.\n\n\n\n\n\nFigure 2: Geographic scope of the AOP data (* indicates the cities that do not have accessibility estimates by public transport for all years)\n\n\n\n\nThe following tables summarize the data made available by the project. Table 1 presents the data on urban accessibility:\n\n\n\n\nTable 1: Accessibility indicators calculated in the Opportunity Access Project\n\n\n\n\n\n\n\n\nIndicator (code)\nDescription\nType of opportunities\nTravel time thresholds\n\n\n\n\nMinimum travel time (TMI)\nTime to nearest opportunity\nHealth, Education, reference centers for social assistance (CRAS)\nOn foot (60 mins); bicycle, public transport and car (120 mins)\n\n\nActive cumulative accessibility measure (CMA)\nNumber of accessible opportunities in a given travel time threshold\nWork, Health, Education, CRAS\nOn foot and bicycle (15, 30, 45 and 60 mins); public transport and car (15, 30, 60, 90 and 120 mins)\n\n\nPassive cumulative accessibility measure (CMP)\nNumber of people that can access a given place in a given travel time threshold\n-\nOn foot and bicycle (15, 30, 45 and 60 mins); public transport and car (15, 30, 60, 90 and 120 mins)\n\n\n\n\n\n\nMeanwhile, Table 2 presents data on socioeconomic characteristics of the population and spatial distribution of opportunities:\n\n\n\n\nTable 2: Socioeconomic information of the population and spatial distribution of activities by year of reference and data source\n\n\n\n\n\n\n\n\nData\nInformation\nYears\nSource\n\n\n\n\nSociodemographic characteristics of the population\nNumber of people by sex, age and race; average household income per capita\n2010\nDemographic Census, IBGE\n\n\nEducation services\nNumber of public schools by level of education (early childhood, primary and secondary education)\n2017, 2018, 2019\nSchool Census, Inep\n\n\nHealth services\nNumber of health facilities that serve the SUS according to the level of care (low, medium and high complexity)\n2017, 2018, 2019\nNational Registry of Health Facilities (CNES), Ministry of Health\n\n\nEconomic activity\nNumber of formal jobs by to the level of education of workers (primary, secondary and tertiary education)\n2017, 2018, 2019\nNational register of firms and workers (RAIS), Ministry of Economy\n\n\nSocial welfare services\nNumber of reference centers for social assistance (CRAS)\n2017, 2018, 2019\nUnified Social Assistance System Census (SUAS Census), Ministry of Citizenship\n\n\n\n\n\n\nAll data sets created by AOP are available for download from the project website or through the R package {aopdata}. The data dictionary can be accessed at this link or, in an R session, with the command aopdata::aopdata_dictionary(lang = \"en\"). The chapters in this section provide several examples of how to download and visualize these data in R.\n\n\n\n\nBrodsky, Isaac. 2018. “H3: Uber’s Hexagonal Hierarchical Spatial Index.” Uber Engineering Blog. https://eng.uber.com/h3/.\n\n\nPereira, Rafael H. M., Carlos Kauê Vieira Braga, Daniel Herszenhut, Marcus Saraiva, and Diego Bogado Tomasiello. 2022. “Estimativas de acessibilidade a empregos e serviços públicos via transporte ativo, público e privado nas 20 maiores cidades do Brasil em 2017, 2018, 2019.” Texto para Discussão IPEA 2800.\n\n\nPereira, Rafael H. M., Daniel Herszenhut, Carlos Kauê Vieira Braga, João Pedro Bazzo, João Lucas Albuquerque Oliveira, João Pedro Parga, Marcus Saraiva, Luiz Pedro Silva, Lucas Warwar, and Diego Bogado Tomasiello. 2022. “Distribuição espacial de características sociodemográficas e localização de empregos e serviços públicos das vinte maiores cidades do Brasil.” Texto para Discussão IPEA 2772 (June): 28. https://doi.org/10.38116/td2772.\n\n\n\n\n\nThe GTFS of Goiânia covers the public transport network of its entire metropolitan region, not only the municipality.↩︎"
  },
  {
    "objectID": "7_aopdata_populacao.en.html#spatial-distribution-of-population",
    "href": "7_aopdata_populacao.en.html#spatial-distribution-of-population",
    "title": "7  Population and socioeconomic data",
    "section": "7.1 Spatial distribution of population",
    "text": "7.1 Spatial distribution of population\nIn the code below, we load a couple data visualization libraries and create the map. With a single command, we can visualize the spatial distribution of the population of Fortaleza. The figure shows a choropleth map where the color of each grid cell represents the total size of its resident population (variable P001).\n\nlibrary(patchwork)\nlibrary(ggplot2)\n\nggplot(subset(data_fortaleza, P001 > 0)) +\n  geom_sf(aes(fill = P001), color = NA, alpha = 0.8) +\n  scale_fill_distiller(palette = \"YlOrRd\", direction = 1) +\n  labs(\n      title = \"Spatial distribution of the population\",\n      subtitle = \"Fortaleza\",\n      fill = \"Population count\"\n  ) +\n  theme_void()"
  },
  {
    "objectID": "7_aopdata_populacao.en.html#map-of-population-by-race",
    "href": "7_aopdata_populacao.en.html#map-of-population-by-race",
    "title": "7  Population and socioeconomic data",
    "section": "7.2 Map of population by race",
    "text": "7.2 Map of population by race\nBesides reporting the total population count in each cell, the data also includes information on population count by race (variables P002 to P005), gender (variables P006 and P007) and age group (variables P010 to P016). The code below illustrates how simple it is to calculate the proportion of black and white people in each hexagon and visualize these proportions on a map.\n\npop_black <- ggplot(subset(data_fortaleza, P001 > 0)) +\n  geom_sf(aes(fill = P003 / P001), color = NA, alpha = 0.8) +\n  scale_fill_distiller(\n      palette = \"RdPu\",\n      direction = 1,\n      labels = scales::percent,\n      limits = c(0, 1)\n  ) +\n  labs(title = \"Proportion of black people\", fill = \"Black pop\") +\n  theme_void()\n\npop_white <- ggplot(subset(data_fortaleza, P001 > 0)) +\n  geom_sf(aes(fill = P002 / P001), color = NA, alpha = 0.8) +\n  scale_fill_distiller(\n      palette = \"YlGnBu\",\n      direction = 1,\n      labels = scales::percent,\n      limits = c(0, 1)\n  ) +\n  labs(title = \"Proportion of white people\", fill = \"White pop\") +\n  theme_void()\n\npop_black + pop_white"
  },
  {
    "objectID": "7_aopdata_populacao.en.html#map-of-population-by-income",
    "href": "7_aopdata_populacao.en.html#map-of-population-by-income",
    "title": "7  Population and socioeconomic data",
    "section": "7.3 Map of population by income",
    "text": "7.3 Map of population by income\nFinally, the data also provide information about the average income per capita of each hexagon (R001) and its classification in terms of quintile (R002) and income decile (R003). Using this data, we can visualize the spatial distribution of income levels in the city.\n\nincome <- ggplot(subset(data_fortaleza, P001 > 0)) +\n  geom_sf(aes(fill = R001), color = NA, alpha = 0.8) +\n  scale_fill_distiller(palette = \"YlOrRd\", direction = 1) +\n  labs(title = \"Average income per capita\", fill = \"Income (R$)\") +\n  theme_void()\n\ndeciles <- ggplot(subset(data_fortaleza, !is.na(R002))) +\n  geom_sf(aes(fill = factor(R003)), color = NA, alpha = 0.8) +\n  scale_fill_brewer(palette = \"RdBu\") +\n  labs(\n      title = \"Deciles of average income per capita\",\n      fill = \"Income decile\"\n  ) +\n  theme_void() +\n  theme(legend.key.size = unit(0.3, \"cm\"))\n\nincome + deciles"
  },
  {
    "objectID": "8_aopdata_uso_solo.en.html#map-of-employment",
    "href": "8_aopdata_uso_solo.en.html#map-of-employment",
    "title": "8  Data on the spatial distribution of opportunities",
    "section": "8.1 Map of employment",
    "text": "8.1 Map of employment\nIn the code below, we load a couple data visualization libraries and create the map. The variables starting with the letter T are those that describe the spatial distribution of jobs in each city. The code below shows the spatial distribution of the total number of jobs in each hexagon (variable T001) in Belo Horizonte:\n\nlibrary(patchwork)\nlibrary(ggplot2)\n\nggplot(data_bh) +\n  geom_sf(aes(fill = T001), color = NA, alpha = 0.9) +\n  scale_fill_distiller(palette = \"YlGnBu\", direction = 1) +\n  labs(\n      title = \"Spatial distribution of jobs\",\n      subtitle = \"Belo Horizonte\",\n      fill = \"N. of jobs\"\n  ) +\n  theme_void()"
  },
  {
    "objectID": "8_aopdata_uso_solo.en.html#map-of-schools",
    "href": "8_aopdata_uso_solo.en.html#map-of-schools",
    "title": "8  Data on the spatial distribution of opportunities",
    "section": "8.2 Map of schools",
    "text": "8.2 Map of schools\nVariables with information about the number of public schools in each cell, in turn, begin with the letter E. In the example below, we present the spatial distribution of all public schools in Belo Horizonte (variable E001).\n\nggplot(data_bh) +\n  geom_sf(aes(fill = as.factor(E001)), color = NA, alpha = 0.9) +\n  scale_fill_brewer(palette = \"YlGnBu\", direction = 1) +\n  labs(\n      title = \"Spatial distribution of schools\",\n      subtitle = \"Belo Horizonte\",\n      fill = \"N. of schools\"\n  ) +\n  theme_void()"
  },
  {
    "objectID": "8_aopdata_uso_solo.en.html#map-of-health-facilities",
    "href": "8_aopdata_uso_solo.en.html#map-of-health-facilities",
    "title": "8  Data on the spatial distribution of opportunities",
    "section": "8.3 Map of health facilities",
    "text": "8.3 Map of health facilities\nThe variables related to the number of public health facilities in each cell begin with the letter S. The visualization below compares the spatial distribution of low complexity (S002) and high complexity (S004) public health facilities.\n\nlow_complexity <- ggplot(data_bh) +\n  geom_sf(aes(fill = as.factor(S002)), color = NA, alpha = 0.9) +\n  scale_fill_brewer(palette = \"YlGnBu\", direction = 1, limits = factor(0:4)) +\n  labs(\n      title = \"Health facilities\",\n      subtitle = \"Low complexity\",\n      fill = \"N. of facilities\"\n  ) +\n  theme_void()\n\nhigh_complexity <- ggplot(data_bh) +\n  geom_sf(aes(fill = as.factor(S004)), color = NA, alpha = 0.9) +\n  scale_fill_brewer(palette = \"YlGnBu\", direction = 1, limits = factor(0:4)) +\n  labs(\n      title = \"Health facilities\",\n      subtitle = \"High complexity\",\n      fill = \"N. of facilities\"\n  ) +\n  theme_void()\n\nlow_complexity + high_complexity + plot_layout(guides = \"collect\")"
  },
  {
    "objectID": "8_aopdata_uso_solo.en.html#cras-map",
    "href": "8_aopdata_uso_solo.en.html#cras-map",
    "title": "8  Data on the spatial distribution of opportunities",
    "section": "8.4 CRAS map",
    "text": "8.4 CRAS map\nFinally, the variable C001 describes the spatial distribution of Social Assistance Reference Centers (CRAS) in each city. The map below shows the spatial distribution of these services in Belo Horizonte.\n\nggplot(data_bh) +\n  geom_sf(aes(fill = as.factor(C001)), color = NA, alpha = 0.9) +\n  scale_fill_brewer(palette = \"YlGnBu\", direction = 1) +\n  labs(\n      title = \"Social Assistance Reference Centers (CRAS)\",\n      subtitle = \"Belo Horizonte\",\n      fill = \"N. of CRAS\"\n  ) +\n  theme_void()"
  },
  {
    "objectID": "9_aopdata_acessibilidade.en.html#map-of-travel-time-to-access-the-nearest-hospital",
    "href": "9_aopdata_acessibilidade.en.html#map-of-travel-time-to-access-the-nearest-hospital",
    "title": "9  Accessibility estimates",
    "section": "9.1 Map of travel time to access the nearest hospital",
    "text": "9.1 Map of travel time to access the nearest hospital\nIn this example, we compared the access time by car and public transport to the nearest hospital for each hexagon. To analyze the minimum travel time (TMI) to high complexity hospitals (SA), we used the variable TMISA. With the code below, we load the data visualization libraries and create the maps showing the spatial distribution of access time for both cars and public transport. Because travel times by public transport are usually much longer than by car, we truncate the distribution of values to 60 minutes or more.\n\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# truncates travel times to 60 minutes\ndata_sp$TMISA <- ifelse(data_sp$TMISA > 60, 60, data_sp$TMISA)\n\nggplot(subset(data_sp, !is.na(mode))) +\n  geom_sf(aes(fill = TMISA), color = NA, alpha = 0.9) +\n  scale_fill_viridis_c(\n      option = \"cividis\",\n      direction = -1,\n      breaks = seq(0, 60, 10),\n      labels = c(seq(0, 50, 10), \"60+\")\n  ) +\n  labs(\n      title = \"Travel time to the nearest high complex hospital\",\n      subtitle = \"São Paulo\",\n      fill = \"Time in\\nminutes\"\n  ) +\n  facet_wrap(~ mode) +\n  theme_void()"
  },
  {
    "objectID": "9_aopdata_acessibilidade.en.html#map-of-employment-accessibility",
    "href": "9_aopdata_acessibilidade.en.html#map-of-employment-accessibility",
    "title": "9  Accessibility estimates",
    "section": "9.2 Map of employment accessibility",
    "text": "9.2 Map of employment accessibility\n{aopdata} data also makes it very easy to compare the number of opportunities accessible at different travel times. Using the code below, for example, we illustrate how to visualize side-by-side the spatial distribution of employment accessibility in up to 60 and 90 minutes of travel by public transport.\n\n# determine min and max values for the legend\nlimit_values  <-c(0, max(access_pt $CMATT90, na.rm = TRUE) / 1000)\n\n# create maps\n\nfig60 <- ggplot(subset(access_pt, ! is.na(mode))) +\n  geom_sf(aes(fill = CMATT60 / 1000), color = NA, alpha = 0.9) +\n  scale_fill_viridis_c(option = \"inferno\", limits = limit_values) +\n  labs( subtitle = \"in up to 60 min.\" , fill = \"Jobs\\n(in thousands)\") +\n  theme_void()\n\nfig90 <- ggplot(subset(access_pt, !is.na(mode))) +\n  geom_sf(aes(fill = CMATT90 / 1000), color = NA, alpha = 0.9) +\n  scale_fill_viridis_c(option = \"inferno\", limits = limit_values) +\n  labs(subtitle = \"up to 90 min.\", fill = \"Jobs\\n(in thousands)\") +\n  theme_void()\n\nfig60 +\n  fig90 +\n  plot_layout(guides = \"collect\") +\n  plot_annotation(\n    title = \"Number of jobs accessible by public transport\",\n    subtitle = \"São Paulo\"\n  )"
  },
  {
    "objectID": "9_aopdata_acessibilidade.en.html#inequalities-in-access-to-opportunities",
    "href": "9_aopdata_acessibilidade.en.html#inequalities-in-access-to-opportunities",
    "title": "9  Accessibility estimates",
    "section": "9.3 Inequalities in access to opportunities",
    "text": "9.3 Inequalities in access to opportunities\nFinally, the data from {aopdata} can be used in different ways to analyze the level of inequality in access to opportunities across different cities in Brazil. In this subsection, we present three examples of this type of analysis.\nInequality in travel time to access opportunities\nIn this first example, we will compare the average travel time to the nearest public hospital for people of different income levels. To do this, we first need to calculate for each income group the average travel time to reach the nearest high complexity health facility weighted by the population of each hexagon. This weighting is necessary because each hexagon has a different population size and thus contributes differently to the average accessibility of the population as a whole.\nBefore performing the calculation, it should be noted that some hexagons in the city cannot access any hospital within two hours of travel. In these cases, the value of the minimum travel time variables is infinite (Inf). To deal with these cases, we will replace all Inf values with a travel time of 120 minutes for this example.\n\n# copies access data into a new data.frame\nineq_pt <-data.table::as.data.table(access_pt)\n\n# replaces Inf values with 120\nineq_pt [, TMISA := ifelse(is.infinite(TMISA), 120, TMISA)]\n\n# calculates the average travel time by income decile\nineq_pt <- ineq_pt[\n  ,\n  .( avrg = weighted.mean(x = TMISA, w = P001, na.rm = TRUE)),\n  by = R003\n]\nineq_pt <- subset(ineq_pt, ! is.na(avrg))\n\nggplot(ineq_pt) +\n  geom_col(aes(y = avrg, x = factor(R003)), fill = \"#2c9e9e\", color = NA) +\n  scale_x_discrete(\n      labels = c(\"D1\\npoorest\", paste0(\"D\", 2:9), \"D10\\nwealthiest\")\n  ) +\n  labs(\n    title = \"Average travel time to the nearest hospital\",\n    subtitle = \"by public transport in São Paulo \",\n    x = \"Income Decile\",\n    y = \"Travel time in min.\"\n  ) +\n  theme_minimal()\n\n\n\n\nInequality in the number of accessible opportunities\nAnother way to examine the inequality of access to opportunities is to compare the number of opportunities accessible by different population groups considering the same modes of transport and travel time limits. In this example, we analyze the active cumulative opportunity accessibility metric, available through the variables starting with CMA in the {aopdata} database. Using the code below, we compare the number of jobs accessible by people of different income deciles by public transport in up to 60 minutes.\n\nggplot(subset(access_pt, !is.na(R003))) +\n  geom_boxplot(\n      aes(x = factor(R003), y = CMATT60 / 1000, color = factor(R003))\n  ) +\n  scale_color_brewer(palette = \"RdBu\") +\n  labs(\n      title = \"Distribution of the number of jobs accessible within 60 min.\",\n      color = \"Income\\ndecile\",\n      subtitle = \"by public transport, São Paulo\",\n      x = \"Income decile\",\n      y = \"N. of accessible jobs\\n(in thousands)\"\n  ) +\n  scale_x_discrete(\n      labels = c(\"D1\\npoorest\", paste0(\"D\", 2:9), \"D10\\nwealthiest\")\n  ) +\n  theme_minimal()\n\n\n\n\nFinally, we can also compare how different modes of transport can lead to different levels of accessibility and how this difference varies between cities. In the example below, we compare the number of jobs accessible in up to 30 minutes of walking and driving. To do this, we first need to download accessibility data by both transport modes for all cities in the AOP project.\n\ndata_car <- aopdata::read_access(\n  city = \"all\",\n  mode = \"car\",\n  year = 2019,\n  showProgress = FALSE\n)\n\ndata_walk <- aopdata::read_access(\n  city = \"all\",\n  mode = \"walk\",\n  year = 2019,\n  showProgress = FALSE\n)\n\nNext, we calculate for each city and for each mode of transport the weighted average number of jobs accessible in up to 30 minutes (CMATT30). Once this is done, we put these estimates together into a single table and calculate the ratio between accessibility levels by car and walking.\n\n# calculates the average of affordable jobs in 30\n\navg_car <- data_car[\n  ,\n  .( access_car = weighted.mean(CMATT30, w = P001, na.rm = TRUE)),\n  by = name_muni\n]\n\navg_walk <- data_walk[\n  ,\n  .( access_walk = weighted.mean(CMATT30, w = P001, na.rm = TRUE)),\n  by = name_muni\n]\n\n# merges the data and calculates the ratio between access by car and on foot\navg_access <- merge(avg_car, avg_walk)\navg_access[, ratio := access_car / access_walk]\n\nhead(avg_access)\n\n        name_muni access_car access_walk    ratio\n1:          Belem   155270.4    9392.235 16.53179\n2: Belo Horizonte   529890.0   12464.233 42.51284\n3:       Brasilia   220575.9    4110.703 53.65892\n4:       Campinas   256333.1    6748.923 37.98133\n5:   Campo Grande   172680.5    4181.209 41.29919\n6:       Curitiba   494376.9   10471.135 47.21331\n\n\nFinally, we can visualize the results in a chart:\n\nggplot(avg_access, aes(x = ratio, y = reorder(name_muni, ratio))) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(x = ratio + 4 , label = paste0(round(ratio), \"x\"))) +\n  labs(\n      title = \"Difference between the number of jobs accessible by \\nautomobile and by foot\",\n      subtitle = \"in up to 30 min.\",\n      y = \"\",\n      x = \"Ratio between accessibility by car and walking\"\n  ) +\n  theme_classic()\n\n\n\n\nAs expected, the figure shows that it is possible to access many more jobs in 30 minutes by car than on walking trips. This difference, however, varies greatly across cities. In São Paulo and Brasília, a 30-minute car trip allows one to access, on average, 54 times more jobs than what it would be possible to access with walking trips. In Belém, the city with the smallest difference, one can access 17 times more jobs by car than walking - still a substantial difference but much smaller than those in the other cities."
  },
  {
    "objectID": "references.en.html",
    "href": "references.en.html",
    "title": "References",
    "section": "",
    "text": "Anda, Cuauhtemoc, Alexander Erath, and Pieter Jacobus Fourie. 2017.\n“Transport Modelling in the Age of Big Data.”\nInternational Journal of Urban Sciences 21 (sup1): 19–42. https://doi.org/10.1080/12265934.2017.1281150.\n\n\nArbex, Renato, and Claudio B. Cunha. 2020. “Estimating the\nInfluence of Crowding and Travel Time Variability on Accessibility to\nJobs in a Large Public Transport Network Using Smart Card Big\nData.” Journal of Transport Geography 85 (May): 102671.\nhttps://doi.org/10.1016/j.jtrangeo.2020.102671.\n\n\nBanister, David. 2008. “The Sustainable Mobility Paradigm.”\nTransport Policy 15 (2): 73–80. https://doi.org/10.1016/j.tranpol.2007.10.005.\n\n\n———. 2011. “The Trilogy of Distance, Speed and Time.”\nJournal of Transport Geography 19 (4): 950–59. https://doi.org/10.1016/j.jtrangeo.2010.12.004.\n\n\nBarrington-Leigh, Christopher, and Adam Millard-Ball. 2017. “The\nWorld’s User-Generated Road Map Is More Than 80% Complete.”\nPLOS ONE 12 (8): e0180698. https://doi.org/10.1371/journal.pone.0180698.\n\n\nBertolini, L., F. le Clercq, and L. Kapoen. 2005. “Sustainable\nAccessibility: A Conceptual Framework to Integrate Transport and Land\nUse Plan-Making. Two Test-Applications in the\nNetherlands and a Reflection on the Way Forward.”\nTransport Policy 12 (3): 207–20. https://doi.org/10.1016/j.tranpol.2005.01.006.\n\n\nBoisjoly, Geneviève, and Ahmed M. El-Geneidy. 2017. “How to Get\nThere? A Critical Assessment of Accessibility Objectives\nand Indicators in Metropolitan Transportation Plans.”\nTransport Policy 55 (April): 38–50. https://doi.org/10.1016/j.tranpol.2016.12.011.\n\n\nBraga, Carlos Kaue Vieira, Diego Bogado Tomasiello, Daniel Herszenhut,\nJoão Lucas Albuquerque Oliveira, and Rafael H. M. Pereira. 2022.\n“Impactos da expansão do metrô de Fortaleza sobre o acesso a\noportunidades de emprego, saúde e educação.” {Texto para\nDiscuss\\~ao} 2767. Instituto de Pesquisa Econômica Aplicada\n(Ipea).\n\n\nBrodsky, Isaac. 2018. “H3: Uber’s Hexagonal\nHierarchical Spatial Index.” Uber Engineering\nBlog. https://eng.uber.com/h3/.\n\n\nBüttner, Benjamin. 2021. “Accessibility Tools for\nTransport Policy and Planning.” In\nInternational Encyclopedia of\nTransportation, edited by Roger Vickerman, 83–86.\nOxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10618-9.\n\n\nCamboim, Silvana Philippi, João Vitor Meza Bravo, and Claudia Robbi\nSluter. 2015. “An Investigation into the\nCompleteness of, and the Updates to,\nOpenStreetMap Data in a Heterogeneous Area in\nBrazil.” ISPRS International Journal of\nGeo-Information 4 (3): 1366–88. https://doi.org/10.3390/ijgi4031366.\n\n\nCervero, Robert. 2005. “Accessible Cities and\nRegions: A Framework for Sustainable\nTransport and Urbanism in the 21st\nCentury.” Center for Future Urban Transport\nWorking Paper, no. UCB-ITS-VWP-2005-3 (August).\n\n\nChurch, A, M Frost, and K Sullivan. 2000. “Transport and Social\nExclusion in London.” Transport Policy 7\n(3): 195–205. https://doi.org/10.1016/S0967-070X(00)00024-X.\n\n\nConway, Matthew Wigginton, Andrew Byrd, and Marco van der Linden. 2017.\n“Evidence-Based Transit and Land Use Sketch\nPlanning Using Interactive Accessibility Methods on\nCombined Schedule and Headway-Based\nNetworks.” Transportation Research Record: Journal of\nthe Transportation Research Board 2653 (1): 45–53. https://doi.org/10.3141/2653-06.\n\n\nDijst, Martin, Tom de Jong, and Jan Ritsema van Eck. 2002.\n“Opportunities for Transport Mode Change: An\nExploration of a Disaggregated Approach.”\nEnvironment and Planning B: Planning and Design 29 (3): 413–30.\nhttps://doi.org/10.1068/b12811.\n\n\nDong, Xiaojing, Moshe E. Ben-Akiva, John L. Bowman, and Joan L. Walker.\n2006. “Moving from Trip-Based to Activity-Based Measures of\nAccessibility.” Transportation Research Part A: Policy and\nPractice 40 (2): 163–80. https://doi.org/10.1016/j.tra.2005.05.002.\n\n\nEl-Geneidy, Ahmed, David Levinson, Ehab Diab, Genevieve Boisjoly, David\nVerbich, and Charis Loong. 2016. “The Cost of Equity:\nAssessing Transit Accessibility and Social Disparity Using\nTotal Travel Cost.” Transportation Research Part A: Policy\nand Practice 91 (September): 302–16. https://doi.org/10.1016/j.tra.2016.07.003.\n\n\nFarrington, John, and Conor Farrington. 2005. “Rural\nAccessibility, Social Inclusion and Social Justice: Towards\nConceptualisation.” Journal of Transport Geography 13\n(1): 1–12. https://doi.org/10.1016/j.jtrangeo.2004.10.002.\n\n\nGeurs, Karst, and Bert van Wee. 2004. “Accessibility Evaluation of\nLand-Use and Transport Strategies: Review and Research\nDirections.” Journal of Transport Geography 12 (2):\n127–40. https://doi.org/10.1016/j.jtrangeo.2003.10.005.\n\n\nGrisé, Emily, Geneviève Boisjoly, Meadhbh Maguire, and Ahmed El-Geneidy.\n2019. “Elevating Access: Comparing Accessibility to\nJobs by Public Transport for Individuals with and Without a Physical\nDisability.” Transportation Research Part A: Policy and\nPractice 125 (July): 280–93. https://doi.org/10.1016/j.tra.2018.02.017.\n\n\nGuzman, Luis A., and Daniel Oviedo. 2018. “Accessibility,\nAffordability and Equity: Assessing ‘Pro-Poor’\nPublic Transport Subsidies in Bogotá.” Transport\nPolicy 68 (September): 37–51. https://doi.org/10.1016/j.tranpol.2018.04.012.\n\n\nHerszenhut, Daniel, Rafael H. M. Pereira, Licinio da Silva Portugal, and\nMatheus Henrique de Sousa Oliveira. 2022. “The Impact of Transit\nMonetary Costs on Transport Inequality.” Journal of Transport\nGeography 99 (February): 103309. https://doi.org/10.1016/j.jtrangeo.2022.103309.\n\n\nHiggins, Christopher, Matthew Palm, Amber DeJohn, Luna Xi, James\nVaughan, Steven Farber, Michael Widener, and Eric Miller. 2022.\n“Calculating Place-Based Transit Accessibility:\nMethods, Tools and Algorithmic Dependence.”\nJournal of Transport and Land Use 15 (1). https://doi.org/10.5198/jtlu.2022.2012.\n\n\nKandt, Jens, and Michael Batty. 2021. “Smart Cities, Big Data and\nUrban Policy: Towards Urban Analytics for the Long\nRun.” Cities 109 (February): 102992. https://doi.org/10.1016/j.cities.2020.102992.\n\n\nKim, Hyun-Mi, and Mei-Po Kwan. 2003. “Space-Time Accessibility\nMeasures: A Geocomputational Algorithm with a Focus on the\nFeasible Opportunity Set and Possible Activity Duration.”\nJournal of Geographical Systems 5 (1): 71–91. https://doi.org/10.1007/s101090300104.\n\n\nLevine, Jonathan, Joe Grengs, and Louis A. Merlin. 2019. From\nMobility to Accessibility: Transforming Urban\nTransportation and Land-Use Planning. Cornell University\nPress.\n\n\nLevinson, David, and David King. 2020. Transport Access Manual:\nA Guide for Measuring Connection Between People and\nPlaces. Committee of the Transport Access Manual, University\nof Sydney.\n\n\nLucas, Karen, Giulio Mattioli, Ersilia Verlinghieri, and Alvaro Guzman.\n2016. “Transport Poverty and Its Adverse Social\nConsequences.” Proceedings of the Institution of Civil\nEngineers - Transport 169 (6): 353–65. https://doi.org/10.1680/jtran.15.00073.\n\n\nLucas, Karen, Bert van Wee, and Kees Maat. 2016. “A Method to\nEvaluate Equitable Accessibility: Combining Ethical Theories and\nAccessibility-Based Approaches.” Transportation 43 (3):\n473–90. https://doi.org/10.1007/s11116-015-9585-2.\n\n\nLuo, Wei, and Fahui Wang. 2003. “Measures of Spatial\nAccessibility to Health Care in a GIS\nEnvironment: Synthesis and a Case Study\nin the Chicago Region.” Environment and Planning\nB: Planning and Design 30 (6): 865–84. https://doi.org/10.1068/b29120.\n\n\nLuz, Gregório, and Licinio Portugal. 2022. “Understanding\nTransport-Related Social Exclusion Through the Lens of Capabilities\nApproach.” Transport Reviews 42 (4): 503–25. https://doi.org/10.1080/01441647.2021.2005183.\n\n\nMartens, Karel. 2012. “Justice in Transport as Justice in\nAccessibility: Applying Walzer’s\n‘Spheres of Justice’ to the\nTransport Sector.” Transportation 39 (6): 1035–53. https://doi.org/10.1007/s11116-012-9388-7.\n\n\nMcHugh, Bibiana. 2013. “Pioneering Open Data\nStandards: The GTFS Story.” In Beyond\nTransparency: Open Data and the\nFuture of Civic Innovation, edited by\nBrett Goldstein and Lauren Dyson, First, 125–35. San Francisco,\nCA: Code for America Press.\n\n\nMiller, Eric J. 2018. “Accessibility: Measurement and Application\nin Transportation Planning.” Transport Reviews 38 (5):\n551–55. https://doi.org/10.1080/01441647.2018.1492778.\n\n\nNeutens, Tijs, Tim Schwanen, Frank Witlox, and Philippe De Maeyer. 2010.\n“Equity of Urban Service Delivery: A\nComparison of Different Accessibility\nMeasures.” Environment and Planning A: Economy and\nSpace 42 (7): 1613–35. https://doi.org/10.1068/a4230.\n\n\nPaez, Antonio, Christopher D. Higgins, and Salvatore F. Vivona. 2019.\n“Demand and Level of Service Inflation in Floating Catchment\nArea (FCA) Methods.” Edited by Tayyab Ikram\nShah. PLOS ONE 14 (6): e0218773. https://doi.org/10.1371/journal.pone.0218773.\n\n\nPáez, Antonio, Darren M. Scott, and Catherine Morency. 2012.\n“Measuring Accessibility: Positive and Normative Implementations\nof Various Accessibility Indicators.” Journal of Transport\nGeography 25 (November): 141–53. https://doi.org/10.1016/j.jtrangeo.2012.03.016.\n\n\nPapa, Enrica, Cecilia Silva, Marco Te Brömmelstroet, and Angela Hull.\n2015. “Accessibility Instruments for Planning Practice: A Review\nof European Experiences.” Journal of Transport\nand Land Use, June. https://doi.org/10.5198/jtlu.2015.585.\n\n\nPereira, Rafael H. M., Pedro R. Andrade, and João Pedro Bazzo Vieira.\n2022. “Exploring the Time Geography of Public Transport Networks\nwith the Gtfs2gps Package.” Journal of Geographical\nSystems, December. https://doi.org/10.1007/s10109-022-00400-x.\n\n\nPereira, Rafael H. M., Carlos Kaue Vieira Braga, Bernardo Serra, and\nVanessa Nadalin. 2019. “Desigualdades socioespaciais de\nacesso a oportunidades nas cidades brasileiras, 2019.”\n{Texto para Discuss\\~ao} 2535. Instituto de Pesquisa Econômica\nAplicada (Ipea).\n\n\nPereira, Rafael H. M., Carlos Kauê Vieira Braga, Daniel Herszenhut,\nMarcus Saraiva, and Diego Bogado Tomasiello. 2022.\n“Estimativas de acessibilidade a empregos e serviços\npúblicos via transporte ativo, público e privado nas 20 maiores cidades\ndo Brasil em 2017, 2018, 2019.” Texto para Discussão\nIPEA 2800.\n\n\nPereira, Rafael H. M., Daniel Herszenhut, Carlos K. V. Braga, Diego B.\nTomasiello, and Marcus Saraiva. 2022. “Aopdata: Data\nfrom the Access to Opportunities\nProject.” CRAN.\n\n\nPereira, Rafael H. M., Daniel Herszenhut, Carlos Kauê Vieira Braga, João\nPedro Bazzo, João Lucas Albuquerque Oliveira, João Pedro Parga, Marcus\nSaraiva, Luiz Pedro Silva, Lucas Warwar, and Diego Bogado Tomasiello.\n2022. “Distribuição espacial de características\nsociodemográficas e localização de empregos e serviços públicos das\nvinte maiores cidades do Brasil.” Texto para Discussão\nIPEA 2772 (June): 28. https://doi.org/10.38116/td2772.\n\n\nPereira, Rafael H. M., and Alex Karner. 2021. “Transportation\nEquity.” In International\nEncyclopedia of Transportation, edited by\nRoger Vickerman, 271–77. Oxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10053-3.\n\n\nPereira, Rafael H. M., Marcus Saraiva, Daniel Herszenhut, Carlos Kaue\nVieira Braga, and Matthew Wigginton Conway. 2021. “R5r:\nRapid Realistic Routing on Multimodal Transport\nNetworks with R5 in\nR.” Transport Findings, March, 21262. https://doi.org/10.32866/001c.21262.\n\n\nPereira, Rafael H. M., Tim Schwanen, and David Banister. 2017.\n“Distributive Justice and Equity in Transportation.”\nTransport Reviews 37 (2): 170–91. https://doi.org/10.1080/01441647.2016.1257660.\n\n\nPritchard, John P., Diego Tomasiello, Mariana Giannotti, and Karst\nGeurs. 2019. “An International Comparison of\nEquity in Accessibility to Jobs:\nLondon, São Paulo and the\nRandstad.” Findings, February. https://doi.org/10.32866/7412.\n\n\nSaraiva, Marcus, Luiz Pedro Silva, Carlos Kauê Vieira Braga, and Rafael\nHenrique Moraes Pereira. 2023. “Transporte urbano e\ninsuficiência de acesso a escolas no Brasil.” {Texto para\nDiscuss\\~ao} 2854. Instituto de Pesquisa Econômica Aplicada\n(Ipea).\n\n\nSilva, Cecília, Luca Bertolini, Marco te Brömmelstroet, Dimitris\nMilakis, and Enrica Papa. 2017. “Accessibility Instruments in\nPlanning Practice: Bridging the Implementation Gap.”\nTransport Policy 53 (January): 135–45. https://doi.org/10.1016/j.tranpol.2016.09.006.\n\n\nvan Wee, Bert. 2021. “Transport Modes and\nAccessibility.” In International\nEncyclopedia of Transportation, edited by\nRoger Vickerman, 32–37. Oxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10402-6.\n\n\n———. 2022. “Accessibility and Equity: A Conceptual\nFramework and Research Agenda.” Journal of Transport\nGeography 104 (October): 103421. https://doi.org/10.1016/j.jtrangeo.2022.103421.\n\n\nVasconcellos, Eduardo Alcantara. 2018. “Urban Transport Policies\nin Brazil: The Creation of a Discriminatory\nMobility System.” Journal of Transport Geography 67\n(February): 85–91. https://doi.org/10.1016/j.jtrangeo.2017.08.014.\n\n\nVenter, Christoffel. 2016. “Assessing the Potential of Bus Rapid\nTransit-Led Network Restructuring for Enhancing Affordable Access to\nEmployment The Case of Johannesburg’s\nCorridors of Freedom.” Research in\nTransportation Economics 59 (November): 441–49. https://doi.org/10.1016/j.retrec.2016.05.006."
  }
]